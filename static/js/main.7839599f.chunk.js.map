{"version":3,"sources":["components/Message.js","components/Controls.js","lib/utility.js","models/Model.js","models/ColoredModel.js","scenes/ColoredCubeScene.js","models/TexturedCubeModel.js","scenes/TexturedCubeScene.js","models/LightedCubeModel.js","scenes/LightedCubeScene.js","models/MazeModel.js","scenes/MazeScene.js","models/BrickWallModel.js","scenes/BrickWallScene.js","models/MaterialModel.js","scenes/MaterialScene.js","models/RoomModel.js","scenes/RoomScene.js","lib/SceneManager.js","components/App.js","serviceWorker.js","index.js"],"names":["Message","message","onClick","id","map","text","index","key","SelectControl","props","control","options","i","length","push","value","className","htmlFor","name","onChange","event","target","BoolControl","type","checked","IntControl","min","max","FloatControl","factor","toFixed","Math","floor","Controls","controls","show","onClickPrevious","onClickNext","option","_typeToString","gl","FLOAT","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT","INT_VEC2","INT_VEC3","INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","SAMPLER_CUBE","_loadShader","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","alert","getShaderInfoLog","deleteShader","loadTexture","url","texture","createTexture","bindTexture","TEXTURE_2D","internalFormat","RGBA","srcFormat","srcType","UNSIGNED_BYTE","pixel","Uint8Array","texImage2D","image","Image","onload","_isPowerOf2","width","height","generateMipmap","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","src","clearScreen","clearColor","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","_directions","x","y","getShape","shape","s3","sqrt","s6","vertices","faces","r","a","phi","b","c","_materials","emerald","ambient","diffuse","specular","shininess","jade","obsidian","pearl","ruby","turquoise","brass","bronze","chrome","copper","gold","silver","blackPlastic","cyanPlastic","greenPlastic","redPlastic","whitePlastic","yellowPlastic","blackRubber","cyanRubber","greenRubber","redRubber","whiteRubber","yellowRubber","getMaterialList","materials","prop","hasOwnProperty","getMaterial","Model","vertexShader","fragmentShader","geometry","textures","normal","occlusion","Promise","all","fetch","vertex","then","response","fragment","_setupShader","buffers","_initBuffers","model","shaders","vertexShaders","Array","fill","fragmentShaders","pendingLoads","shaderProgram","vsSource","fsSource","VERTEX_SHADER","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","initShaderProgram","shaderParameters","attributeCount","ACTIVE_ATTRIBUTES","attributes","attribute","getActiveAttrib","uniformCount","ACTIVE_UNIFORMS","uniforms","uniform","getActiveUniform","getShaderParameters","program","attribLocations","uniformLocations","forEach","location","getAttribLocation","_addShaderNameToJavascript","getUniformLocation","shaderLocations","inputName","names","toLowerCase","slice","split","out","subBeg","indexOf","subEnd","Number","bufferCount","requirements","vertexNormal","vertexTangent","vertexBitangent","textureCoord","vertexColor","vec3","tangent","bitangent","inputBuffers","positions","normals","tangents","bitangents","textureCoordinates","colors","indices","offset","addSquare","c0","c1","c2","c3","inputBuffer","bufferIndex","color","addFace","face","addTriangle","c4","addPentagon","addFaces","outputBuffers","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","indexBuffer","ELEMENT_ARRAY_BUFFER","Uint16Array","outputBuffer","position","vertexCount","normalBuffer","tangentBuffer","bitangentBuffer","textureCoordBuffer","colorBuffer","buffer","deleteBuffer","projectionMatrix","viewMatrix","modelMatrix","shaderIndex","vertexAttribPointer","vertexPosition","enableVertexAttribArray","useProgram","uniformMatrix4fv","normalMatrix","mat4","showDiffuseMap","uniform1i","showNormalMap","showAmbientOcclusionMap","perPixel","parallaxHeightScale","uniform1f","parallaxSteps","parallaxOcclusionMapping","ambientLight","uniform3fv","directionalLight","direction","pointLight","lights","light","material","cameraPos","samplerDiffuse","activeTexture","TEXTURE0","samplerNormal","TEXTURE1","samplerHeight","TEXTURE2","samplerOcclusion","TEXTURE3","UNSIGNED_SHORT","drawElements","TRIANGLES","ColoredModel","shapeName","draw","bind","_initModel","this","_drawModel","ColoredCubeScene","initScene","drawScene","model6","model12","scene","actors","scale","rotations","angle","axis","speed","camera","deltaTime","fieldOfView","PI","aspect","canvas","clientWidth","clientHeight","actor","_renderActor","_animateActor","rotation","TexturedCubeModel","_geometry","f0","f1","f2","f3","b0","b1","b2","b3","TexturedCubeScene","LightedCubeModel","LightedCubeScene","rotationSpeed","cameraDir","MazeModel","maze","update","_deleteBuffers","floorColor","ceilingColor","wallColor_Back","wallColor_Front","wallColor_Left","wallColor_Right","ofs_x","ofs_y","left","right","back","front","data","MazeScene","getOptions","setOption","totalDelta","find","materialName","undefined","_generateMaze","size","random","windiness","carve","pos","canCarve","dir","isInBounds","addDir","nxt","len","lastDir","start","cells","cell","posCells","includes","pop","generateMaze","BrickWallModel","BrickWallScene","renderOptions","MaterialModel","MaterialScene","materialList","model4","model8","model10","model20","materialIndex","RoomModel","z","RoomScene","mouseMovement","keyboardState","movement","side","keys","SceneManager","resizeViewport","getScene","previousScene","nextScene","renderScene","scenes","init","render","sceneIndex","getContext","CULL_FACE","cullFace","BACK","rect","getBoundingClientRect","viewport","timeStamp","fps","round","App","onResize","onKeyDown","onKeyUp","onMouseMove","onLockChange","onClickCanvas","onClickMessage","onAnimationFrame","state","showControls","sceneManager","note","setState","requestPointerLock","mozRequestPointerLock","document","exitPointerLock","mozExitPointerLock","frame","window","requestAnimationFrame","addEventListener","showMessage","cancelAnimationFrame","removeEventListener","captureMouse","captureKeys","preventDefault","onKeyPress","messageTimer","cancelMessage","cancelLock","movementX","movementY","pointerLockElement","mozPointerLockElement","forceUpdate","setTimeout","clearMessage","clearTimeout","ref","elem","React","Component","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7839599f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Message = ({ message, onClick }) => {\r\n  if (!message) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div id=\"message\" onClick={onClick}>\r\n      {message.map((text, index) => (<div key={index}>{text}</div>))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\n\r\nconst SelectControl = (props) => {\r\n  function onChange(event) {\r\n    props.onChange(control, event.target.value);\r\n  }\r\n  const { control } = props;\r\n  const options = [];\r\n  for (let i = 0; i < control.options.length; i++) {\r\n    options.push(\r\n      (<option key={i} value={i}>{control.options[i]}</option>)\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"control\">\r\n      <label htmlFor={control.name}>{control.name}</label>\r\n      <select id={control.name} className=\"select-css\" value={control.value} onChange={onChange}>\r\n        {options}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst BoolControl = (props) => {\r\n  function onChange(event) {\r\n    props.onChange(control, event.target.checked);\r\n  }\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      <label htmlFor={control.name}><input id={control.name} type=\"checkbox\" checked={control.value} onChange={onChange} />{control.name}</label>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst IntControl = (props) => {\r\n  function onChange(event) {\r\n    props.onChange(control, event.target.value);\r\n  }\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      <label htmlFor={control.name}>{control.name} {control.value}</label>\r\n      <input id={control.name} type=\"range\" min={control.min} max={control.max} value={control.value} onChange={onChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst FloatControl = (props) => {\r\n  const factor = 1000;\r\n  function onChange(event) {\r\n    props.onChange(control, event.target.value / factor);\r\n  }\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      <label htmlFor={control.name}>{control.name} {control.value.toFixed(3)}</label>\r\n      <input id={control.name} type=\"range\" min={Math.floor(control.min * factor)} max={Math.floor(control.max * factor)} value={Math.floor(control.value * factor)} onChange={onChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Controls = ({ show, onClickPrevious, onClickNext, onChange, options }) => {\r\n  if (!show) {\r\n    return null;\r\n  }\r\n  let controls\r\n  if (options) {\r\n    controls = options.map((option, index) => {\r\n      switch (option.type) {\r\n        case 'select':\r\n          return <SelectControl key={index} control={option} onChange={onChange} />\r\n        case 'bool':\r\n          return <BoolControl key={index} control={option} onChange={onChange} />\r\n        case 'int':\r\n          return <IntControl key={index} control={option} onChange={onChange} />\r\n        case 'float':\r\n          return <FloatControl key={index} control={option} onChange={onChange} />\r\n        default:\r\n          return (\r\n            <div key={index} className=\"control\">{option.type} is not supported</div>\r\n          );\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <div id=\"overlay\">\r\n      <div className=\"none\">\r\n        <span className=\"left\" onClick={onClickPrevious}>❮ PREV</span>\r\n        <span className=\"right\" onClick={onClickNext}>NEXT ❯</span>\r\n      </div>\r\n      <div>\r\n        {controls}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Controls;\r\n","export function degreesToRadians(degrees) {\r\n  var pi = Math.PI;\r\n  return degrees * (pi / 180);\r\n}\r\n\r\nexport function initShaderProgram(gl, vsSource, fsSource) {\r\n  const vertexShader = _loadShader(gl, gl.VERTEX_SHADER, vsSource);\r\n  const fragmentShader = _loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\r\n  const shaderProgram = gl.createProgram();\r\n  gl.attachShader(shaderProgram, vertexShader);\r\n  gl.attachShader(shaderProgram, fragmentShader);\r\n  gl.linkProgram(shaderProgram);\r\n  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n    alert('Unable to initialize the shader program: ' + gl.getProgramInfoLog(shaderProgram));\r\n    return null;\r\n  }\r\n  return shaderProgram;\r\n}\r\n\r\nexport function getShaderParameters(gl, shaderProgram) {\r\n  const attributeCount = gl.getProgramParameter(shaderProgram, gl.ACTIVE_ATTRIBUTES);\r\n  const attributes = [];\r\n  for (let i = 0; i < attributeCount; i++) {\r\n    const attribute = gl.getActiveAttrib(shaderProgram, i);\r\n    attributes.push({ name: attribute.name, type: _typeToString(gl, attribute.type) });\r\n  }\r\n  const uniformCount = gl.getProgramParameter(shaderProgram, gl.ACTIVE_UNIFORMS);\r\n  const uniforms = [];\r\n  for (let i = 0; i < uniformCount; i++) {\r\n    const uniform = gl.getActiveUniform(shaderProgram, i);\r\n    uniforms.push({ name: uniform.name, type: _typeToString(gl, uniform.type) });\r\n  }\r\n  return {\r\n    attributes,\r\n    uniforms\r\n  };\r\n}\r\n\r\nfunction _typeToString(gl, type) {\r\n  switch (type) {\r\n    case gl.FLOAT:\r\n      return \"FLOAT\";\r\n    case gl.FLOAT_VEC2:\r\n      return \"FLOAT_VEC2\";\r\n    case gl.FLOAT_VEC3:\r\n      return \"FLOAT_VEC3\";\r\n    case gl.FLOAT_VEC4:\r\n      return \"FLOAT_VEC4\";\r\n    case gl.INT:\r\n      return \"INT\";\r\n    case gl.INT_VEC2:\r\n      return \"INT_VEC2\";\r\n    case gl.INT_VEC3:\r\n      return \"INT_VEC3\";\r\n    case gl.INT_VEC4:\r\n      return \"INT_VEC4\";\r\n    case gl.BOOL:\r\n      return \"BOOL\";\r\n    case gl.BOOL_VEC2:\r\n      return \"BOOL_VEC2\";\r\n    case gl.BOOL_VEC3:\r\n      return \"BOOL_VEC3\";\r\n    case gl.BOOL_VEC4:\r\n      return \"BOOL_VEC4\";\r\n    case gl.FLOAT_MAT2:\r\n      return \"FLOAT_MAT2\";\r\n    case gl.FLOAT_MAT3:\r\n      return \"FLOAT_MAT3\";\r\n    case gl.FLOAT_MAT4:\r\n      return \"FLOAT_MAT4\";\r\n    case gl.SAMPLER_2D:\r\n      return \"SAMPLER_2D\";\r\n    case gl.SAMPLER_CUBE:\r\n      return \"SAMPLER_CUBE\";\r\n    default:\r\n      return \"UNKNOWN\";\r\n  }\r\n}\r\n\r\nfunction _loadShader(gl, type, source) {\r\n  const shader = gl.createShader(type);\r\n  gl.shaderSource(shader, source);\r\n  gl.compileShader(shader);\r\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n    alert('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader));\r\n    gl.deleteShader(shader);\r\n    return null;\r\n  }\r\n  return shader;\r\n}\r\n\r\nexport function loadTexture(gl, url) {\r\n  const texture = gl.createTexture();\r\n  gl.bindTexture(gl.TEXTURE_2D, texture);\r\n  const level = 0;\r\n  const internalFormat = gl.RGBA;\r\n  const width = 1;\r\n  const height = 1;\r\n  const border = 0;\r\n  const srcFormat = gl.RGBA;\r\n  const srcType = gl.UNSIGNED_BYTE;\r\n  const pixel = new Uint8Array([0, 0, 255, 255]);\r\n  gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\r\n  const image = new Image();\r\n  image.onload = () => {\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\r\n      srcFormat, srcType, image);\r\n    if (_isPowerOf2(image.width) && _isPowerOf2(image.height)) {\r\n      gl.generateMipmap(gl.TEXTURE_2D);\r\n    } else {\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    }\r\n  };\r\n  image.src = url;\r\n  return texture;\r\n}\r\n\r\nfunction _isPowerOf2(value) {\r\n  return (value & (value - 1)) === 0;\r\n}\r\n\r\nexport function clearScreen(gl) {\r\n  gl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n  gl.clearDepth(1.0);\r\n  gl.enable(gl.DEPTH_TEST);\r\n  gl.depthFunc(gl.LEQUAL);\r\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n}\r\n\r\nconst _directions = [\r\n  { x: -1, y: 0 },\r\n  { x: 0, y: -1 },\r\n  { x: 1, y: 0 },\r\n  { x: 0, y: 1 }\r\n];\r\n\r\nexport function generateMaze(width, height, windiness = 0.8) {\r\n  const carve = (pos) => {\r\n    data[pos.y][pos.x] = 0;\r\n  }\r\n\r\n  const canCarve = (pos, dir) => {\r\n    if (!isInBounds(addDir(pos, dir, 3))) {\r\n      return false;\r\n    }\r\n    const nxt = addDir(pos, dir, 2);\r\n    return data[nxt.y][nxt.x] === 1;\r\n  }\r\n\r\n  const isInBounds = (pos) => {\r\n    if (pos.x < 0 || pos.y < 0 || pos.x >= width || pos.y >= height) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  const addDir = (pos, dir, len) => {\r\n    return {\r\n      x: pos.x + dir.x * len,\r\n      y: pos.y + dir.y * len\r\n    }\r\n  }\r\n\r\n  const data = [];\r\n  for (let y = 0; y < height; y++) {\r\n    data.push(new Array(width).fill(1));\r\n  }\r\n\r\n  const start = { x: 1, y: 1 };\r\n  const cells = [];\r\n  let lastDir;\r\n  carve(start);\r\n  cells.push(start);\r\n  while (cells.length > 0) {\r\n    const cell = cells[cells.length - 1];\r\n    const posCells = [];\r\n    for (let i = 0; i < _directions.length; i++) {\r\n      const dir = _directions[i];\r\n      if (canCarve(cell, dir)) {\r\n        posCells.push(dir);\r\n      }\r\n    }\r\n    if (posCells.length > 0) {\r\n      let dir;\r\n      if (posCells.includes(lastDir) && Math.random() > windiness) {\r\n        dir = lastDir;\r\n      } else {\r\n        dir = posCells[Math.floor(Math.random() * posCells.length)];\r\n      }\r\n      carve(addDir(cell, dir, 1));\r\n      carve(addDir(cell, dir, 2));\r\n      cells.push(addDir(cell, dir, 2));\r\n      lastDir = dir;\r\n    } else {\r\n      cells.pop();\r\n      lastDir = null;\r\n    }\r\n  }\r\n  return {\r\n    width,\r\n    height,\r\n    data\r\n  };\r\n}\r\n\r\nexport function getShape(shape) {\r\n  if (shape === 'tetrahedron') {\r\n    const s3 = Math.sqrt(3);\r\n    const s6 = Math.sqrt(6);\r\n\r\n    const vertices = [\r\n      [s3 / 3, -s6 / 3 * 0.333 + s6 * 0.025, 0],         // right\r\n      [-s3 / 6, -s6 / 3 * 0.333 + s6 * 0.025, 1 / 2],    // left front\r\n      [-s3 / 6, -s6 / 3 * 0.333 + s6 * 0.025, -1 / 2],   // left back\r\n      [0, s6 / 3 * 0.666 + s6 * 0.025, 0]                // top\r\n    ];\r\n\r\n    const faces = [\r\n      [0, 1, 2],\r\n      [3, 1, 0],\r\n      [3, 0, 2],\r\n      [3, 2, 1]\r\n    ];\r\n\r\n    return { vertices, faces };\r\n  }\r\n\r\n  if (shape === 'cube') {\r\n    const r = .3;\r\n\r\n    const vertices = [\r\n      [-r, -r, -r],\r\n      [-r, -r, r],\r\n      [r, -r, r],\r\n      [r, -r, -r],\r\n      [-r, r, -r],\r\n      [-r, r, r],\r\n      [r, r, r],\r\n      [r, r, -r]\r\n    ];\r\n\r\n    const faces = [\r\n      [0, 3, 2, 1],   // bottom\r\n      [4, 5, 6, 7],   // top\r\n      [0, 1, 5, 4],   // left\r\n      [2, 3, 7, 6],   // right\r\n      [1, 2, 6, 5],   // front\r\n      [3, 0, 4, 7]    // back\r\n    ];\r\n\r\n    return { vertices, faces };\r\n  }\r\n\r\n  if (shape === 'octahedron') {\r\n    const a = 1 / (2 * Math.sqrt(2));\r\n    const b = 1 / 2;\r\n\r\n    const vertices = [\r\n      [-a, 0, a],    // front left\r\n      [a, 0, a],     // front right\r\n      [a, 0, -a],    // back right\r\n      [-a, 0, -a],   // back left\r\n      [0, b, 0],     // top\r\n      [0, -b, 0]     // bottom\r\n    ];\r\n\r\n    const faces = [\r\n      [3, 0, 4],\r\n      [2, 3, 4],\r\n      [1, 2, 4],\r\n      [0, 1, 4],\r\n      [3, 2, 5],\r\n      [0, 3, 5],\r\n      [2, 1, 5],\r\n      [1, 0, 5]\r\n    ];\r\n\r\n    return { vertices, faces };\r\n  }\r\n\r\n  if (shape === 'pentagonaltrapezohedron') {\r\n    const vertices = [\r\n      [0.210292440, 0.15278640, 0.340260320],\r\n      [-0.08032456, 0.24721360, 0.340260320],\r\n      [-0.25993576, 0.00000000, 0.340260320],\r\n      [0.210292440, -0.6472136, 0.340260320],\r\n      [0.420584800, 0.00000000, -0.08032456],\r\n      [0.340260320, 0.24721360, 0.080324560],\r\n      [-0.21029244, 0.64721360, -0.34026032],\r\n      [-0.42058480, 0.00000000, 0.080324560],\r\n      [-0.34026032, -0.2472136, -0.08032456],\r\n      [0.080324560, -0.2472136, -0.34026032],\r\n      [0.259935760, 0.00000000, -0.34026032],\r\n      [-0.21029244, -0.1527864, -0.34026032]\r\n    ];\r\n\r\n    const faces = [\r\n      [3, 0, 1, 2],\r\n      [0, 3, 4, 5],\r\n      [1, 0, 5, 6],\r\n      [2, 1, 6, 7],\r\n      [3, 2, 7, 8],\r\n      [4, 3, 9, 10],\r\n      [5, 4, 10, 6],\r\n      [7, 6, 11, 8],\r\n      [3, 8, 11, 9],\r\n      [10, 9, 11, 6]\r\n    ];\r\n\r\n    return { vertices, faces };\r\n  }\r\n\r\n  if (shape === 'dodecahedron') {\r\n    const phi = (1 + Math.sqrt(5)) / 2;\r\n    const a = 0.5;\r\n    const b = 0.5 * 1 / phi;\r\n    const c = 0.5 * (2 - phi);\r\n\r\n    const vertices = [\r\n      [c, 0, a],\r\n      [-c, 0, a],\r\n      [-b, b, b],\r\n      [0, a, c],\r\n      [b, b, b],\r\n      [b, -b, b],\r\n      [0, -a, c],\r\n      [-b, -b, b],\r\n      [c, 0, -a],\r\n      [-c, 0, -a],\r\n      [-b, -b, -b],\r\n      [0, -a, -c],\r\n      [b, -b, -b],\r\n      [b, b, -b],\r\n      [0, a, -c],\r\n      [-b, b, -b],\r\n      [a, c, 0],\r\n      [-a, c, 0],\r\n      [-a, -c, 0],\r\n      [a, -c, 0]\r\n    ];\r\n\r\n    const faces = [\r\n      [4, 3, 2, 1, 0],\r\n      [7, 6, 5, 0, 1],\r\n      [12, 11, 10, 9, 8],\r\n      [15, 14, 13, 8, 9],\r\n      [14, 3, 4, 16, 13],\r\n      [3, 14, 15, 17, 2],\r\n      [11, 6, 7, 18, 10],\r\n      [6, 11, 12, 19, 5],\r\n      [4, 0, 5, 19, 16],\r\n      [12, 8, 13, 16, 19],\r\n      [15, 9, 10, 18, 17],\r\n      [7, 1, 2, 17, 18]\r\n    ];\r\n\r\n    return { vertices, faces };\r\n  }\r\n\r\n  if (shape === 'icosahedron') {\r\n    const phi = (1 + Math.sqrt(5)) / 2;\r\n    const a = 1 / 2;\r\n    const b = 1 / (2 * phi);\r\n\r\n    const vertices = [\r\n      [0, b, -a],\r\n      [b, a, 0],\r\n      [-b, a, 0],\r\n      [0, b, a],\r\n      [0, -b, a],\r\n      [-a, 0, b],\r\n      [a, 0, b],\r\n      [0, -b, -a],\r\n      [a, 0, -b],\r\n      [-a, 0, -b],\r\n      [b, -a, 0],\r\n      [-b, -a, 0]\r\n    ];\r\n\r\n    const faces = [\r\n      [1, 0, 2],\r\n      [2, 3, 1],\r\n      [4, 3, 5],\r\n      [6, 3, 4],\r\n      [7, 0, 8],\r\n      [9, 0, 7],\r\n      [10, 4, 11],\r\n      [11, 7, 10],\r\n      [5, 2, 9],\r\n      [9, 11, 5],\r\n      [8, 1, 6],\r\n      [6, 10, 8],\r\n      [5, 3, 2],\r\n      [1, 3, 6],\r\n      [2, 0, 9],\r\n      [8, 0, 1],\r\n      [9, 7, 11],\r\n      [10, 7, 8],\r\n      [11, 4, 5],\r\n      [6, 4, 10]\r\n    ];\r\n\r\n    return { vertices, faces };\r\n  }\r\n}\r\n\r\nconst _materials = {\r\n  emerald: {\r\n    ambient: [0.0215, 0.1745, 0.0215], diffuse: [0.07568, 0.61424, 0.07568], specular: [0.633, 0.727811, 0.633], shininess: 0.6\r\n  },\r\n  jade: {\r\n    ambient: [0.135, 0.2225, 0.1575], diffuse: [0.54, 0.89, 0.63], specular: [0.316228, 0.316228, 0.316228], shininess: 0.1\r\n  },\r\n  obsidian: {\r\n    ambient: [0.05375, 0.05, 0.06625], diffuse: [0.18275, 0.17, 0.22525], specular: [0.332741, 0.328634, 0.346435], shininess: 0.3\r\n  },\r\n  pearl: {\r\n    ambient: [0.25, 0.20725, 0.20725], diffuse: [1, 0.829, 0.829], specular: [0.296648, 0.296648, 0.296648], shininess: 0.088\r\n  },\r\n  ruby: {\r\n    ambient: [0.1745, 0.01175, 0.01175], diffuse: [0.61424, 0.04136, 0.04136], specular: [0.727811, 0.626959, 0.626959], shininess: 0.6\r\n  },\r\n  turquoise: {\r\n    ambient: [0.1, 0.18725, 0.1745], diffuse: [0.396, 0.74151, 0.69102], specular: [0.297254, 0.30829, 0.306678], shininess: 0.1\r\n  },\r\n  brass: {\r\n    ambient: [0.329412, 0.223529, 0.027451], diffuse: [0.780392, 0.568627, 0.113725], specular: [0.992157, 0.941176, 0.807843], shininess: 0.21794872\r\n  },\r\n  bronze: {\r\n    ambient: [0.2125, 0.1275, 0.054], diffuse: [0.714, 0.4284, 0.18144], specular: [0.393548, 0.271906, 0.166721], shininess: 0.2\r\n  },\r\n  chrome: {\r\n    ambient: [0.25, 0.25, 0.25], diffuse: [0.4, 0.4, 0.4], specular: [0.774597, 0.774597, 0.774597], shininess: 0.6\r\n  },\r\n  copper: {\r\n    ambient: [0.19125, 0.0735, 0.0225], diffuse: [0.7038, 0.27048, 0.0828], specular: [0.256777, 0.137622, 0.086014], shininess: 0.1\r\n  },\r\n  gold: {\r\n    ambient: [0.24725, 0.1995, 0.0745], diffuse: [0.75164, 0.60648, 0.22648], specular: [0.628281, 0.555802, 0.366065], shininess: 0.4\r\n  },\r\n  silver: {\r\n    ambient: [0.19225, 0.19225, 0.19225], diffuse: [0.50754, 0.50754, 0.50754], specular: [0.508273, 0.508273, 0.508273], shininess: 0.4\r\n  },\r\n  blackPlastic: {\r\n    ambient: [0.0, 0.0, 0.0], diffuse: [0.01, 0.01, 0.01], specular: [0.50, 0.50, 0.50], shininess: 0.25\r\n  },\r\n  cyanPlastic: {\r\n    ambient: [0.0, 0.1, 0.06], diffuse: [0.0, 0.50980392, 0.50980392], specular: [0.50196078, 0.50196078, 0.50196078], shininess: 0.25\r\n  },\r\n  greenPlastic: {\r\n    ambient: [0.0, 0.0, 0.0], diffuse: [0.1, 0.35, 0.1], specular: [0.45, 0.55, 0.45], shininess: 0.25\r\n  },\r\n  redPlastic: {\r\n    ambient: [0.0, 0.0, 0.0], diffuse: [0.5, 0.0, 0.0], specular: [0.7, 0.6, 0.6], shininess: 0.25\r\n  },\r\n  whitePlastic: {\r\n    ambient: [0.0, 0.0, 0.0], diffuse: [0.55, 0.55, 0.55], specular: [0.70, 0.70, 0.70], shininess: 0.25\r\n  },\r\n  yellowPlastic: {\r\n    ambient: [0.0, 0.0, 0.0], diffuse: [0.5, 0.5, 0.0], specular: [0.60, 0.60, 0.50], shininess: 0.25\r\n  },\r\n  blackRubber: {\r\n    ambient: [0.02, 0.02, 0.02], diffuse: [0.01, 0.01, 0.01], specular: [0.4, 0.4, 0.4], shininess: 0.078125\r\n  },\r\n  cyanRubber: {\r\n    ambient: [0.0, 0.05, 0.05], diffuse: [0.4, 0.5, 0.5], specular: [0.04, 0.7, 0.7], shininess: 0.078125\r\n  },\r\n  greenRubber: {\r\n    ambient: [0.0, 0.05, 0.0], diffuse: [0.4, 0.5, 0.4], specular: [0.04, 0.7, 0.04], shininess: 0.078125\r\n  },\r\n  redRubber: {\r\n    ambient: [0.05, 0.0, 0.0], diffuse: [0.5, 0.4, 0.4], specular: [0.7, 0.04, 0.04], shininess: 0.078125\r\n  },\r\n  whiteRubber: {\r\n    ambient: [0.05, 0.05, 0.05], diffuse: [0.5, 0.5, 0.5], specular: [0.7, 0.7, 0.7], shininess: 0.078125\r\n  },\r\n  yellowRubber: {\r\n    ambient: [0.05, 0.05, 0.0], diffuse: [0.5, 0.5, 0.4], specular: [0.7, 0.7, 0.04], shininess: 0.078125\r\n  }\r\n};\r\n\r\nexport function getMaterialList() {\r\n  const materials = [];\r\n  for (const prop in _materials) {\r\n    if (_materials.hasOwnProperty(prop)) {\r\n      materials.push(prop);\r\n    }\r\n  }\r\n  return materials;\r\n}\r\n\r\nexport function getMaterial(name) {\r\n  return _materials[name];\r\n}\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport * as vec3 from 'gl-matrix/vec3';\r\nimport { loadTexture, initShaderProgram, getShaderParameters } from '../lib/utility'\r\n\r\nclass Model {\r\n  _initModel(options) {\r\n    const { gl, geometry } = options;\r\n    const textures = [];\r\n    if (options.texture) {\r\n      const texture = {};\r\n      if (options.texture.diffuse) {\r\n        texture.diffuse = loadTexture(gl, options.texture.diffuse);\r\n      }\r\n      if (options.texture.normal) {\r\n        texture.normal = loadTexture(gl, options.texture.normal);\r\n      }\r\n      if (options.texture.height) {\r\n        texture.height = loadTexture(gl, options.texture.height);\r\n      }\r\n      if (options.texture.occlusion) {\r\n        texture.occlusion = loadTexture(gl, options.texture.occlusion);\r\n      }\r\n      textures.push(texture);\r\n    } else if (options.textures) {\r\n      for (let i = 0; i < options.textures.length; i++) {\r\n        const texture = {};\r\n        if (options.textures[i].diffuse) {\r\n          texture.diffuse = loadTexture(gl, options.textures[i].diffuse);\r\n        }\r\n        if (options.textures[i].normal) {\r\n          texture.normal = loadTexture(gl, options.textures[i].normal);\r\n        }\r\n        if (options.textures[i].height) {\r\n          texture.height = loadTexture(gl, options.textures[i].height);\r\n        }\r\n        if (options.textures[i].occlusion) {\r\n          texture.occlusion = loadTexture(gl, options.textures[i].occlusion);\r\n        }\r\n        textures.push(texture);\r\n      }\r\n    }\r\n\r\n    if (options.shader) {\r\n      let vertexShader;\r\n      let fragmentShader;\r\n      Promise.all([\r\n        fetch(options.shader.vertex).then((response) => response.text()).then((text) => vertexShader = text),\r\n        fetch(options.shader.fragment).then((response) => response.text()).then((text) => fragmentShader = text)\r\n      ]).then(() => {\r\n        const shader = this._setupShader(gl, vertexShader, fragmentShader);\r\n        const buffers = this._initBuffers(gl, [shader], geometry, textures.length || 1);\r\n        this.model = {\r\n          shaders: [shader],\r\n          buffers,\r\n          textures\r\n        };\r\n      });\r\n    }\r\n    else {\r\n      const vertexShaders = new Array(options.shaders.length).fill(null);\r\n      const fragmentShaders = new Array(options.shaders.length).fill(null);\r\n      const pendingLoads = [];\r\n      for (let i = 0; i < options.shaders.length; i++) {\r\n        pendingLoads.push(fetch(options.shaders[i].vertex).then((response) => response.text()).then((text) => vertexShaders[i] = text));\r\n        pendingLoads.push(fetch(options.shaders[i].fragment).then((response) => response.text()).then((text) => fragmentShaders[i] = text));\r\n      }\r\n\r\n      Promise.all(pendingLoads)\r\n        .then(() => {\r\n          const shaders = [];\r\n          for (let i = 0; i < options.shaders.length; i++) {\r\n            shaders.push(this._setupShader(gl, vertexShaders[i], fragmentShaders[i]));\r\n          }\r\n          const buffers = this._initBuffers(gl, shaders, geometry, textures.length || 1);\r\n          this.model = {\r\n            shaders,\r\n            buffers,\r\n            textures\r\n          };\r\n        });\r\n    }\r\n  }\r\n\r\n  _setupShader(gl, vertexShader, fragmentShader) {\r\n    const shaderProgram = initShaderProgram(gl, vertexShader, fragmentShader);\r\n    const shaderParameters = getShaderParameters(gl, shaderProgram);\r\n    const shader = {\r\n      program: shaderProgram,\r\n      attribLocations: {},\r\n      uniformLocations: {}\r\n    };\r\n    shaderParameters.attributes.forEach((attribute) => {\r\n      const location = gl.getAttribLocation(shaderProgram, attribute.name)\r\n      this._addShaderNameToJavascript(shader.attribLocations, attribute.name, location);\r\n    });\r\n    shaderParameters.uniforms.forEach((uniform) => {\r\n      const location = gl.getUniformLocation(shaderProgram, uniform.name)\r\n      this._addShaderNameToJavascript(shader.uniformLocations, uniform.name, location);\r\n    });\r\n    return shader;\r\n  }\r\n\r\n  _addShaderNameToJavascript(shaderLocations, inputName, location) {\r\n    if (inputName[0] !== 'a' && inputName[0] !== 'u') {\r\n      alert('shader name of ' + inputName + ' is not valid');\r\n      return;\r\n    }\r\n    let outputName = inputName[1].toLowerCase() + inputName.slice(2);\r\n    const names = outputName.split('.');\r\n    let out = shaderLocations;\r\n    for (let i = 0; i < names.length; i++) {\r\n      let name = names[i];\r\n      const subBeg = name.indexOf('[');\r\n      if (subBeg !== -1) {\r\n        const subEnd = name.indexOf(']');\r\n        if (subEnd < subBeg + 2) {\r\n          alert('shader name of ' + inputName + ' is not valid');\r\n          return;\r\n        }\r\n        const index = Number(name.slice(subBeg + 1, subEnd));\r\n        name = name.slice(0, subBeg);\r\n        if (i < names.length - 1) {\r\n          if (!out[name]) {\r\n            out[name] = [];\r\n          }\r\n          if (out[name].length <= index) {\r\n            out[name].length = index + 1;\r\n          }\r\n          if (!out[name][index]) {\r\n            out[name][index] = {};\r\n          }\r\n          out = out[name][index];\r\n        } else {\r\n          if (!out[name]) {\r\n            out[name] = [];\r\n          }\r\n          if (out[name].length <= index) {\r\n            out[name].length = index + 1;\r\n          }\r\n          out[name][index] = location;\r\n        }\r\n      } else {\r\n        if (i < names.length - 1) {\r\n          if (!out[name]) {\r\n            out[name] = {};\r\n          }\r\n          out = out[name];\r\n        } else {\r\n          out[name] = location;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _initBuffers(gl, shaders, geometry, bufferCount) {\r\n    const requirements = {};\r\n\r\n    for (let i = 0; i < shaders.length; i++) {\r\n      const shader = shaders[i];\r\n\r\n      if (shader.attribLocations.vertexNormal) {\r\n        requirements.vertexNormal = true;\r\n      }\r\n\r\n      if (shader.attribLocations.vertexTangent) {\r\n        requirements.vertexTangent = true;\r\n      }\r\n\r\n      if (shader.attribLocations.vertexBitangent) {\r\n        requirements.vertexBitangent = true;\r\n      }\r\n\r\n      if (shader.attribLocations.textureCoord) {\r\n        requirements.textureCoord = true;\r\n      }\r\n\r\n      if (shader.attribLocations.vertexColor) {\r\n        requirements.vertexColor = true;\r\n      }\r\n    }\r\n\r\n    const normal = vec3.create();\r\n    const tangent = vec3.create();\r\n    const bitangent = vec3.create();\r\n\r\n    const inputBuffers = [];\r\n\r\n    for (let i = 0; i < bufferCount; i++) {\r\n      inputBuffers.push({\r\n        positions: [],\r\n        normals: [],\r\n        tangents: [],\r\n        bitangents: [],\r\n        textureCoordinates: [],\r\n        colors: [],\r\n        indices: [],\r\n        offset: 0\r\n      });\r\n    }\r\n\r\n    const addSquare = (c0, c1, c2, c3, options) => {\r\n      let inputBuffer;\r\n      if (options && options.bufferIndex) {\r\n        inputBuffer = inputBuffers[options.bufferIndex];\r\n      } else {\r\n        inputBuffer = inputBuffers[0];\r\n      }\r\n\r\n      const { positions, normals, tangents, bitangents, textureCoordinates, colors, indices, offset } = inputBuffer;\r\n\r\n      positions.push(...c0, ...c1, ...c2, ...c3);\r\n      indices.push(offset + 0, offset + 1, offset + 2, offset + 2, offset + 3, offset + 0);\r\n      inputBuffer.offset += 4;\r\n\r\n      if (requirements.vertexNormal || requirements.vertexTangent || requirements.vertexBitangent) {\r\n        vec3.subtract(tangent, c1, c0);\r\n        vec3.subtract(bitangent, c3, c0);\r\n\r\n        if (requirements.vertexNormal) {\r\n          vec3.cross(normal, tangent, bitangent);\r\n          vec3.normalize(normal, normal);\r\n          normals.push(...normal, ...normal, ...normal, ...normal);\r\n        }\r\n\r\n        if (requirements.vertexTangent) {\r\n          vec3.normalize(tangent, tangent);\r\n          tangents.push(...tangent, ...tangent, ...tangent, ...tangent);\r\n        }\r\n\r\n        if (requirements.vertexBitangent) {\r\n          vec3.normalize(bitangent, bitangent);\r\n          bitangents.push(...bitangent, ...bitangent, ...bitangent, ...bitangent);\r\n        }\r\n      }\r\n\r\n      if (requirements.textureCoord) {\r\n        textureCoordinates.push(0, 0, 1, 0, 1, 1, 0, 1);\r\n      }\r\n\r\n      if (requirements.vertexColor) {\r\n        colors.push(...options.color, ...options.color, ...options.color, ...options.color);\r\n      }\r\n    }\r\n\r\n    const addTriangle = (c0, c1, c2, options) => {\r\n      let inputBuffer;\r\n      if (options.bufferIndex) {\r\n        inputBuffer = inputBuffers[options.bufferIndex];\r\n      } else {\r\n        inputBuffer = inputBuffers[0];\r\n      }\r\n\r\n      const { positions, normals, tangents, bitangents, colors, indices, offset } = inputBuffer;\r\n\r\n      positions.push(...c0, ...c1, ...c2);\r\n      indices.push(offset + 0, offset + 1, offset + 2);\r\n      inputBuffer.offset += 3;\r\n\r\n      if (requirements.vertexNormal || requirements.vertexTangent || requirements.vertexBitangent) {\r\n        vec3.subtract(tangent, c1, c0);\r\n        vec3.subtract(bitangent, c2, c0);\r\n\r\n        if (requirements.vertexNormal) {\r\n          vec3.cross(normal, tangent, bitangent);\r\n          vec3.normalize(normal, normal);\r\n          normals.push(...normal, ...normal, ...normal);\r\n        }\r\n\r\n        if (requirements.vertexTangent) {\r\n          vec3.normalize(tangent, tangent);\r\n          tangents.push(...tangent, ...tangent, ...tangent);\r\n        }\r\n\r\n        if (requirements.vertexBitangent) {\r\n          vec3.normalize(bitangent, bitangent);\r\n          bitangents.push(...bitangent, ...bitangent, ...bitangent);\r\n        }\r\n      }\r\n\r\n      if (requirements.vertexColor) {\r\n        colors.push(...options.color, ...options.color, ...options.color);\r\n      }\r\n    }\r\n\r\n    const addPentagon = (c0, c1, c2, c3, c4, options) => {\r\n      let inputBuffer;\r\n      if (options.bufferIndex) {\r\n        inputBuffer = inputBuffers[options.bufferIndex];\r\n      } else {\r\n        inputBuffer = inputBuffers[0];\r\n      }\r\n\r\n      const { positions, normals, tangents, bitangents, colors, indices, offset } = inputBuffer;\r\n\r\n      positions.push(...c0, ...c1, ...c2, ...c3, ...c4);\r\n      indices.push(offset + 0, offset + 3, offset + 4, offset + 0, offset + 1, offset + 3, offset + 1, offset + 2, offset + 3);\r\n      inputBuffer.offset += 5;\r\n\r\n      if (requirements.vertexNormal || requirements.vertexTangent || requirements.vertexBitangent) {\r\n        vec3.subtract(tangent, c1, c0);\r\n        vec3.subtract(bitangent, c4, c0);\r\n\r\n        if (requirements.vertexNormal) {\r\n          vec3.cross(normal, tangent, bitangent);\r\n          vec3.normalize(normal, normal);\r\n          normals.push(...normal, ...normal, ...normal, ...normal, ...normal);\r\n        }\r\n\r\n        if (requirements.vertexTangent) {\r\n          vec3.normalize(tangent, tangent);\r\n          tangents.push(...tangent, ...tangent, ...tangent, ...tangent, ...tangent);\r\n        }\r\n\r\n        if (requirements.vertexBitangent) {\r\n          vec3.normalize(bitangent, bitangent);\r\n          bitangents.push(...bitangent, ...bitangent, ...bitangent, ...bitangent, ...bitangent);\r\n        }\r\n      }\r\n\r\n      if (requirements.vertexColor) {\r\n        colors.push(...options.color, ...options.color, ...options.color, ...options.color, ...options.color);\r\n      }\r\n    }\r\n\r\n    const addFace = (vertices, face, options) => {\r\n      switch (face.length) {\r\n        case 3:\r\n          addTriangle(vertices[face[0]], vertices[face[1]], vertices[face[2]], options);\r\n          break;\r\n        case 4:\r\n          addSquare(vertices[face[0]], vertices[face[1]], vertices[face[2]], vertices[face[3]], options);\r\n          break;\r\n        case 5:\r\n          addPentagon(vertices[face[0]], vertices[face[1]], vertices[face[2]], vertices[face[3]], vertices[face[4]], options);\r\n          break;\r\n        default:\r\n          alert('faces with ' + face.length + ' vertices are not supported');\r\n      }\r\n    }\r\n\r\n    const addFaces = (vertices, faces, options) => {\r\n      for (let i = 0; i < faces.length; i++) {\r\n        let option = {}\r\n        if (options) {\r\n          if (options.colors) {\r\n            option.color = options.colors[i % options.colors.length];\r\n          }\r\n        }\r\n        addFace(vertices, faces[i], option);\r\n      }\r\n    }\r\n\r\n    geometry({ addSquare, addFaces });\r\n\r\n    const outputBuffers = [];\r\n\r\n    for (let i = 0; i < bufferCount; i++) {\r\n      const inputBuffer = inputBuffers[i];\r\n      const { positions, normals, tangents, bitangents, textureCoordinates, colors, indices } = inputBuffer;\r\n\r\n      const positionBuffer = gl.createBuffer();\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n      gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\r\n\r\n      const indexBuffer = gl.createBuffer();\r\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\r\n\r\n      const outputBuffer = { position: positionBuffer, indices: indexBuffer, vertexCount: indices.length }\r\n\r\n      if (requirements.vertexNormal) {\r\n        const normalBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, normalBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(normals), gl.STATIC_DRAW);\r\n        outputBuffer.normal = normalBuffer;\r\n      }\r\n\r\n      if (requirements.vertexTangent) {\r\n        const tangentBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, tangentBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(tangents), gl.STATIC_DRAW);\r\n        outputBuffer.tangent = tangentBuffer;\r\n      }\r\n\r\n      if (requirements.vertexBitangent) {\r\n        const bitangentBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, bitangentBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(bitangents), gl.STATIC_DRAW);\r\n        outputBuffer.bitangent = bitangentBuffer;\r\n      }\r\n\r\n      if (requirements.textureCoord) {\r\n        const textureCoordBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, textureCoordBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(textureCoordinates), gl.STATIC_DRAW);\r\n        outputBuffer.textureCoord = textureCoordBuffer;\r\n      }\r\n\r\n      if (requirements.vertexColor) {\r\n        const colorBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW);\r\n        outputBuffer.color = colorBuffer;\r\n      }\r\n\r\n      outputBuffers.push(outputBuffer);\r\n    }\r\n\r\n    return outputBuffers;\r\n  }\r\n\r\n  _deleteBuffers({ gl, buffers }) {\r\n    for (let i = 0; i < buffers.length; i++) {\r\n      const buffer = buffers[i];\r\n      for (const prop in buffer) {\r\n        if (buffer.hasOwnProperty(prop)) {\r\n          gl.deleteBuffer(buffer[prop]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _drawModel(options) {\r\n    if (!options.model) {\r\n      return;\r\n    }\r\n\r\n    const { gl, model, projectionMatrix, viewMatrix, modelMatrix } = options;\r\n    const { shaders, buffers, textures } = model;\r\n    const shader = shaders[options.shaderIndex ? options.shaderIndex : 0];\r\n\r\n    for (let i = 0; i < buffers.length; i++) {\r\n      const buffer = buffers[i];\r\n      const texture = textures[i];\r\n\r\n      {\r\n        const numComponents = 3;\r\n        const type = gl.FLOAT;\r\n        const normalize = false;\r\n        const stride = 0;\r\n        const offset = 0;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer.position);\r\n        gl.vertexAttribPointer(shader.attribLocations.vertexPosition, numComponents, type, normalize, stride, offset);\r\n        gl.enableVertexAttribArray(shader.attribLocations.vertexPosition);\r\n      }\r\n\r\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer.indices);\r\n\r\n      if (shader.attribLocations.vertexNormal) {\r\n        const numComponents = 3;\r\n        const type = gl.FLOAT;\r\n        const normalize = false;\r\n        const stride = 0;\r\n        const offset = 0;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer.normal);\r\n        gl.vertexAttribPointer(shader.attribLocations.vertexNormal, numComponents, type, normalize, stride, offset);\r\n        gl.enableVertexAttribArray(shader.attribLocations.vertexNormal);\r\n      }\r\n\r\n      if (shader.attribLocations.vertexTangent) {\r\n        const numComponents = 3;\r\n        const type = gl.FLOAT;\r\n        const normalize = false;\r\n        const stride = 0;\r\n        const offset = 0;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer.tangent);\r\n        gl.vertexAttribPointer(shader.attribLocations.vertexTangent, numComponents, type, normalize, stride, offset);\r\n        gl.enableVertexAttribArray(shader.attribLocations.vertexTangent);\r\n      }\r\n\r\n      if (shader.attribLocations.vertexBitangent) {\r\n        const numComponents = 3;\r\n        const type = gl.FLOAT;\r\n        const normalize = false;\r\n        const stride = 0;\r\n        const offset = 0;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer.bitangent);\r\n        gl.vertexAttribPointer(shader.attribLocations.vertexBitangent, numComponents, type, normalize, stride, offset);\r\n        gl.enableVertexAttribArray(shader.attribLocations.vertexBitangent);\r\n      }\r\n\r\n      if (shader.attribLocations.textureCoord) {\r\n        const numComponents = 2;\r\n        const type = gl.FLOAT;\r\n        const normalize = false;\r\n        const stride = 0;\r\n        const offset = 0;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer.textureCoord);\r\n        gl.vertexAttribPointer(shader.attribLocations.textureCoord, numComponents, type, normalize, stride, offset);\r\n        gl.enableVertexAttribArray(shader.attribLocations.textureCoord);\r\n      }\r\n\r\n      if (shader.attribLocations.vertexColor) {\r\n        const numComponents = 3;\r\n        const type = gl.FLOAT;\r\n        const normalize = false;\r\n        const stride = 0;\r\n        const offset = 0;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer.color);\r\n        gl.vertexAttribPointer(shader.attribLocations.vertexColor, numComponents, type, normalize, stride, offset);\r\n        gl.enableVertexAttribArray(shader.attribLocations.vertexColor);\r\n      }\r\n\r\n      gl.useProgram(shader.program);\r\n      gl.uniformMatrix4fv(shader.uniformLocations.projectionMatrix, false, projectionMatrix);\r\n      gl.uniformMatrix4fv(shader.uniformLocations.modelMatrix, false, modelMatrix);\r\n      gl.uniformMatrix4fv(shader.uniformLocations.viewMatrix, false, viewMatrix);\r\n\r\n      if (shader.uniformLocations.normalMatrix) {\r\n        const normalMatrix = mat4.create();\r\n        mat4.invert(normalMatrix, modelMatrix);\r\n        mat4.transpose(normalMatrix, normalMatrix);\r\n        gl.uniformMatrix4fv(shader.uniformLocations.normalMatrix, false, normalMatrix);\r\n      }\r\n\r\n      if (shader.uniformLocations.showDiffuseMap) {\r\n        gl.uniform1i(shader.uniformLocations.showDiffuseMap, options.showDiffuseMap);\r\n      }\r\n\r\n      if (shader.uniformLocations.showNormalMap) {\r\n        gl.uniform1i(shader.uniformLocations.showNormalMap, options.showNormalMap);\r\n      }\r\n\r\n      if (shader.uniformLocations.showAmbientOcclusionMap) {\r\n        gl.uniform1i(shader.uniformLocations.showAmbientOcclusionMap, options.showAmbientOcclusionMap);\r\n      }\r\n\r\n      if (shader.uniformLocations.perPixel) {\r\n        gl.uniform1i(shader.uniformLocations.perPixel, options.perPixel);\r\n      }\r\n\r\n      if (shader.uniformLocations.parallaxHeightScale) {\r\n        gl.uniform1f(shader.uniformLocations.parallaxHeightScale, options.parallaxHeightScale);\r\n      }\r\n\r\n      if (shader.uniformLocations.parallaxSteps) {\r\n        gl.uniform1i(shader.uniformLocations.parallaxSteps, options.parallaxSteps);\r\n      }\r\n\r\n      if (shader.uniformLocations.parallaxOcclusionMapping) {\r\n        gl.uniform1i(shader.uniformLocations.parallaxOcclusionMapping, options.parallaxOcclusionMapping);\r\n      }\r\n\r\n      if (shader.uniformLocations.ambientLight) {\r\n        gl.uniform3fv(shader.uniformLocations.ambientLight, options.ambientLight);\r\n      }\r\n\r\n      if (shader.uniformLocations.directionalLight) {\r\n        const direction = vec3.clone(options.directionalLight.direction);\r\n        vec3.normalize(direction, direction);\r\n        gl.uniform3fv(shader.uniformLocations.directionalLight.color, options.directionalLight.color);\r\n        gl.uniform3fv(shader.uniformLocations.directionalLight.direction, direction);\r\n      }\r\n\r\n      if (shader.uniformLocations.pointLight) {\r\n        gl.uniform3fv(shader.uniformLocations.pointLight.color, options.pointLight.color);\r\n        gl.uniform3fv(shader.uniformLocations.pointLight.position, options.pointLight.position);\r\n      }\r\n\r\n      if (options.lights) {\r\n        const lights = options.lights;\r\n        for (let i = 0; i < lights.length; i++) {\r\n          const light = lights[i];\r\n          gl.uniform3fv(shader.uniformLocations.lights[i].position, light.position);\r\n          gl.uniform3fv(shader.uniformLocations.lights[i].ambient, light.ambient);\r\n          gl.uniform3fv(shader.uniformLocations.lights[i].diffuse, light.diffuse);\r\n          gl.uniform3fv(shader.uniformLocations.lights[i].specular, light.specular);\r\n        }\r\n      }\r\n\r\n      if (options.material) {\r\n        const material = options.material;\r\n        gl.uniform3fv(shader.uniformLocations.material.ambient, material.ambient);\r\n        gl.uniform3fv(shader.uniformLocations.material.diffuse, material.diffuse);\r\n        gl.uniform3fv(shader.uniformLocations.material.specular, material.specular);\r\n        gl.uniform1f(shader.uniformLocations.material.shininess, material.shininess);\r\n      }\r\n\r\n      if (shader.uniformLocations.cameraPos) {\r\n        gl.uniform3fv(shader.uniformLocations.cameraPos, options.cameraPos);\r\n      }\r\n\r\n      if (shader.uniformLocations.samplerDiffuse) {\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(gl.TEXTURE_2D, texture.diffuse);\r\n        gl.uniform1i(shader.uniformLocations.samplerDiffuse, 0);\r\n      }\r\n\r\n      if (shader.uniformLocations.samplerNormal) {\r\n        gl.activeTexture(gl.TEXTURE1);\r\n        gl.bindTexture(gl.TEXTURE_2D, texture.normal);\r\n        gl.uniform1i(shader.uniformLocations.samplerNormal, 1);\r\n      }\r\n\r\n      if (shader.uniformLocations.samplerHeight) {\r\n        gl.activeTexture(gl.TEXTURE2);\r\n        gl.bindTexture(gl.TEXTURE_2D, texture.height);\r\n        gl.uniform1i(shader.uniformLocations.samplerHeight, 2);\r\n      }\r\n\r\n      if (shader.uniformLocations.samplerOcclusion) {\r\n        gl.activeTexture(gl.TEXTURE3);\r\n        gl.bindTexture(gl.TEXTURE_2D, texture.occlusion);\r\n        gl.uniform1i(shader.uniformLocations.samplerOcclusion, 3);\r\n      }\r\n\r\n      {\r\n        const vertexCount = buffer.vertexCount;\r\n        const type = gl.UNSIGNED_SHORT;\r\n        const offset = 0;\r\n        gl.drawElements(gl.TRIANGLES, vertexCount, type, offset);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Model;\r\n","import Model from './Model';\r\nimport { getShape } from '../lib/utility';\r\n\r\nclass ColoredModel extends Model {\r\n  constructor(gl, shapeName, colors) {\r\n    super(gl);\r\n    this.gl = gl;\r\n    this.draw = this.draw.bind(this);\r\n    this._initModel({\r\n      gl,\r\n      geometry: ({ addFaces }) => {\r\n        const shape = getShape(shapeName);\r\n        addFaces(shape.vertices, shape.faces, { colors });\r\n      },\r\n      shader: {\r\n        vertex: 'shaders/color/vertex.glsl',\r\n        fragment: 'shaders/color/fragment.glsl'\r\n      }\r\n    });\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix, lights, material) {\r\n    this._drawModel({\r\n      gl: this.gl,\r\n      model: this.model,\r\n      projectionMatrix,\r\n      viewMatrix,\r\n      modelMatrix,\r\n      lights,\r\n      material\r\n    });\r\n  }\r\n}\r\n\r\nexport default ColoredModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen } from '../lib/utility'\r\nimport ColoredModel from '../models/ColoredModel';\r\n\r\nclass ColoredCubeScene {\r\n  constructor() {\r\n    this.initScene = this.initScene.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n  }\r\n\r\n  initScene(gl) {\r\n    const colors1 = [\r\n      [0.0, 0.0, 1.0],    // Bottom face: blue\r\n      [0.0, 1.0, 0.0],    // Top face: green\r\n      [1.0, 0.0, 1.0],    // Left face: purple\r\n      [1.0, 1.0, 0.0],    // Right face: yellow\r\n      [1.0, 1.0, 1.0],    // Front face: white\r\n      [1.0, 0.0, 0.0]     // Back face: red\r\n    ];\r\n    const model6 = new ColoredModel(gl, 'cube', colors1);\r\n    const colors2 = [\r\n      [1.0, 0.0, 0.0],\r\n      [0.0, 0.0, 1.0],\r\n      [0.0, 1.0, 0.0],\r\n      [1.0, 1.0, 0.0],\r\n      [0.0, 1.0, 1.0],\r\n      [1.0, 0.0, 1.0],\r\n      [1.0, 0.5, 0.0],\r\n      [0.0, 1.0, 0.5],\r\n      [1.0, 0.0, 0.5],\r\n      [0.5, 1.0, 0.0],\r\n      [0.0, 0.5, 1.0],\r\n      [0.5, 0.0, 1.0]\r\n    ];\r\n    const model12 = new ColoredModel(gl, 'dodecahedron', colors2);\r\n    this.scene = {\r\n      actors: [\r\n        {\r\n          model: model6,\r\n          location: [-1.6, 0.0, -6.0],\r\n          scale: [3.0, 3.0, 3.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 1.0\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.7\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model12,\r\n          location: [1.6, 0.0, -6.0],\r\n          scale: [2.8, 2.8, 2.8],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 1.0\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.7\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      camera: [0.0, 0.0, 0.0]\r\n    };\r\n  }\r\n\r\n  drawScene(gl, deltaTime) {\r\n    const scene = this.scene;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 100.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, scene.camera);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      this._renderActor(projectionMatrix, viewMatrix, actor);\r\n      this._animateActor(deltaTime, actor);\r\n    }\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    if (actor.scale) {\r\n      mat4.scale(modelMatrix, modelMatrix, actor.scale);\r\n    }\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      mat4.rotate(modelMatrix, modelMatrix, rotation.angle, rotation.axis);\r\n    }\r\n\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix);\r\n  }\r\n\r\n  _animateActor(deltaTime, actor) {\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      rotation.angle += deltaTime * rotation.speed;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ColoredCubeScene;\r\n","import Model from './Model';\r\n\r\nclass TexturedCubeModel extends Model {\r\n  constructor(gl) {\r\n    super(gl);\r\n    this.gl = gl;\r\n    this.draw = this.draw.bind(this);\r\n    this._initModel({\r\n      gl,\r\n      geometry: this._geometry,\r\n      texture: {\r\n        diffuse: 'images/cubetexture.png'\r\n      },\r\n      shader: {\r\n        vertex: 'shaders/texture_D/vertex.glsl',\r\n        fragment: 'shaders/texture_D/fragment.glsl'\r\n      }\r\n    });\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix) {\r\n    this._drawModel({\r\n      gl: this.gl,\r\n      model: this.model,\r\n      projectionMatrix,\r\n      viewMatrix,\r\n      modelMatrix\r\n    });\r\n  }\r\n\r\n  _geometry({ addSquare }) {\r\n    const f0 = [-1, -1, 1];\r\n    const f1 = [1, -1, 1];\r\n    const f2 = [1, 1, 1];\r\n    const f3 = [-1, 1, 1];\r\n    const b0 = [-1, -1, -1];\r\n    const b1 = [1, -1, -1];\r\n    const b2 = [1, 1, -1];\r\n    const b3 = [-1, 1, -1];\r\n    addSquare(f0, f1, f2, f3);  // front\r\n    addSquare(b1, b0, b3, b2);  // back\r\n    addSquare(b0, f0, f3, b3);  // left\r\n    addSquare(f1, b1, b2, f2);  // right\r\n    addSquare(b0, b1, f1, f0);  // bottom\r\n    addSquare(b2, b3, f3, f2);  // top\r\n  }\r\n}\r\n\r\nexport default TexturedCubeModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen } from '../lib/utility'\r\nimport TexturedCubeModel from '../models/TexturedCubeModel';\r\n\r\nclass TexturedCubeScene {\r\n  constructor() {\r\n    this.initScene = this.initScene.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n  }\r\n\r\n  initScene(gl) {\r\n    const model = new TexturedCubeModel(gl);\r\n    this.scene = {\r\n      actors: [\r\n        {\r\n          model,\r\n          location: [0.0, 0.0, -6.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 1.0\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.7\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      camera: [0.0, 0.0, 0.0]\r\n    };\r\n  }\r\n\r\n  drawScene(gl, deltaTime) {\r\n    const scene = this.scene;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 100.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, scene.camera);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      this._renderActor(projectionMatrix, viewMatrix, actor);\r\n      this._animateActor(deltaTime, actor);\r\n    }\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      mat4.rotate(modelMatrix, modelMatrix, rotation.angle, rotation.axis);\r\n    }\r\n\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix);\r\n  }\r\n\r\n  _animateActor(deltaTime, actor) {\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      rotation.angle += deltaTime * rotation.speed;\r\n    }\r\n  }\r\n}\r\n\r\nexport default TexturedCubeScene;\r\n","import Model from './Model';\r\n\r\nclass LightedCubeModel extends Model {\r\n  constructor(gl) {\r\n    super(gl);\r\n    this.gl = gl;\r\n    this.draw = this.draw.bind(this);\r\n    this._initModel({\r\n      gl,\r\n      geometry: this._geometry,\r\n      texture: {\r\n        diffuse: 'images/cubetexture.png'\r\n      },\r\n      shader: {\r\n        vertex: 'shaders/color_L/vertex.glsl',\r\n        fragment: 'shaders/color_L/fragment.glsl'\r\n      }\r\n    });\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix, perPixel) {\r\n    this._drawModel({\r\n      gl: this.gl,\r\n      model: this.model,\r\n      projectionMatrix,\r\n      viewMatrix,\r\n      modelMatrix,\r\n      ambientLight: [0.3, 0.3, 0.3],\r\n      directionalLight: {\r\n        color: [0.5, 0.5, 0.5],\r\n        direction: [0.0, 1.0, 0.0]\r\n      },\r\n      pointLight: {\r\n        color: [0.7, 0.7, 0.7],\r\n        position: [0.0, 0.0, 0.0]\r\n      },\r\n      cameraPos: [0.0, 0.0, 0.0],\r\n      perPixel\r\n    });\r\n  }\r\n\r\n  _geometry({ addSquare }) {\r\n    const f0 = [-1, -1, 1];\r\n    const f1 = [1, -1, 1];\r\n    const f2 = [1, 1, 1];\r\n    const f3 = [-1, 1, 1];\r\n    const b0 = [-1, -1, -1];\r\n    const b1 = [1, -1, -1];\r\n    const b2 = [1, 1, -1];\r\n    const b3 = [-1, 1, -1];\r\n    addSquare(f0, f1, f2, f3);  // front\r\n    addSquare(b1, b0, b3, b2);  // back\r\n    addSquare(b0, f0, f3, b3);  // left\r\n    addSquare(f1, b1, b2, f2);  // right\r\n    addSquare(b0, b1, f1, f0);  // bottom\r\n    addSquare(b2, b3, f3, f2);  // top\r\n  }\r\n}\r\n\r\nexport default LightedCubeModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen } from '../lib/utility'\r\nimport LightedCubeModel from '../models/LightedCubeModel';\r\n\r\nclass LightedCubeScene {\r\n  constructor() {\r\n    this.initScene = this.initScene.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n  }\r\n\r\n  initScene(gl) {\r\n    const model = new LightedCubeModel(gl);\r\n    this.scene = {\r\n      actors: [\r\n        {\r\n          model,\r\n          location: [-2.0, 0.0, -5.5],\r\n          rotation: 0.0,\r\n          rotationSpeed: 1.0,\r\n          perPixel: false\r\n        },\r\n        {\r\n          model,\r\n          location: [2.0, 0.0, -5.5],\r\n          rotation: 0.0,\r\n          rotationSpeed: 1.0,\r\n          perPixel: true\r\n        }\r\n      ],\r\n      camera: [0.0, 0.0, 0.0],\r\n      cameraDir: [0.0, 0.0, 2.0]\r\n    };\r\n  }\r\n\r\n  drawScene(gl, deltaTime) {\r\n    const scene = this.scene;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 100.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, scene.camera);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      this._renderActor(projectionMatrix, viewMatrix, actor);\r\n      this._animateActor(deltaTime, actor);\r\n    }\r\n\r\n    if (scene.camera[2] > 16.0) {\r\n      scene.camera[2] = 16.0;\r\n      scene.cameraDir[2] = -2.0;\r\n    } else if (scene.camera[2] < 0.0) {\r\n      scene.camera[2] = 0.0;\r\n      scene.cameraDir[2] = 2.0;\r\n    }\r\n\r\n    scene.camera[0] += scene.cameraDir[0] * deltaTime;\r\n    scene.camera[1] += scene.cameraDir[1] * deltaTime;\r\n    scene.camera[2] += scene.cameraDir[2] * deltaTime;\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    mat4.rotate(modelMatrix, modelMatrix, actor.rotation, [0, 0, 1]);\r\n    mat4.rotate(modelMatrix, modelMatrix, actor.rotation * 0.7, [0, 1, 0]);\r\n    mat4.rotate(modelMatrix, modelMatrix, actor.rotation * 0.3, [1, 0, 0]);\r\n\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix, actor.perPixel);\r\n  }\r\n\r\n  _animateActor(deltaTime, actor) {\r\n    actor.rotation += deltaTime * actor.rotationSpeed;\r\n  }\r\n}\r\n\r\nexport default LightedCubeScene;\r\n","import Model from './Model';\r\n\r\nclass MazeModel extends Model {\r\n  constructor(gl, maze) {\r\n    super(gl);\r\n    this.gl = gl;\r\n    this.draw = this.draw.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this.geometry = this.geometry.bind(this);\r\n    this.maze = maze;\r\n    this._initModel({\r\n      gl,\r\n      geometry: this.geometry,\r\n      shaders: [\r\n        {\r\n          vertex: 'shaders/color/vertex.glsl',\r\n          fragment: 'shaders/color/fragment.glsl'\r\n        },\r\n        {\r\n          vertex: 'shaders/material_L/vertex.glsl',\r\n          fragment: 'shaders/material_L/fragment.glsl'\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix, shaderIndex, lights, material) {\r\n    this._drawModel({\r\n      gl: this.gl,\r\n      model: this.model,\r\n      projectionMatrix,\r\n      viewMatrix,\r\n      modelMatrix,\r\n      shaderIndex,\r\n      lights,\r\n      material\r\n    });\r\n  }\r\n\r\n  update(maze) {\r\n    const gl = this.gl;\r\n    this._deleteBuffers(gl, this.model.buffers);\r\n    this.maze = maze;\r\n    this.model.buffers = this._initBuffers(gl, this.model.shaders, this.geometry, 1);\r\n  }\r\n\r\n  geometry({ addSquare }) {\r\n    const maze = this.maze;\r\n\r\n    const floorColor = [.2, .2, .2];\r\n    const ceilingColor = [.7, .7, .7];\r\n    const wallColor_Back = [.5, 0, .5];\r\n    const wallColor_Front = [0, .5, 0];\r\n    const wallColor_Left = [.5, 0, 0];\r\n    const wallColor_Right = [0, .0, .5];\r\n\r\n    const ofs_x = -maze.width / 2;\r\n    const ofs_y = -maze.height / 2;\r\n    for (let y = 0; y < maze.height; y++) {\r\n      for (let x = 0; x < maze.width; x++) {\r\n        const left = x + ofs_x;\r\n        const right = left + 1;\r\n        const back = y + ofs_y;\r\n        const front = back + 1;\r\n        const top = 1;\r\n        const bottom = 0;\r\n\r\n        const f0 = [left, top, front];\r\n        const f1 = [right, top, front];\r\n        const f2 = [right, bottom, front];\r\n        const f3 = [left, bottom, front];\r\n        const b0 = [left, top, back];\r\n        const b1 = [right, top, back];\r\n        const b2 = [right, bottom, back];\r\n        const b3 = [left, bottom, back];\r\n\r\n        if (maze.data[y][x] === 0) {\r\n          addSquare(b2, b3, f3, f2, { color: floorColor });\r\n        } else {\r\n          addSquare(b1, b0, f0, f1, { color: ceilingColor });\r\n\r\n          if (y === 0 || maze.data[y - 1][x] === 0) {\r\n            addSquare(b0, b1, b2, b3, { color: wallColor_Back });\r\n          }\r\n\r\n          if (x === 0 || maze.data[y][x - 1] === 0) {\r\n            addSquare(f0, b0, b3, f3, { color: wallColor_Left });\r\n          }\r\n\r\n          if (y === maze.height - 1 || maze.data[y + 1][x] === 0) {\r\n            addSquare(f1, f0, f3, f2, { color: wallColor_Front });\r\n          }\r\n\r\n          if (x === maze.width - 1 || maze.data[y][x + 1] === 0) {\r\n            addSquare(b1, f1, f2, b2, { color: wallColor_Right });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default MazeModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen, degreesToRadians, generateMaze, getMaterialList, getMaterial } from '../lib/utility'\r\nimport MazeModel from '../models/MazeModel';\r\n\r\nclass MazeScene {\r\n  constructor() {\r\n    this.getOptions = this.getOptions.bind(this);\r\n    this.setOption = this.setOption.bind(this);\r\n    this.initScene = this.initScene.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n    this.totalDelta = 0.0;\r\n\r\n    this.options = [\r\n      {\r\n        name: 'Material',\r\n        type: 'select',\r\n        options: ['useColors', ...getMaterialList()]\r\n      }\r\n    ];\r\n  }\r\n\r\n  getOptions() {\r\n    return this.options\r\n  }\r\n\r\n  setOption(name, value) {\r\n    const option = this.options.find((option) => option.name === name);\r\n    option.value = Number(value);\r\n\r\n    const actor = this.scene.actors[0];\r\n\r\n    if (option.name === 'Material') {\r\n      const materialName = option.options[option.value];\r\n      if (materialName !== 'useColors') {\r\n        actor.material = getMaterial(materialName);\r\n      } else {\r\n        actor.material = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  initScene(gl) {\r\n    const { size, maze } = this._generateMaze();\r\n\r\n    const model = new MazeModel(gl, maze);\r\n    this.scene = {\r\n      actors: [\r\n        {\r\n          model,\r\n          location: [0.0, 0.0, -2.0 * size],\r\n          rotation: { angle: 0.0, axis: [0, 1, 0], speed: 0.5 }\r\n        }\r\n      ],\r\n      camera: [0.0, 0.0, 0.0]\r\n    };\r\n\r\n    this.setOption('Material', 1);\r\n  }\r\n\r\n  _generateMaze() {\r\n    const size = Math.floor(Math.random() * 35) * 2 + 11;\r\n    const maze = generateMaze(size, size);\r\n    return { size, maze };\r\n  }\r\n\r\n  drawScene(gl, deltaTime) {\r\n    const scene = this.scene;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 500.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, scene.camera);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      this._renderActor(projectionMatrix, viewMatrix, actor);\r\n      this._animateActor(deltaTime, actor);\r\n    }\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    mat4.rotate(modelMatrix, modelMatrix, degreesToRadians(45), [1, 0, 0]);\r\n    mat4.rotate(modelMatrix, modelMatrix, actor.rotation.angle, actor.rotation.axis);\r\n\r\n    if (actor.material) {\r\n      const lights = [\r\n        {\r\n          position: [10.0, -10.0, 0.0],\r\n          ambient: [0.2, 0.2, 0.2],\r\n          diffuse: [0.5, 0.5, 0.5],\r\n          specular: [0.9, 0.9, 0.9]\r\n        },\r\n        {\r\n          position: [-10.0, 10.0, 0.0],\r\n          ambient: [0.2, 0.2, 0.2],\r\n          diffuse: [0.5, 0.5, 0.5],\r\n          specular: [0.9, 0.9, 0.9]\r\n        }\r\n      ];\r\n\r\n      model.draw(projectionMatrix, viewMatrix, modelMatrix, 1, lights, actor.material);\r\n    } else {\r\n      model.draw(projectionMatrix, viewMatrix, modelMatrix);\r\n    }\r\n  }\r\n\r\n  _animateActor(deltaTime, actor) {\r\n    actor.rotation.angle += deltaTime * actor.rotation.speed;\r\n  }\r\n}\r\n\r\nexport default MazeScene;\r\n","import Model from './Model';\r\n\r\nclass BrickWallModel extends Model {\r\n  constructor(gl) {\r\n    super(gl);\r\n    this.gl = gl;\r\n    this.draw = this.draw.bind(this);\r\n    this._initModel({\r\n      gl,\r\n      geometry: this._geometry,\r\n      texture: {\r\n        diffuse: 'images/Brick_Wall_017_basecolor.jpg',\r\n        normal: 'images/Brick_Wall_017_normal.jpg',\r\n        height: 'images/Brick_Wall_017_height.png',\r\n        occlusion: 'images/Brick_Wall_017_ambientOcclusion.jpg'\r\n      },\r\n      shader: {\r\n        vertex: 'shaders/texture_LDNOP/vertex.glsl',\r\n        fragment: 'shaders/texture_LDNOP/fragment.glsl'\r\n      }\r\n    });\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix, options) {\r\n    const {\r\n      showDiffuseMap,\r\n      showNormalMap,\r\n      showAmbientOcclusionMap,\r\n      parallaxHeightScale,\r\n      parallaxSteps,\r\n      parallaxOcclusionMapping,\r\n    } = options;\r\n    this._drawModel({\r\n      gl: this.gl,\r\n      model: this.model,\r\n      projectionMatrix,\r\n      viewMatrix,\r\n      modelMatrix,\r\n      showDiffuseMap,\r\n      showNormalMap,\r\n      showAmbientOcclusionMap,\r\n      parallaxHeightScale,\r\n      parallaxSteps,\r\n      parallaxOcclusionMapping,\r\n      ambientLight: [0.3, 0.3, 0.3],\r\n      directionalLight: {\r\n        color: [0.4, 0.4, 0.4],\r\n        direction: [0.0, -1.0, 1.0]\r\n      },\r\n      pointLight: {\r\n        color: [1.0, 1.0, 1.0],\r\n        position: [0.0, 0.0, 0.0]\r\n      },\r\n      cameraPos: [0.0, 0.0, 0.0]\r\n    });\r\n  }\r\n\r\n  _geometry({ addSquare }) {\r\n    const f0 = [-1, -1, 1];\r\n    const f1 = [1, -1, 1];\r\n    const f2 = [1, 1, 1];\r\n    const f3 = [-1, 1, 1];\r\n    const b0 = [-1, -1, -1];\r\n    const b1 = [1, -1, -1];\r\n    const b2 = [1, 1, -1];\r\n    const b3 = [-1, 1, -1];\r\n    addSquare(f0, f1, f2, f3);  // front\r\n    addSquare(b1, b0, b3, b2);  // back\r\n    addSquare(b0, f0, f3, b3);  // left\r\n    addSquare(f1, b1, b2, f2);  // right\r\n    addSquare(b0, b1, f1, f0);  // top\r\n    addSquare(b2, b3, f3, f2);  // bottom\r\n  }\r\n}\r\n\r\nexport default BrickWallModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen } from '../lib/utility'\r\nimport BrickWallModel from '../models/BrickWallModel';\r\n\r\nclass BrickWallScene {\r\n  constructor() {\r\n    this.getOptions = this.getOptions.bind(this);\r\n    this.setOption = this.setOption.bind(this);\r\n    this.initScene = this.initScene.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n    this.renderOptions = {\r\n      showDiffuseMap: true,\r\n      showNormalMap: true,\r\n      showAmbientOcclusionMap: true,\r\n      parallaxHeightScale: 0.04,\r\n      parallaxSteps: 32,\r\n      parallaxOcclusionMapping: true\r\n    };\r\n    this.options = [\r\n      {\r\n        name: 'Show Diffuse Map',\r\n        id: 'showDiffuseMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Show Normal Map',\r\n        id: 'showNormalMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Show Ambient Occlusion Map',\r\n        id: 'showAmbientOcclusionMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Parallax Height Scale',\r\n        id: 'parallaxHeightScale',\r\n        type: 'float',\r\n        min: 0.0,\r\n        max: 0.1\r\n      },\r\n      {\r\n        name: 'Parallax Steps',\r\n        id: 'parallaxSteps',\r\n        type: 'int',\r\n        min: 0,\r\n        max: 32\r\n      },\r\n      {\r\n        name: 'Use Parallax Occlusion Mapping',\r\n        id: 'parallaxOcclusionMapping',\r\n        type: 'bool'\r\n      }\r\n    ];\r\n    for (let i = 0; i < this.options.length; i++) {\r\n      this.options[i].value = this.renderOptions[this.options[i].id];\r\n    }\r\n  }\r\n\r\n  getOptions() {\r\n    return this.options\r\n  }\r\n\r\n  setOption(name, value) {\r\n    const option = this.options.find((option) => option.name === name);\r\n    option.value = Number(value);\r\n    this.renderOptions[option.id] = option.value;\r\n  }\r\n\r\n  initScene(gl) {\r\n    const model = new BrickWallModel(gl);\r\n    this.scene = {\r\n      actors: [\r\n        {\r\n          model,\r\n          location: [0.0, 0.0, -5.5],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.4\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.2\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      camera: [0.0, 0.0, 0.0]\r\n    };\r\n  }\r\n\r\n  drawScene(gl, deltaTime) {\r\n    const scene = this.scene;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 100.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, scene.camera);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      this._renderActor(projectionMatrix, viewMatrix, actor);\r\n      this._animateActor(deltaTime, actor);\r\n    }\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      mat4.rotate(modelMatrix, modelMatrix, rotation.angle, rotation.axis);\r\n    }\r\n\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix, this.renderOptions);\r\n  }\r\n\r\n  _animateActor(deltaTime, actor) {\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      rotation.angle += deltaTime * rotation.speed;\r\n    }\r\n  }\r\n}\r\n\r\nexport default BrickWallScene;\r\n","import Model from './Model';\r\nimport { getShape } from '../lib/utility';\r\n\r\nclass MaterialModel extends Model {\r\n  constructor(gl, shapeName) {\r\n    super(gl);\r\n    this.gl = gl;\r\n    this.draw = this.draw.bind(this);\r\n    this._initModel({\r\n      gl,\r\n      geometry: ({ addFaces }) => {\r\n        const shape = getShape(shapeName);\r\n        addFaces(shape.vertices, shape.faces);\r\n      },\r\n      shader: {\r\n        vertex: 'shaders/material_L/vertex.glsl',\r\n        fragment: 'shaders/material_L/fragment.glsl'\r\n      }\r\n    });\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix, lights, material) {\r\n    this._drawModel({\r\n      gl: this.gl,\r\n      model: this.model,\r\n      projectionMatrix,\r\n      viewMatrix,\r\n      modelMatrix,\r\n      lights,\r\n      material\r\n    });\r\n  }\r\n}\r\n\r\nexport default MaterialModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen, getMaterialList, getMaterial } from '../lib/utility'\r\nimport MaterialModel from '../models/MaterialModel';\r\n\r\nclass MaterialScene {\r\n  constructor() {\r\n    this.getOptions = this.getOptions.bind(this);\r\n    this.setOption = this.setOption.bind(this);\r\n    this.initScene = this.initScene.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n    this.materials = new Array(3).fill(0);\r\n    const materialList = getMaterialList();\r\n    this.options = [\r\n      {\r\n        name: 'Material 1',\r\n        type: 'select',\r\n        options: materialList\r\n      },\r\n      {\r\n        name: 'Material 2',\r\n        type: 'select',\r\n        options: materialList\r\n      },\r\n      {\r\n        name: 'Material 3',\r\n        type: 'select',\r\n        options: materialList\r\n      }\r\n    ];\r\n  }\r\n\r\n  getOptions() {\r\n    return this.options\r\n  }\r\n\r\n  setOption(name, value) {\r\n    const option = this.options.find((option) => option.name === name);\r\n    option.value = Number(value);\r\n\r\n    if (option.name === 'Material 1') {\r\n      const materialName = option.options[option.value];\r\n      this.materials[0] = getMaterial(materialName);\r\n    }\r\n    else if (option.name === 'Material 2') {\r\n      const materialName = option.options[option.value];\r\n      this.materials[1] = getMaterial(materialName);\r\n    }\r\n    else if (option.name === 'Material 3') {\r\n      const materialName = option.options[option.value];\r\n      this.materials[2] = getMaterial(materialName);\r\n    }\r\n  }\r\n\r\n  initScene(gl) {\r\n    const model4 = new MaterialModel(gl, 'tetrahedron');\r\n    const model6 = new MaterialModel(gl, 'cube');\r\n    const model8 = new MaterialModel(gl, 'octahedron');\r\n    const model10 = new MaterialModel(gl, 'pentagonaltrapezohedron');\r\n    const model12 = new MaterialModel(gl, 'dodecahedron');\r\n    const model20 = new MaterialModel(gl, 'icosahedron');\r\n\r\n    this.scene = {\r\n      actors: [\r\n        {\r\n          model: model4,\r\n          materialIndex: 1,\r\n          location: [-3.75, 0.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model6,\r\n          materialIndex: 1,\r\n          location: [-2.25, 0.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model8,\r\n          materialIndex: 1,\r\n          location: [-0.75, 0.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model10,\r\n          materialIndex: 1,\r\n          location: [0.75, 0.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model12,\r\n          materialIndex: 1,\r\n          location: [2.25, 0.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model20,\r\n          materialIndex: 1,\r\n          location: [3.75, 0.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model4,\r\n          materialIndex: 0,\r\n          location: [-3.75, 2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model6,\r\n          materialIndex: 0,\r\n          location: [-2.25, 2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model8,\r\n          materialIndex: 0,\r\n          location: [-0.75, 2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model10,\r\n          materialIndex: 0,\r\n          location: [0.75, 2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model12,\r\n          materialIndex: 0,\r\n          location: [2.25, 2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model20,\r\n          materialIndex: 0,\r\n          location: [3.75, 2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model4,\r\n          materialIndex: 2,\r\n          location: [-3.75, -2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model6,\r\n          materialIndex: 2,\r\n          location: [-2.25, -2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model8,\r\n          materialIndex: 2,\r\n          location: [-0.75, -2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model10,\r\n          materialIndex: 2,\r\n          location: [0.75, -2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model12,\r\n          materialIndex: 2,\r\n          location: [2.25, -2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model20,\r\n          materialIndex: 2,\r\n          location: [3.75, -2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      camera: [0.0, 0.0, 0.0]\r\n    };\r\n\r\n    this.setOption('Material 1', 8);\r\n    this.setOption('Material 2', 10);\r\n    this.setOption('Material 3', 2);\r\n  }\r\n\r\n  drawScene(gl, deltaTime) {\r\n    const scene = this.scene;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 100.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, scene.camera);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      this._renderActor(projectionMatrix, viewMatrix, actor);\r\n      this._animateActor(deltaTime, actor);\r\n    }\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      mat4.rotate(modelMatrix, modelMatrix, rotation.angle, rotation.axis);\r\n    }\r\n\r\n    const lights = [\r\n      {\r\n        position: [10.0, -10.0, 0.0],\r\n        ambient: [0.2, 0.2, 0.2],\r\n        diffuse: [0.5, 0.5, 0.5],\r\n        specular: [0.9, 0.9, 0.9]\r\n      },\r\n      {\r\n        position: [-10.0, 10.0, 0.0],\r\n        ambient: [0.2, 0.2, 0.2],\r\n        diffuse: [0.5, 0.5, 0.5],\r\n        specular: [0.9, 0.9, 0.9]\r\n      }\r\n    ];\r\n\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix, lights, this.materials[actor.materialIndex]);\r\n  }\r\n\r\n  _animateActor(deltaTime, actor) {\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      rotation.angle += deltaTime * rotation.speed;\r\n    }\r\n  }\r\n}\r\n\r\nexport default MaterialScene;\r\n","import Model from './Model';\r\n\r\nclass RoomModel extends Model {\r\n  constructor(gl) {\r\n    super(gl);\r\n    this.gl = gl;\r\n    this.draw = this.draw.bind(this);\r\n    this._initModel({\r\n      gl,\r\n      geometry: this._geometry,\r\n      textures: [\r\n        {\r\n          diffuse: 'images/Brick_Wall_017_basecolor.jpg',\r\n          normal: 'images/Brick_Wall_017_normal.jpg',\r\n          occlusion: 'images/Brick_Wall_017_ambientOcclusion.jpg'\r\n        },\r\n        {\r\n          diffuse: 'images/Tiles_035_basecolor.jpg',\r\n          normal: 'images/Tiles_035_normal.jpg',\r\n          occlusion: 'images/Tiles_035_ambientOcclusion.jpg'\r\n        }\r\n      ],\r\n      shader: {\r\n        vertex: 'shaders/texture_LDNO/vertex.glsl',\r\n        fragment: 'shaders/texture_LDNO/fragment.glsl'\r\n      }\r\n    });\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix, options) {\r\n    const {\r\n      showDiffuseMap,\r\n      showNormalMap,\r\n      showAmbientOcclusionMap,\r\n      parallaxHeightScale,\r\n      parallaxSteps,\r\n      parallaxOcclusionMapping,\r\n      ambientLight,\r\n      directionalLight,\r\n      pointLight,\r\n      cameraPos\r\n    } = options;\r\n    this._drawModel({\r\n      gl: this.gl,\r\n      model: this.model,\r\n      projectionMatrix,\r\n      viewMatrix,\r\n      modelMatrix,\r\n      showDiffuseMap,\r\n      showNormalMap,\r\n      showAmbientOcclusionMap,\r\n      parallaxHeightScale,\r\n      parallaxSteps,\r\n      parallaxOcclusionMapping,\r\n      ambientLight,\r\n      directionalLight,\r\n      pointLight,\r\n      cameraPos\r\n    });\r\n  }\r\n\r\n  _geometry({ addSquare }) {\r\n    const width = 4;\r\n    const height = 4;\r\n    const data = [\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0]\r\n    ]\r\n    const ofs_x = -width / 2;\r\n    const ofs_z = -height / 2;\r\n    for (let z = 0; z < height; z++) {\r\n      for (let x = 0; x < width; x++) {\r\n        const left = x + ofs_x;\r\n        const right = left + 1;\r\n        const back = z + ofs_z;\r\n        const front = back + 1;\r\n        const top = 1;\r\n        const bottom = 0;\r\n\r\n        const f0 = [left, top, front];\r\n        const f1 = [right, top, front];\r\n        const f2 = [right, bottom, front];\r\n        const f3 = [left, bottom, front];\r\n        const b0 = [left, top, back];\r\n        const b1 = [right, top, back];\r\n        const b2 = [right, bottom, back];\r\n        const b3 = [left, bottom, back];\r\n\r\n        if (data[z][x] === 0) {\r\n          addSquare(b2, b3, f3, f2, { bufferIndex: 1 });\r\n\r\n          if (z === 0 || data[z - 1][x] !== 0) {\r\n            addSquare(b1, b0, b3, b2);\r\n          }\r\n\r\n          if (x === 0 || data[z][x - 1] !== 0) {\r\n            addSquare(b0, f0, f3, b3);\r\n          }\r\n\r\n          if (z === height - 1 || data[z + 1][x] !== 0) {\r\n            addSquare(f0, f1, f2, f3);\r\n          }\r\n\r\n          if (x === width - 1 || data[z][x + 1] !== 0) {\r\n            addSquare(f1, b1, b2, f2);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default RoomModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen } from '../lib/utility'\r\nimport RoomModel from '../models/RoomModel';\r\n\r\nclass RoomScene {\r\n  constructor() {\r\n    this.getOptions = this.getOptions.bind(this);\r\n    this.setOption = this.setOption.bind(this);\r\n    this.mouseMovement = this.mouseMovement.bind(this);\r\n    this.keyboardState = this.keyboardState.bind(this);\r\n    this.initScene = this.initScene.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n    this.renderOptions = {\r\n      showDiffuseMap: true,\r\n      showNormalMap: true,\r\n      showAmbientOcclusionMap: true,\r\n      ambientLight: [0.2, 0.2, 0.2],\r\n      directionalLight: {\r\n        color: [0.4, 0.4, 0.2],\r\n        direction: [0.0, -1.0, 1.0]\r\n      },\r\n      pointLight: {\r\n        color: [0.6, 0.6, 0.6],\r\n        position: [0.0, 1.0, 0.0]\r\n      }\r\n    };\r\n    this.options = [\r\n      {\r\n        name: 'Show Diffuse Map',\r\n        id: 'showDiffuseMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Show Normal Map',\r\n        id: 'showNormalMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Show Ambient Occlusion Map',\r\n        id: 'showAmbientOcclusionMap',\r\n        type: 'bool'\r\n      }\r\n    ];\r\n    for (let i = 0; i < this.options.length; i++) {\r\n      this.options[i].value = this.renderOptions[this.options[i].id];\r\n    }\r\n    this.movement = { front: 0.0, side: 0.0 };\r\n  }\r\n\r\n  getOptions() {\r\n    return this.options\r\n  }\r\n\r\n  setOption(name, value) {\r\n    const option = this.options.find((option) => option.name === name);\r\n    option.value = Number(value);\r\n    this.renderOptions[option.id] = option.value;\r\n  }\r\n\r\n  mouseMovement(x, y) {\r\n    const camera = this.scene.camera;\r\n    camera.rotations[0].angle -= x * 0.001;\r\n    camera.rotations[1].angle -= y * 0.001;\r\n  }\r\n\r\n  keyboardState(keys) {\r\n    let front = 0.0;\r\n    if (keys['w']) {\r\n      front -= 1.0;\r\n    }\r\n    if (keys['s']) {\r\n      front += 1.0;\r\n    }\r\n    let side = 0.0;\r\n    if (keys['a']) {\r\n      side -= 1.0;\r\n    }\r\n    if (keys['d']) {\r\n      side += 1.0;\r\n    }\r\n    this.movement.front = front;\r\n    this.movement.side = side;\r\n  }\r\n\r\n  initScene(gl) {\r\n    const model = new RoomModel(gl);\r\n    this.scene = {\r\n      actors: [\r\n        {\r\n          model,\r\n          location: [0.0, 0.0, 0.0],\r\n          rotations: []\r\n        }\r\n      ],\r\n      camera: {\r\n        location: [0.0, 0.5, 0.0],\r\n        rotations: [\r\n          {\r\n            angle: 0.0,\r\n            axis: [0, 1, 0]\r\n          },\r\n          {\r\n            angle: 0.0,\r\n            axis: [1, 0, 0]\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  }\r\n\r\n  drawScene(gl, deltaTime) {\r\n    const scene = this.scene;\r\n    const camera = scene.camera;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 100.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, camera.location);\r\n    for (let i = 0; i < camera.rotations.length; i++) {\r\n      const rotation = camera.rotations[i];\r\n      mat4.rotate(viewMatrix, viewMatrix, rotation.angle, rotation.axis);\r\n    }\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    this.renderOptions.cameraPos = camera.location;\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      this._renderActor(projectionMatrix, viewMatrix, actor);\r\n      this._animateActor(deltaTime, actor);\r\n    }\r\n\r\n    mat4.identity(viewMatrix);\r\n    mat4.rotate(viewMatrix, viewMatrix, camera.rotations[0].angle, camera.rotations[0].axis);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    camera.location[0] += deltaTime * this.movement.front * viewMatrix[2];\r\n    camera.location[1] += deltaTime * this.movement.front * viewMatrix[6];\r\n    camera.location[2] += deltaTime * this.movement.front * viewMatrix[10];\r\n\r\n    camera.location[0] += deltaTime * this.movement.side * viewMatrix[0];\r\n    camera.location[1] += deltaTime * this.movement.side * viewMatrix[4];\r\n    camera.location[2] += deltaTime * this.movement.side * viewMatrix[8];\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      mat4.rotate(modelMatrix, modelMatrix, rotation.angle, rotation.axis);\r\n    }\r\n\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix, this.renderOptions);\r\n  }\r\n\r\n  _animateActor(deltaTime, actor) {\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      rotation.angle += deltaTime * rotation.speed;\r\n    }\r\n  }\r\n}\r\n\r\nexport default RoomScene;\r\n","import ColoredCubeScene from '../scenes/ColoredCubeScene';\r\nimport TexturedCubeScene from '../scenes/TexturedCubeScene';\r\nimport LightedCubeScene from '../scenes/LightedCubeScene';\r\nimport MazeScene from '../scenes/MazeScene';\r\nimport BrickWallScene from '../scenes/BrickWallScene';\r\nimport MaterialScene from '../scenes/MaterialScene';\r\nimport RoomScene from '../scenes/RoomScene';\r\n\r\nclass SceneManager {\r\n  constructor(canvas) {\r\n    this.canvas = canvas;\r\n\r\n    this.resizeViewport = this.resizeViewport.bind(this);\r\n    this.getScene = this.getScene.bind(this);\r\n    this.previousScene = this.previousScene.bind(this);\r\n    this.nextScene = this.nextScene.bind(this);\r\n    this.renderScene = this.renderScene.bind(this);\r\n\r\n    this.scenes = [\r\n      { init: false, render: new ColoredCubeScene() },\r\n      { init: false, render: new TexturedCubeScene() },\r\n      { init: false, render: new LightedCubeScene() },\r\n      { init: false, render: new MazeScene() },\r\n      { init: false, render: new BrickWallScene() },\r\n      { init: false, render: new MaterialScene() },\r\n      { init: false, render: new RoomScene() }\r\n    ];\r\n    this.sceneIndex = this.scenes.length - 1;\r\n\r\n    this.gl = canvas.getContext('webgl');\r\n    if (this.gl === null) {\r\n      alert(\"Unable to initialize WebGL. Your browser or machine may not support it.\");\r\n    } else {\r\n      this.resizeViewport();\r\n      this.gl.enable(this.gl.CULL_FACE);\r\n      this.gl.cullFace(this.gl.BACK);\r\n      const scene = this.scenes[this.sceneIndex];\r\n      if (!scene.init) {\r\n        scene.init = true;\r\n        scene.render.initScene(this.gl);\r\n        if (scene.render.getOptions) {\r\n          scene.options = scene.render.getOptions();\r\n          scene.setOption = scene.render.setOption;\r\n        }\r\n        if (scene.render.mouseMovement) {\r\n          scene.mouseMovement = scene.render.mouseMovement;\r\n        }\r\n        if (scene.render.keyboardState) {\r\n          scene.keyboardState = scene.render.keyboardState;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  resizeViewport() {\r\n    const canvas = this.canvas;\r\n    const rect = canvas.getBoundingClientRect()\r\n    canvas.width = rect.width;\r\n    canvas.height = rect.height;\r\n    this.gl.viewport(0, 0, canvas.width, canvas.height);\r\n  }\r\n\r\n  getScene() {\r\n    return this.scenes[this.sceneIndex];\r\n  }\r\n\r\n  previousScene() {\r\n    this.sceneIndex = (this.sceneIndex - 1) % this.scenes.length;\r\n    if (this.sceneIndex < 0) {\r\n      this.sceneIndex = this.scenes.length - 1;\r\n    }\r\n    const scene = this.scenes[this.sceneIndex];\r\n    if (!scene.init) {\r\n      scene.init = true;\r\n      scene.render.initScene(this.gl);\r\n      if (scene.render.getOptions) {\r\n        scene.options = scene.render.getOptions();\r\n        scene.setOption = scene.render.setOption;\r\n      }\r\n    }\r\n    return this.scenes[this.sceneIndex];\r\n  }\r\n\r\n  nextScene() {\r\n    this.sceneIndex = (this.sceneIndex + 1) % this.scenes.length;\r\n    const scene = this.scenes[this.sceneIndex];\r\n    if (!scene.init) {\r\n      scene.init = true;\r\n      scene.render.initScene(this.gl);\r\n      if (scene.render.getOptions) {\r\n        scene.options = scene.render.getOptions();\r\n        scene.setOption = scene.render.setOption;\r\n      }\r\n    }\r\n    return this.scenes[this.sceneIndex];\r\n  }\r\n\r\n  renderScene(timeStamp) {\r\n    timeStamp *= 0.001;\r\n    if (!this.timeStamp) {\r\n      this.timeStamp = timeStamp;\r\n    }\r\n    const deltaTime = timeStamp - this.timeStamp;\r\n    this.timeStamp = timeStamp;\r\n    const scene = this.scenes[this.sceneIndex];\r\n    scene.fps = Math.round(1.0 / deltaTime);\r\n    scene.render.drawScene(this.gl, deltaTime);\r\n  }\r\n}\r\n\r\nexport default SceneManager;\r\n","import React from 'react';\r\nimport Message from './Message';\r\nimport Controls from './Controls';\r\nimport SceneManager from '../lib/SceneManager';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onResize = this.onResize.bind(this);\r\n    this.onKeyDown = this.onKeyDown.bind(this);\r\n    this.onKeyUp = this.onKeyUp.bind(this);\r\n    this.onMouseMove = this.onMouseMove.bind(this);\r\n    this.onLockChange = this.onLockChange.bind(this);\r\n    this.onClickCanvas = this.onClickCanvas.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onClickPrevious = this.onClickPrevious.bind(this);\r\n    this.onClickNext = this.onClickNext.bind(this);\r\n    this.onClickMessage = this.onClickMessage.bind(this);\r\n    this.onAnimationFrame = this.onAnimationFrame.bind(this);\r\n    this.state = {\r\n      showControls: false\r\n    }\r\n    this.keys = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.sceneManager = new SceneManager(this.canvas);\r\n    const scene = this.sceneManager.getScene();\r\n    const note = scene.mouseMovement ? 'Click the canvas to explore the scene' : undefined;\r\n    this.setState({ scene, note });\r\n    this.canvas.requestPointerLock = this.canvas.requestPointerLock || this.canvas.mozRequestPointerLock;\r\n    document.exitPointerLock = document.exitPointerLock || document.mozExitPointerLock;\r\n    this.frame = window.requestAnimationFrame(this.onAnimationFrame);\r\n    window.addEventListener('resize', this.onResize);\r\n    window.addEventListener('keydown', this.onKeyDown);\r\n    window.addEventListener('keyup', this.onKeyUp);\r\n    document.addEventListener('pointerlockchange', this.onLockChange);\r\n    document.addEventListener('mozpointerlockchange', this.onLockChange);\r\n    this.showMessage(['Press Escape to toggle menu', 'Press Page Up for previous screen', 'Press Page Down for next screen']);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.cancelAnimationFrame(this.frame);\r\n    window.removeEventListener('resize', this.onResize);\r\n    window.removeEventListener('keydown', this.onKeyDown);\r\n    window.removeEventListener('keyup', this.onKeyUp);\r\n    document.removeEventListener('pointerlockchange', this.onLockChange);\r\n    document.removeEventListener('mozpointerlockchange', this.onLockChange);\r\n  }\r\n\r\n  cancelLock() {\r\n    this.captureMouse = false;\r\n    this.captureKeys = false;\r\n    document.exitPointerLock();\r\n  }\r\n\r\n  onResize() {\r\n    this.sceneManager.resizeViewport();\r\n  }\r\n\r\n  onKeyDown(event) {\r\n    event.preventDefault();\r\n    if (!this.keys[event.key]) {\r\n      this.onKeyPress(event.key);\r\n      this.keys[event.key] = true;\r\n      if (this.captureKeys) {\r\n        this.state.scene.keyboardState(this.keys);\r\n      }\r\n    }\r\n  }\r\n\r\n  onKeyUp(event) {\r\n    event.preventDefault();\r\n    this.keys[event.key] = false;\r\n    if (this.captureKeys) {\r\n      this.state.scene.keyboardState(this.keys);\r\n    }\r\n  }\r\n\r\n  onKeyPress(key) {\r\n    if (key === 'Escape') {\r\n      if (this.messageTimer) {\r\n        this.cancelMessage();\r\n      } else {\r\n        this.setState({ showControls: !this.state.showControls });\r\n      }\r\n    } else if (key === 'PageUp') {\r\n      this.cancelLock();\r\n      const scene = this.sceneManager.previousScene();\r\n      const note = scene.mouseMovement ? 'Click the canvas to explore the scene' : undefined;\r\n      this.setState({ scene, note });\r\n    } else if (key === 'PageDown') {\r\n      this.cancelLock();\r\n      const scene = this.sceneManager.nextScene();\r\n      const note = scene.mouseMovement ? 'Click the canvas to explore the scene' : undefined;\r\n      this.setState({ scene, note });\r\n    }\r\n  }\r\n\r\n  onMouseMove(event) {\r\n    if (this.captureMouse) {\r\n      this.state.scene.mouseMovement(event.movementX, event.movementY);\r\n    }\r\n  }\r\n\r\n  onLockChange(event) {\r\n    event.preventDefault();\r\n    if (document.pointerLockElement === this.canvas || document.mozPointerLockElement === this.canvas) {\r\n      document.addEventListener(\"mousemove\", this.onMouseMove);\r\n      this.captureMouse = true;\r\n      if (this.state.scene.keyboardState) {\r\n        this.captureKeys = true;\r\n      }\r\n    } else {\r\n      document.removeEventListener(\"mousemove\", this.onMouseMove);\r\n      this.captureMouse = false;\r\n      this.captureKeys = false;\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  onClickCanvas(event) {\r\n    event.preventDefault();\r\n    if (this.state.scene.mouseMovement) {\r\n      this.canvas.requestPointerLock();\r\n      this.setState({ showControls: false, note: undefined });\r\n    }\r\n  }\r\n\r\n  onChange(control, value) {\r\n    if (value !== control.value) {\r\n      this.state.scene.setOption(control.name, value);\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  onClickPrevious(event) {\r\n    event.preventDefault();\r\n    this.cancelLock();\r\n    const scene = this.sceneManager.previousScene();\r\n    const note = scene.mouseMovement ? 'Click the canvas to explore the scene' : undefined;\r\n    this.setState({ scene, note });\r\n  }\r\n\r\n  onClickNext(event) {\r\n    event.preventDefault();\r\n    this.cancelLock();\r\n    const scene = this.sceneManager.nextScene();\r\n    const note = scene.mouseMovement ? 'Click the canvas to explore the scene' : undefined;\r\n    this.setState({ scene, note });\r\n  }\r\n\r\n  onClickMessage(event) {\r\n    event.preventDefault();\r\n    if (this.messageTimer) {\r\n      this.cancelMessage();\r\n    }\r\n  }\r\n\r\n  showMessage(message) {\r\n    this.setState({ message });\r\n    this.messageTimer = setTimeout(this.clearMessage.bind(this), 10000);\r\n  }\r\n\r\n  clearMessage() {\r\n    this.setState({ message: undefined });\r\n    this.messageTimer = undefined;\r\n  }\r\n\r\n  cancelMessage() {\r\n    clearTimeout(this.messageTimer);\r\n    this.clearMessage();\r\n  }\r\n\r\n  onAnimationFrame(timeStamp) {\r\n    this.sceneManager.renderScene(timeStamp);\r\n    this.setState({ fps: this.state.scene.fps });\r\n    this.frame = window.requestAnimationFrame(this.onAnimationFrame);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"screen\">\r\n        <canvas id=\"canvas\" ref={elem => this.canvas = elem} onClick={this.onClickCanvas}></canvas>\r\n        <div id=\"note\">\r\n          {this.state.fps ? (<div>{this.state.fps} fps</div>) : null}\r\n          {this.state.note ? (<div>{this.state.note}</div>) : null}\r\n        </div>\r\n        <Message message={this.state.message} onClick={this.onClickMessage} />\r\n        <Controls show={this.state.showControls} onClickPrevious={this.onClickPrevious} onClickNext={this.onClickNext} onChange={this.onChange} options={this.state.scene ? this.state.scene.options : undefined} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}