{"version":3,"sources":["components/Message.js","components/Controls.js","components/Credits.js","lib/utility.js","models/Model.js","lib/shapes.js","models/ColorModel.js","scenes/ColorScene.js","models/TexturedCubeModel.js","scenes/TextureScene.js","lib/materials.js","lib/maze.js","models/MazeModel.js","scenes/MazeScene.js","models/BrickWallModel.js","scenes/BrickWallScene.js","models/MaterialModel.js","scenes/MaterialScene.js","lib/collision.js","models/RoomModel.js","scenes/RoomScene.js","lib/SceneManager.js","components/App.js","serviceWorker.js","index.js"],"names":["Message","message","onClick","id","map","text","index","key","DescriptionControl","props","control","className","description","SelectControl","options","i","length","push","value","htmlFor","name","onChange","event","target","BoolControl","type","checked","IntControl","min","max","FloatControl","factor","toFixed","Math","floor","FunctionControl","function","Controls","controls","show","onClickPrevious","onClickNext","option","Credits","children","credits","credit","startsWith","url","slice","href","rel","degreesToRadians","degrees","PI","_typeToString","gl","FLOAT","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT","INT_VEC2","INT_VEC3","INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","SAMPLER_CUBE","_loadShader","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","alert","getShaderInfoLog","deleteShader","loadTexture","texture","createTexture","bindTexture","TEXTURE_2D","internalFormat","RGBA","srcFormat","srcType","UNSIGNED_BYTE","pixel","Uint8Array","texImage2D","image","Image","onload","_isPowerOf2","width","height","generateMipmap","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","src","clearScreen","clearColor","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","pickRandom","data","random","Model","vertexShader","fragmentShader","geometry","bufferCount","textures","diffuse","normal","occlusion","Promise","all","fetch","vertex","then","response","fragment","_setupShader","buffers","_initBuffers","model","shaders","vertexShaders","Array","fill","fragmentShaders","pendingLoads","this","_deleteBuffers","shaderProgram","vsSource","fsSource","VERTEX_SHADER","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","initShaderProgram","shaderParameters","attributeCount","ACTIVE_ATTRIBUTES","attributes","attribute","getActiveAttrib","uniformCount","ACTIVE_UNIFORMS","uniforms","uniform","getActiveUniform","getShaderParameters","program","attribLocations","uniformLocations","forEach","location","getAttribLocation","_addShaderNameToJavascript","getUniformLocation","shaderLocations","inputName","names","toLowerCase","split","out","subBeg","indexOf","subEnd","Number","requirements","vertexNormal","vertexTangent","vertexBitangent","textureCoord","vertexColor","vec3","tangent","bitangent","inputBuffers","positions","normals","tangents","bitangents","textureCoordinates","colors","indices","offset","addSquare","c0","c1","c2","c3","inputBuffer","bufferIndex","color","addFace","vertices","face","addTriangle","c4","addPentagon","addFaces","faces","outputBuffers","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","indexBuffer","ELEMENT_ARRAY_BUFFER","Uint16Array","outputBuffer","position","vertexCount","normalBuffer","tangentBuffer","bitangentBuffer","textureCoordBuffer","colorBuffer","buffer","prop","hasOwnProperty","deleteBuffer","projectionMatrix","viewMatrix","modelMatrix","shaderIndex","material","materials","undefined","vertexAttribPointer","vertexPosition","enableVertexAttribArray","useProgram","uniformMatrix4fv","normalMatrix","mat4","showDiffuseMap","uniform1i","showNormalMap","showAmbientOcclusionMap","showParallaxMap","lightingModel","useColors","parallaxHeightScale","uniform1f","parallaxSteps","parallaxOcclusionMapping","ambientLight","uniform3fv","directionalLight","direction","pointLight","brightness","lights","light","ambient","specular","shininess","cameraPos","samplerDiffuse","activeTexture","TEXTURE0","samplerNormal","TEXTURE1","samplerHeight","TEXTURE2","samplerOcclusion","TEXTURE3","UNSIGNED_SHORT","drawElements","TRIANGLES","numAttributes","disableVertexAttribArray","getShape","shape","s3","sqrt","s6","createTetrahedron","r","createCube","a","createOctahedron","step","theta","x","cos","y","sin","createPentagonalTrapezohedron","phi","b","c","createDodecahedron","createIcosahedron","createIcosphere","recursions","cache","normalize","hypot","getMidpoint","v1","v2","midpoint","faceCount","o1","o2","o3","v3","ColorModel","shapeName","draw","bind","_initModel","_drawModel","Object","assign","_colors","ColorScene","setOption","initScene","drawScene","renderOptions","shapeNames","shapes","scene","actors","scale","rotations","angle","axis","speed","camera","deltaTime","fieldOfView","aspect","canvas","clientWidth","clientHeight","actor","_renderActor","_animateActor","rotation","TexturedCubeModel","textureName","_geometry","f0","f1","f2","f3","b0","b1","b2","b3","TextureScene","_materials","emerald","jade","obsidian","pearl","ruby","turquoise","brass","bronze","chrome","copper","gold","silver","blackPlastic","cyanPlastic","greenPlastic","redPlastic","whitePlastic","yellowPlastic","blackRubber","cyanRubber","greenRubber","redRubber","whiteRubber","yellowRubber","getMaterialList","getMaterial","_directions","generateMaze","windiness","carve","pos","canCarve","dir","isInBounds","addDir","nxt","len","lastDir","start","cells","cell","posCells","includes","pop","generateDungeon","regions","region","carveRegion","my","mx","incrementRegion","numRoomTries","roomExtraSize","rooms","size","_range","rectangularity","room","overlaps","j","other","_isOverlapped","xOffset","yOffset","_addRooms","_createMaze","connectors","connectedRegions","merged","openRegions","connector","_carve","dest","sources","filter","con","abs","_connectRegions","done","exits","_fill","_removeDeadEnds","getMazeBoundingSquares","mapBounds","ofs_x","ofs_y","x1","y1","x2","y2","getMazeSquareCenter","z","_canCarve","_addDir","_isInBounds","pri","sec","MazeModel","maze","update","_updateModel","floorColor","ceilingColor","wallColor_Back","wallColor_Front","wallColor_Left","wallColor_Right","left","right","back","front","MazeScene","createMaze","createDungeon","totalDelta","useMaterials","materialName","_generateMaze","_generateDungeon","BrickWallModel","BrickWallScene","MaterialModel","MaterialScene","materialList","model4","model6","model8","model10","model12","model20","materialIndex","collideCircles","cx","cy","radius","tx","ty","targetRadius","collideCircleRectangle","epsilon","testX","testY","distX","distY","RoomModel","check","f0h","top","f1h","f2h","bottom","f3h","b0h","b1h","b2h","b3h","neighbors","yo","xo","RoomScene","mouseMovement","keyboardState","registerDataChange","forceDataChange","movement","side","keys","onDataChange","_updatePowerUpInfo","_updateMap","dungeon","ready","isSolid","matrix","square","nextSquare","getMazeStartLocation","boundingRectagles","active","_placePowerUps","sx","sy","boundingRadius","collected","total","_detectCollisions","collision","rect","SceneManager","resizeViewport","getScene","previousScene","nextScene","renderScene","getContext","CULL_FACE","cullFace","BACK","scenes","sceneIndex","getBoundingClientRect","viewport","timeStamp","exploreNotes","movementNotes","App","onResize","onKeyDown","onKeyUp","onMouseMove","onLockChange","onClickCanvas","onClickMessage","onAnimationFrame","state","showControls","sceneManager","notes","setState","sceneData","requestPointerLock","mozRequestPointerLock","document","exitPointerLock","mozExitPointerLock","frame","window","requestAnimationFrame","addEventListener","showMessage","cancelAnimationFrame","removeEventListener","captureMouse","captureKeys","preventDefault","onKeyPress","messageTimer","cancelMessage","cancelLock","movementX","movementY","pointerLockElement","mozPointerLockElement","forceUpdate","setTimeout","clearMessage","clearTimeout","ref","elem","note","React","Component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.73c157ff.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Message = ({ message, onClick }) => {\r\n  if (!message) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div id=\"message\" onClick={onClick}>\r\n      {message.map((text, index) => (<div key={index}>{text}</div>))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\n\r\nconst DescriptionControl = (props) => {\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      {control.description}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst SelectControl = (props) => {\r\n  function onChange(event) {\r\n    props.onChange(control, event.target.value);\r\n  }\r\n  const { control } = props;\r\n  const options = [];\r\n  for (let i = 0; i < control.options.length; i++) {\r\n    options.push(\r\n      (<option key={i} value={i}>{control.options[i]}</option>)\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"control\">\r\n      <label htmlFor={control.name}>{control.name}</label>\r\n      <select id={control.name} className=\"select-css\" value={control.value} onChange={onChange}>\r\n        {options}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst BoolControl = (props) => {\r\n  function onChange(event) {\r\n    props.onChange(control, event.target.checked);\r\n  }\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      <label className=\"clickable\" htmlFor={control.name}><input className=\"clickable\" id={control.name} type=\"checkbox\" checked={control.value} onChange={onChange} />{control.name}</label>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst IntControl = (props) => {\r\n  function onChange(event) {\r\n    props.onChange(control, event.target.value);\r\n  }\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      <label htmlFor={control.name}>{control.name} {control.value}</label>\r\n      <input id={control.name} className=\"clickable\" type=\"range\" min={control.min} max={control.max} value={control.value} onChange={onChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst FloatControl = (props) => {\r\n  const factor = 1000;\r\n  function onChange(event) {\r\n    props.onChange(control, event.target.value / factor);\r\n  }\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      <label htmlFor={control.name}>{control.name} {control.value.toFixed(3)}</label>\r\n      <input id={control.name} className=\"clickable\" type=\"range\" min={Math.floor(control.min * factor)} max={Math.floor(control.max * factor)} value={Math.floor(control.value * factor)} onChange={onChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst FunctionControl = (props) => {\r\n  function onClick(event) {\r\n    control.function();\r\n  }\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      <button onClick={onClick}>{control.name}</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Controls = ({ show, onClickPrevious, onClickNext, onChange, options }) => {\r\n  if (!show) {\r\n    return null;\r\n  }\r\n  let controls\r\n  if (options) {\r\n    controls = options.map((option, index) => {\r\n      switch (option.type) {\r\n        case 'description':\r\n          return <DescriptionControl key={index} control={option} />\r\n        case 'select':\r\n          return <SelectControl key={index} control={option} onChange={onChange} />\r\n        case 'bool':\r\n          return <BoolControl key={index} control={option} onChange={onChange} />\r\n        case 'int':\r\n          return <IntControl key={index} control={option} onChange={onChange} />\r\n        case 'float':\r\n          return <FloatControl key={index} control={option} onChange={onChange} />\r\n        case 'function':\r\n          return <FunctionControl key={index} control={option} />\r\n        default:\r\n          return (\r\n            <div key={index} className=\"control\">{option.type} is not supported</div>\r\n          );\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <div id=\"overlay\">\r\n      <div className=\"none\">\r\n        <span className=\"left\" onClick={onClickPrevious}>❮ PREV</span>\r\n        <span className=\"right\" onClick={onClickNext}>NEXT ❯</span>\r\n      </div>\r\n      <div>\r\n        {controls}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Controls;\r\n","import React from 'react';\r\n\r\nconst Credits = ({ show, credits }) => {\r\n  if (!show) {\r\n    return null;\r\n  }\r\n  let children\r\n  if (credits) {\r\n    children = credits.map((credit, index) => {\r\n      if (credit.startsWith('link:')) {\r\n        const url = credit.slice(5);\r\n        return (\r\n          <div key={index} className=\"credit\"><a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{url}</a></div>\r\n        );\r\n      } else if (credit === '') {\r\n        return (\r\n          <div key={index} className=\"credit\"></div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div key={index} className=\"credit\">{credit}</div>\r\n        );\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <div id=\"credits\">\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Credits;\r\n","export function degreesToRadians(degrees) {\r\n  var pi = Math.PI;\r\n  return degrees * (pi / 180);\r\n}\r\n\r\nexport function initShaderProgram(gl, vsSource, fsSource) {\r\n  const vertexShader = _loadShader(gl, gl.VERTEX_SHADER, vsSource);\r\n  const fragmentShader = _loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\r\n  const shaderProgram = gl.createProgram();\r\n  gl.attachShader(shaderProgram, vertexShader);\r\n  gl.attachShader(shaderProgram, fragmentShader);\r\n  gl.linkProgram(shaderProgram);\r\n  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n    alert('Unable to initialize the shader program: ' + gl.getProgramInfoLog(shaderProgram));\r\n    return null;\r\n  }\r\n  return shaderProgram;\r\n}\r\n\r\nexport function getShaderParameters(gl, shaderProgram) {\r\n  const attributeCount = gl.getProgramParameter(shaderProgram, gl.ACTIVE_ATTRIBUTES);\r\n  const attributes = [];\r\n  for (let i = 0; i < attributeCount; i++) {\r\n    const attribute = gl.getActiveAttrib(shaderProgram, i);\r\n    attributes.push({ name: attribute.name, type: _typeToString(gl, attribute.type) });\r\n  }\r\n  const uniformCount = gl.getProgramParameter(shaderProgram, gl.ACTIVE_UNIFORMS);\r\n  const uniforms = [];\r\n  for (let i = 0; i < uniformCount; i++) {\r\n    const uniform = gl.getActiveUniform(shaderProgram, i);\r\n    uniforms.push({ name: uniform.name, type: _typeToString(gl, uniform.type) });\r\n  }\r\n  return {\r\n    attributes,\r\n    uniforms\r\n  };\r\n}\r\n\r\nfunction _typeToString(gl, type) {\r\n  switch (type) {\r\n    case gl.FLOAT:\r\n      return \"FLOAT\";\r\n    case gl.FLOAT_VEC2:\r\n      return \"FLOAT_VEC2\";\r\n    case gl.FLOAT_VEC3:\r\n      return \"FLOAT_VEC3\";\r\n    case gl.FLOAT_VEC4:\r\n      return \"FLOAT_VEC4\";\r\n    case gl.INT:\r\n      return \"INT\";\r\n    case gl.INT_VEC2:\r\n      return \"INT_VEC2\";\r\n    case gl.INT_VEC3:\r\n      return \"INT_VEC3\";\r\n    case gl.INT_VEC4:\r\n      return \"INT_VEC4\";\r\n    case gl.BOOL:\r\n      return \"BOOL\";\r\n    case gl.BOOL_VEC2:\r\n      return \"BOOL_VEC2\";\r\n    case gl.BOOL_VEC3:\r\n      return \"BOOL_VEC3\";\r\n    case gl.BOOL_VEC4:\r\n      return \"BOOL_VEC4\";\r\n    case gl.FLOAT_MAT2:\r\n      return \"FLOAT_MAT2\";\r\n    case gl.FLOAT_MAT3:\r\n      return \"FLOAT_MAT3\";\r\n    case gl.FLOAT_MAT4:\r\n      return \"FLOAT_MAT4\";\r\n    case gl.SAMPLER_2D:\r\n      return \"SAMPLER_2D\";\r\n    case gl.SAMPLER_CUBE:\r\n      return \"SAMPLER_CUBE\";\r\n    default:\r\n      return \"UNKNOWN\";\r\n  }\r\n}\r\n\r\nfunction _loadShader(gl, type, source) {\r\n  const shader = gl.createShader(type);\r\n  gl.shaderSource(shader, source);\r\n  gl.compileShader(shader);\r\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n    alert('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader));\r\n    gl.deleteShader(shader);\r\n    return null;\r\n  }\r\n  return shader;\r\n}\r\n\r\nexport function loadTexture(gl, url) {\r\n  const texture = gl.createTexture();\r\n  gl.bindTexture(gl.TEXTURE_2D, texture);\r\n  const level = 0;\r\n  const internalFormat = gl.RGBA;\r\n  const width = 1;\r\n  const height = 1;\r\n  const border = 0;\r\n  const srcFormat = gl.RGBA;\r\n  const srcType = gl.UNSIGNED_BYTE;\r\n  const pixel = new Uint8Array([0, 0, 255, 255]);\r\n  gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\r\n  const image = new Image();\r\n  image.onload = () => {\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\r\n      srcFormat, srcType, image);\r\n    if (_isPowerOf2(image.width) && _isPowerOf2(image.height)) {\r\n      gl.generateMipmap(gl.TEXTURE_2D);\r\n    } else {\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    }\r\n  };\r\n  image.src = url;\r\n  return texture;\r\n}\r\n\r\nfunction _isPowerOf2(value) {\r\n  return (value & (value - 1)) === 0;\r\n}\r\n\r\nexport function clearScreen(gl) {\r\n  gl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n  gl.clearDepth(1.0);\r\n  gl.enable(gl.DEPTH_TEST);\r\n  gl.depthFunc(gl.LEQUAL);\r\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n}\r\n\r\nexport function pickRandom(data) {\r\n  return data[Math.floor(Math.random() * data.length)];\r\n}\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport * as vec3 from 'gl-matrix/vec3';\r\nimport { loadTexture, initShaderProgram, getShaderParameters } from '../lib/utility'\r\n\r\nclass Model {\r\n  _initModel(options) {\r\n    const { gl, geometry, bufferCount } = options;\r\n\r\n    const textures = [];\r\n    if (options.texture) {\r\n      const texture = {};\r\n      if (options.texture.diffuse) {\r\n        texture.diffuse = loadTexture(gl, options.texture.diffuse);\r\n      }\r\n      if (options.texture.normal) {\r\n        texture.normal = loadTexture(gl, options.texture.normal);\r\n      }\r\n      if (options.texture.height) {\r\n        texture.height = loadTexture(gl, options.texture.height);\r\n      }\r\n      if (options.texture.occlusion) {\r\n        texture.occlusion = loadTexture(gl, options.texture.occlusion);\r\n      }\r\n      textures.push(texture);\r\n    } else if (options.textures) {\r\n      for (let i = 0; i < options.textures.length; i++) {\r\n        const texture = {};\r\n        if (options.textures[i].diffuse) {\r\n          texture.diffuse = loadTexture(gl, options.textures[i].diffuse);\r\n        }\r\n        if (options.textures[i].normal) {\r\n          texture.normal = loadTexture(gl, options.textures[i].normal);\r\n        }\r\n        if (options.textures[i].height) {\r\n          texture.height = loadTexture(gl, options.textures[i].height);\r\n        }\r\n        if (options.textures[i].occlusion) {\r\n          texture.occlusion = loadTexture(gl, options.textures[i].occlusion);\r\n        }\r\n        textures.push(texture);\r\n      }\r\n    }\r\n\r\n    if (options.shader) {\r\n      let vertexShader;\r\n      let fragmentShader;\r\n      Promise.all([\r\n        fetch(options.shader.vertex).then((response) => response.text()).then((text) => vertexShader = text),\r\n        fetch(options.shader.fragment).then((response) => response.text()).then((text) => fragmentShader = text)\r\n      ]).then(() => {\r\n        const shader = this._setupShader(gl, vertexShader, fragmentShader);\r\n        const buffers = this._initBuffers(gl, [shader], geometry, bufferCount || textures.length || 1);\r\n        this.model = {\r\n          shaders: [shader],\r\n          buffers,\r\n          textures\r\n        };\r\n      });\r\n    }\r\n    else {\r\n      const vertexShaders = new Array(options.shaders.length).fill(null);\r\n      const fragmentShaders = new Array(options.shaders.length).fill(null);\r\n      const pendingLoads = [];\r\n      for (let i = 0; i < options.shaders.length; i++) {\r\n        pendingLoads.push(fetch(options.shaders[i].vertex).then((response) => response.text()).then((text) => vertexShaders[i] = text));\r\n        pendingLoads.push(fetch(options.shaders[i].fragment).then((response) => response.text()).then((text) => fragmentShaders[i] = text));\r\n      }\r\n\r\n      Promise.all(pendingLoads)\r\n        .then(() => {\r\n          const shaders = [];\r\n          for (let i = 0; i < options.shaders.length; i++) {\r\n            shaders.push(this._setupShader(gl, vertexShaders[i], fragmentShaders[i]));\r\n          }\r\n          const buffers = this._initBuffers(gl, shaders, geometry, bufferCount || textures.length || 1);\r\n          this.model = {\r\n            shaders,\r\n            buffers,\r\n            textures\r\n          };\r\n        });\r\n    }\r\n  }\r\n\r\n  _updateModel(geometry) {\r\n    const bufferCount = this.model.buffers.length;\r\n    this._deleteBuffers();\r\n    this.model.buffers = this._initBuffers(this.gl, this.model.shaders, geometry, bufferCount);\r\n  }\r\n\r\n  _setupShader(gl, vertexShader, fragmentShader) {\r\n    const shaderProgram = initShaderProgram(gl, vertexShader, fragmentShader);\r\n    const shaderParameters = getShaderParameters(gl, shaderProgram);\r\n    const shader = {\r\n      program: shaderProgram,\r\n      attribLocations: {},\r\n      uniformLocations: {}\r\n    };\r\n    shaderParameters.attributes.forEach((attribute) => {\r\n      const location = gl.getAttribLocation(shaderProgram, attribute.name)\r\n      this._addShaderNameToJavascript(shader.attribLocations, attribute.name, location);\r\n    });\r\n    shaderParameters.uniforms.forEach((uniform) => {\r\n      const location = gl.getUniformLocation(shaderProgram, uniform.name)\r\n      this._addShaderNameToJavascript(shader.uniformLocations, uniform.name, location);\r\n    });\r\n    return shader;\r\n  }\r\n\r\n  _addShaderNameToJavascript(shaderLocations, inputName, location) {\r\n    if (inputName[0] !== 'a' && inputName[0] !== 'u') {\r\n      alert('shader name of ' + inputName + ' is not valid');\r\n      return;\r\n    }\r\n    let outputName = inputName[1].toLowerCase() + inputName.slice(2);\r\n    const names = outputName.split('.');\r\n    let out = shaderLocations;\r\n    for (let i = 0; i < names.length; i++) {\r\n      let name = names[i];\r\n      const subBeg = name.indexOf('[');\r\n      if (subBeg !== -1) {\r\n        const subEnd = name.indexOf(']');\r\n        if (subEnd < subBeg + 2) {\r\n          alert('shader name of ' + inputName + ' is not valid');\r\n          return;\r\n        }\r\n        const index = Number(name.slice(subBeg + 1, subEnd));\r\n        name = name.slice(0, subBeg);\r\n        if (i < names.length - 1) {\r\n          if (!out[name]) {\r\n            out[name] = [];\r\n          }\r\n          if (out[name].length <= index) {\r\n            out[name].length = index + 1;\r\n          }\r\n          if (!out[name][index]) {\r\n            out[name][index] = {};\r\n          }\r\n          out = out[name][index];\r\n        } else {\r\n          if (!out[name]) {\r\n            out[name] = [];\r\n          }\r\n          if (out[name].length <= index) {\r\n            out[name].length = index + 1;\r\n          }\r\n          out[name][index] = location;\r\n        }\r\n      } else {\r\n        if (i < names.length - 1) {\r\n          if (!out[name]) {\r\n            out[name] = {};\r\n          }\r\n          out = out[name];\r\n        } else {\r\n          out[name] = location;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _initBuffers(gl, shaders, geometry, bufferCount) {\r\n    const requirements = {};\r\n\r\n    for (let i = 0; i < shaders.length; i++) {\r\n      const shader = shaders[i];\r\n\r\n      if (shader.attribLocations.vertexNormal) {\r\n        requirements.vertexNormal = true;\r\n      }\r\n\r\n      if (shader.attribLocations.vertexTangent) {\r\n        requirements.vertexTangent = true;\r\n      }\r\n\r\n      if (shader.attribLocations.vertexBitangent) {\r\n        requirements.vertexBitangent = true;\r\n      }\r\n\r\n      if (shader.attribLocations.textureCoord) {\r\n        requirements.textureCoord = true;\r\n      }\r\n\r\n      if (shader.attribLocations.vertexColor) {\r\n        requirements.vertexColor = true;\r\n      }\r\n    }\r\n\r\n    const normal = vec3.create();\r\n    const tangent = vec3.create();\r\n    const bitangent = vec3.create();\r\n\r\n    const inputBuffers = [];\r\n\r\n    for (let i = 0; i < bufferCount; i++) {\r\n      inputBuffers.push({\r\n        positions: [],\r\n        normals: [],\r\n        tangents: [],\r\n        bitangents: [],\r\n        textureCoordinates: [],\r\n        colors: [],\r\n        indices: [],\r\n        offset: 0\r\n      });\r\n    }\r\n\r\n    const addSquare = (c0, c1, c2, c3, options) => {\r\n      let inputBuffer;\r\n      if (options && options.bufferIndex) {\r\n        inputBuffer = inputBuffers[options.bufferIndex];\r\n      } else {\r\n        inputBuffer = inputBuffers[0];\r\n      }\r\n\r\n      const { positions, normals, tangents, bitangents, textureCoordinates, colors, indices, offset } = inputBuffer;\r\n\r\n      positions.push(...c0, ...c1, ...c2, ...c3);\r\n      indices.push(offset + 0, offset + 1, offset + 2, offset + 2, offset + 3, offset + 0);\r\n      inputBuffer.offset += 4;\r\n\r\n      if (requirements.vertexNormal || requirements.vertexTangent || requirements.vertexBitangent) {\r\n        vec3.subtract(tangent, c1, c0);\r\n        vec3.subtract(bitangent, c3, c0);\r\n\r\n        if (requirements.vertexNormal) {\r\n          vec3.cross(normal, tangent, bitangent);\r\n          vec3.normalize(normal, normal);\r\n          normals.push(...normal, ...normal, ...normal, ...normal);\r\n        }\r\n\r\n        if (requirements.vertexTangent) {\r\n          vec3.normalize(tangent, tangent);\r\n          tangents.push(...tangent, ...tangent, ...tangent, ...tangent);\r\n        }\r\n\r\n        if (requirements.vertexBitangent) {\r\n          vec3.normalize(bitangent, bitangent);\r\n          bitangents.push(...bitangent, ...bitangent, ...bitangent, ...bitangent);\r\n        }\r\n      }\r\n\r\n      if (requirements.textureCoord) {\r\n        textureCoordinates.push(0, 0, 1, 0, 1, 1, 0, 1);\r\n      }\r\n\r\n      if (requirements.vertexColor) {\r\n        colors.push(...options.color, ...options.color, ...options.color, ...options.color);\r\n      }\r\n    }\r\n\r\n    const addTriangle = (c0, c1, c2, options) => {\r\n      let inputBuffer;\r\n      if (options.bufferIndex) {\r\n        inputBuffer = inputBuffers[options.bufferIndex];\r\n      } else {\r\n        inputBuffer = inputBuffers[0];\r\n      }\r\n\r\n      const { positions, normals, tangents, bitangents, colors, indices, offset } = inputBuffer;\r\n\r\n      positions.push(...c0, ...c1, ...c2);\r\n      indices.push(offset + 0, offset + 1, offset + 2);\r\n      inputBuffer.offset += 3;\r\n\r\n      if (requirements.vertexNormal || requirements.vertexTangent || requirements.vertexBitangent) {\r\n        vec3.subtract(tangent, c1, c0);\r\n        vec3.subtract(bitangent, c2, c0);\r\n\r\n        if (requirements.vertexNormal) {\r\n          vec3.cross(normal, tangent, bitangent);\r\n          vec3.normalize(normal, normal);\r\n          normals.push(...normal, ...normal, ...normal);\r\n        }\r\n\r\n        if (requirements.vertexTangent) {\r\n          vec3.normalize(tangent, tangent);\r\n          tangents.push(...tangent, ...tangent, ...tangent);\r\n        }\r\n\r\n        if (requirements.vertexBitangent) {\r\n          vec3.normalize(bitangent, bitangent);\r\n          bitangents.push(...bitangent, ...bitangent, ...bitangent);\r\n        }\r\n      }\r\n\r\n      if (requirements.vertexColor) {\r\n        colors.push(...options.color, ...options.color, ...options.color);\r\n      }\r\n    }\r\n\r\n    const addPentagon = (c0, c1, c2, c3, c4, options) => {\r\n      let inputBuffer;\r\n      if (options.bufferIndex) {\r\n        inputBuffer = inputBuffers[options.bufferIndex];\r\n      } else {\r\n        inputBuffer = inputBuffers[0];\r\n      }\r\n\r\n      const { positions, normals, tangents, bitangents, colors, indices, offset } = inputBuffer;\r\n\r\n      positions.push(...c0, ...c1, ...c2, ...c3, ...c4);\r\n      indices.push(offset + 0, offset + 3, offset + 4, offset + 0, offset + 1, offset + 3, offset + 1, offset + 2, offset + 3);\r\n      inputBuffer.offset += 5;\r\n\r\n      if (requirements.vertexNormal || requirements.vertexTangent || requirements.vertexBitangent) {\r\n        vec3.subtract(tangent, c1, c0);\r\n        vec3.subtract(bitangent, c4, c0);\r\n\r\n        if (requirements.vertexNormal) {\r\n          vec3.cross(normal, tangent, bitangent);\r\n          vec3.normalize(normal, normal);\r\n          normals.push(...normal, ...normal, ...normal, ...normal, ...normal);\r\n        }\r\n\r\n        if (requirements.vertexTangent) {\r\n          vec3.normalize(tangent, tangent);\r\n          tangents.push(...tangent, ...tangent, ...tangent, ...tangent, ...tangent);\r\n        }\r\n\r\n        if (requirements.vertexBitangent) {\r\n          vec3.normalize(bitangent, bitangent);\r\n          bitangents.push(...bitangent, ...bitangent, ...bitangent, ...bitangent, ...bitangent);\r\n        }\r\n      }\r\n\r\n      if (requirements.vertexColor) {\r\n        colors.push(...options.color, ...options.color, ...options.color, ...options.color, ...options.color);\r\n      }\r\n    }\r\n\r\n    const addFace = (vertices, face, options) => {\r\n      switch (face.length) {\r\n        case 3:\r\n          addTriangle(vertices[face[0]], vertices[face[1]], vertices[face[2]], options);\r\n          break;\r\n        case 4:\r\n          addSquare(vertices[face[0]], vertices[face[1]], vertices[face[2]], vertices[face[3]], options);\r\n          break;\r\n        case 5:\r\n          addPentagon(vertices[face[0]], vertices[face[1]], vertices[face[2]], vertices[face[3]], vertices[face[4]], options);\r\n          break;\r\n        default:\r\n          alert('faces with ' + face.length + ' vertices are not supported');\r\n      }\r\n    }\r\n\r\n    const addFaces = (vertices, faces, options) => {\r\n      for (let i = 0; i < faces.length; i++) {\r\n        let option = {}\r\n        if (options) {\r\n          if (options.colors) {\r\n            option.color = options.colors[i % options.colors.length];\r\n          }\r\n        }\r\n        addFace(vertices, faces[i], option);\r\n      }\r\n    }\r\n\r\n    geometry({ addSquare, addFaces });\r\n\r\n    const outputBuffers = [];\r\n\r\n    for (let i = 0; i < bufferCount; i++) {\r\n      const inputBuffer = inputBuffers[i];\r\n      const { positions, normals, tangents, bitangents, textureCoordinates, colors, indices } = inputBuffer;\r\n\r\n      const positionBuffer = gl.createBuffer();\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n      gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\r\n\r\n      const indexBuffer = gl.createBuffer();\r\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\r\n\r\n      const outputBuffer = { position: positionBuffer, indices: indexBuffer, vertexCount: indices.length }\r\n\r\n      if (requirements.vertexNormal) {\r\n        const normalBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, normalBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(normals), gl.STATIC_DRAW);\r\n        outputBuffer.normal = normalBuffer;\r\n      }\r\n\r\n      if (requirements.vertexTangent) {\r\n        const tangentBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, tangentBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(tangents), gl.STATIC_DRAW);\r\n        outputBuffer.tangent = tangentBuffer;\r\n      }\r\n\r\n      if (requirements.vertexBitangent) {\r\n        const bitangentBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, bitangentBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(bitangents), gl.STATIC_DRAW);\r\n        outputBuffer.bitangent = bitangentBuffer;\r\n      }\r\n\r\n      if (requirements.textureCoord) {\r\n        const textureCoordBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, textureCoordBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(textureCoordinates), gl.STATIC_DRAW);\r\n        outputBuffer.textureCoord = textureCoordBuffer;\r\n      }\r\n\r\n      if (requirements.vertexColor) {\r\n        const colorBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW);\r\n        outputBuffer.color = colorBuffer;\r\n      }\r\n\r\n      outputBuffers.push(outputBuffer);\r\n    }\r\n\r\n    return outputBuffers;\r\n  }\r\n\r\n  _deleteBuffers() {\r\n    const buffers = this.model.buffers;\r\n    for (let i = 0; i < buffers.length; i++) {\r\n      const buffer = buffers[i];\r\n      buffer.vertexCount = 0;\r\n      for (const prop in buffer) {\r\n        if (buffer.hasOwnProperty(prop) && typeof buffer[prop] === 'object') {\r\n          this.gl.deleteBuffer(buffer[prop]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _drawModel(options) {\r\n    if (!this.model) {\r\n      return;\r\n    }\r\n\r\n    const gl = this.gl;\r\n    const model = this.model;\r\n    const { projectionMatrix, viewMatrix, modelMatrix } = options;\r\n    const { shaders, buffers, textures } = model;\r\n    const shader = shaders[options.shaderIndex ? options.shaderIndex : 0];\r\n\r\n    for (let i = 0; i < buffers.length; i++) {\r\n      const buffer = buffers[i];\r\n      const texture = textures[i];\r\n      const material = options.material ? options.material : (options.materials ? options.materials[i] : undefined);\r\n\r\n      {\r\n        const numComponents = 3;\r\n        const type = gl.FLOAT;\r\n        const normalize = false;\r\n        const stride = 0;\r\n        const offset = 0;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer.position);\r\n        gl.vertexAttribPointer(shader.attribLocations.vertexPosition, numComponents, type, normalize, stride, offset);\r\n        gl.enableVertexAttribArray(shader.attribLocations.vertexPosition);\r\n      }\r\n\r\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer.indices);\r\n\r\n      if (shader.attribLocations.vertexNormal && buffer.normal) {\r\n        const numComponents = 3;\r\n        const type = gl.FLOAT;\r\n        const normalize = false;\r\n        const stride = 0;\r\n        const offset = 0;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer.normal);\r\n        gl.vertexAttribPointer(shader.attribLocations.vertexNormal, numComponents, type, normalize, stride, offset);\r\n        gl.enableVertexAttribArray(shader.attribLocations.vertexNormal);\r\n      }\r\n\r\n      if (shader.attribLocations.vertexTangent && buffer.tangent) {\r\n        const numComponents = 3;\r\n        const type = gl.FLOAT;\r\n        const normalize = false;\r\n        const stride = 0;\r\n        const offset = 0;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer.tangent);\r\n        gl.vertexAttribPointer(shader.attribLocations.vertexTangent, numComponents, type, normalize, stride, offset);\r\n        gl.enableVertexAttribArray(shader.attribLocations.vertexTangent);\r\n      }\r\n\r\n      if (shader.attribLocations.vertexBitangent && buffer.bitangent) {\r\n        const numComponents = 3;\r\n        const type = gl.FLOAT;\r\n        const normalize = false;\r\n        const stride = 0;\r\n        const offset = 0;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer.bitangent);\r\n        gl.vertexAttribPointer(shader.attribLocations.vertexBitangent, numComponents, type, normalize, stride, offset);\r\n        gl.enableVertexAttribArray(shader.attribLocations.vertexBitangent);\r\n      }\r\n\r\n      if (shader.attribLocations.textureCoord && buffer.textureCoord) {\r\n        const numComponents = 2;\r\n        const type = gl.FLOAT;\r\n        const normalize = false;\r\n        const stride = 0;\r\n        const offset = 0;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer.textureCoord);\r\n        gl.vertexAttribPointer(shader.attribLocations.textureCoord, numComponents, type, normalize, stride, offset);\r\n        gl.enableVertexAttribArray(shader.attribLocations.textureCoord);\r\n      }\r\n\r\n      if (shader.attribLocations.vertexColor && buffer.color) {\r\n        const numComponents = 3;\r\n        const type = gl.FLOAT;\r\n        const normalize = false;\r\n        const stride = 0;\r\n        const offset = 0;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer.color);\r\n        gl.vertexAttribPointer(shader.attribLocations.vertexColor, numComponents, type, normalize, stride, offset);\r\n        gl.enableVertexAttribArray(shader.attribLocations.vertexColor);\r\n      }\r\n\r\n      gl.useProgram(shader.program);\r\n      gl.uniformMatrix4fv(shader.uniformLocations.projectionMatrix, false, projectionMatrix);\r\n      gl.uniformMatrix4fv(shader.uniformLocations.modelMatrix, false, modelMatrix);\r\n      gl.uniformMatrix4fv(shader.uniformLocations.viewMatrix, false, viewMatrix);\r\n\r\n      if (shader.uniformLocations.normalMatrix) {\r\n        const normalMatrix = mat4.create();\r\n        mat4.invert(normalMatrix, modelMatrix);\r\n        mat4.transpose(normalMatrix, normalMatrix);\r\n        gl.uniformMatrix4fv(shader.uniformLocations.normalMatrix, false, normalMatrix);\r\n      }\r\n\r\n      if (shader.uniformLocations.showDiffuseMap && options.showDiffuseMap !== undefined) {\r\n        gl.uniform1i(shader.uniformLocations.showDiffuseMap, options.showDiffuseMap);\r\n      }\r\n\r\n      if (shader.uniformLocations.showNormalMap && options.showNormalMap !== undefined) {\r\n        gl.uniform1i(shader.uniformLocations.showNormalMap, options.showNormalMap);\r\n      }\r\n\r\n      if (shader.uniformLocations.showAmbientOcclusionMap && options.showAmbientOcclusionMap !== undefined) {\r\n        gl.uniform1i(shader.uniformLocations.showAmbientOcclusionMap, options.showAmbientOcclusionMap);\r\n      }\r\n\r\n      if (shader.uniformLocations.showParallaxMap && options.showParallaxMap !== undefined) {\r\n        gl.uniform1i(shader.uniformLocations.showParallaxMap, options.showParallaxMap);\r\n      }\r\n\r\n      if (shader.uniformLocations.lightingModel && options.lightingModel !== undefined) {\r\n        gl.uniform1i(shader.uniformLocations.lightingModel, options.lightingModel);\r\n      }\r\n\r\n      if (shader.uniformLocations.useColors && options.useColors !== undefined) {\r\n        gl.uniform1i(shader.uniformLocations.useColors, options.useColors);\r\n      }\r\n\r\n      if (shader.uniformLocations.parallaxHeightScale && options.parallaxHeightScale !== undefined) {\r\n        gl.uniform1f(shader.uniformLocations.parallaxHeightScale, options.parallaxHeightScale);\r\n      }\r\n\r\n      if (shader.uniformLocations.parallaxSteps && options.parallaxSteps !== undefined) {\r\n        gl.uniform1i(shader.uniformLocations.parallaxSteps, options.parallaxSteps);\r\n      }\r\n\r\n      if (shader.uniformLocations.parallaxOcclusionMapping && options.parallaxOcclusionMapping !== undefined) {\r\n        gl.uniform1i(shader.uniformLocations.parallaxOcclusionMapping, options.parallaxOcclusionMapping);\r\n      }\r\n\r\n      if (shader.uniformLocations.ambientLight && options.ambientLight) {\r\n        gl.uniform3fv(shader.uniformLocations.ambientLight, options.ambientLight);\r\n      }\r\n\r\n      if (shader.uniformLocations.directionalLight && options.directionalLight) {\r\n        const direction = vec3.clone(options.directionalLight.direction);\r\n        vec3.normalize(direction, direction);\r\n        gl.uniform3fv(shader.uniformLocations.directionalLight.color, options.directionalLight.color);\r\n        gl.uniform3fv(shader.uniformLocations.directionalLight.direction, direction);\r\n      }\r\n\r\n      if (shader.uniformLocations.pointLight && options.pointLight) {\r\n        gl.uniform3fv(shader.uniformLocations.pointLight.color, options.pointLight.color);\r\n        gl.uniform3fv(shader.uniformLocations.pointLight.position, options.pointLight.position);\r\n        gl.uniform1f(shader.uniformLocations.pointLight.brightness, options.pointLight.brightness);\r\n      }\r\n\r\n      if (shader.uniformLocations.lights && options.lights) {\r\n        const lights = options.lights;\r\n        for (let i = 0; i < lights.length; i++) {\r\n          const light = lights[i];\r\n          gl.uniform3fv(shader.uniformLocations.lights[i].position, light.position);\r\n          gl.uniform3fv(shader.uniformLocations.lights[i].ambient, light.ambient);\r\n          gl.uniform3fv(shader.uniformLocations.lights[i].diffuse, light.diffuse);\r\n          gl.uniform3fv(shader.uniformLocations.lights[i].specular, light.specular);\r\n        }\r\n      }\r\n\r\n      if (shader.uniformLocations.material && material) {\r\n        gl.uniform3fv(shader.uniformLocations.material.ambient, material.ambient);\r\n        gl.uniform3fv(shader.uniformLocations.material.diffuse, material.diffuse);\r\n        gl.uniform3fv(shader.uniformLocations.material.specular, material.specular);\r\n        gl.uniform1f(shader.uniformLocations.material.shininess, material.shininess);\r\n      }\r\n\r\n      if (shader.uniformLocations.cameraPos && options.cameraPos) {\r\n        gl.uniform3fv(shader.uniformLocations.cameraPos, options.cameraPos);\r\n      }\r\n\r\n      if (shader.uniformLocations.samplerDiffuse && texture.diffuse) {\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(gl.TEXTURE_2D, texture.diffuse);\r\n        gl.uniform1i(shader.uniformLocations.samplerDiffuse, 0);\r\n      }\r\n\r\n      if (shader.uniformLocations.samplerNormal && texture.normal) {\r\n        gl.activeTexture(gl.TEXTURE1);\r\n        gl.bindTexture(gl.TEXTURE_2D, texture.normal);\r\n        gl.uniform1i(shader.uniformLocations.samplerNormal, 1);\r\n      }\r\n\r\n      if (shader.uniformLocations.samplerHeight && texture.height) {\r\n        gl.activeTexture(gl.TEXTURE2);\r\n        gl.bindTexture(gl.TEXTURE_2D, texture.height);\r\n        gl.uniform1i(shader.uniformLocations.samplerHeight, 2);\r\n      }\r\n\r\n      if (shader.uniformLocations.samplerOcclusion && texture.occlusion) {\r\n        gl.activeTexture(gl.TEXTURE3);\r\n        gl.bindTexture(gl.TEXTURE_2D, texture.occlusion);\r\n        gl.uniform1i(shader.uniformLocations.samplerOcclusion, 3);\r\n      }\r\n\r\n      {\r\n        const vertexCount = buffer.vertexCount;\r\n        const type = gl.UNSIGNED_SHORT;\r\n        const offset = 0;\r\n        gl.drawElements(gl.TRIANGLES, vertexCount, type, offset);\r\n      }\r\n\r\n      const numAttributes = gl.getProgramParameter(shader.program, gl.ACTIVE_ATTRIBUTES);\r\n      for (let i = 0; i < numAttributes; i++) {\r\n        gl.disableVertexAttribArray(i);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Model;\r\n","export function getShape(shape) {\r\n  if (shape === 'tetrahedron') {\r\n    return createTetrahedron();\r\n  }\r\n\r\n  if (shape === 'cube') {\r\n    return createCube();\r\n  }\r\n\r\n  if (shape === 'octahedron') {\r\n    return createOctahedron();\r\n  }\r\n\r\n  if (shape === 'pentagonaltrapezohedron') {\r\n    return createPentagonalTrapezohedron();\r\n  }\r\n\r\n  if (shape === 'dodecahedron') {\r\n    return createDodecahedron();\r\n  }\r\n\r\n  if (shape === 'icosahedron') {\r\n    return createIcosahedron();\r\n  }\r\n\r\n  if (shape === 'icosphere1') {\r\n    return createIcosphere(1);\r\n  }\r\n\r\n  if (shape === 'icosphere2') {\r\n    return createIcosphere(2);\r\n  }\r\n\r\n  if (shape === 'icosphere3') {\r\n    return createIcosphere(3);\r\n  }\r\n}\r\n\r\nexport function getShapeList() {\r\n  return [\r\n    'tetrahedron',\r\n    'cube',\r\n    'octahedron',\r\n    'pentagonaltrapezohedron',\r\n    'dodecahedron',\r\n    'icosahedron',\r\n    'icosphere1',\r\n    'icosphere2',\r\n    'icosphere3'\r\n  ];\r\n}\r\n\r\nexport function createTetrahedron() {\r\n  const s3 = Math.sqrt(3);\r\n  const s6 = Math.sqrt(6);\r\n\r\n  const vertices = [\r\n    [s3 / 3, -s6 / 3 * 0.333 + s6 * 0.025, 0],         // right\r\n    [-s3 / 6, -s6 / 3 * 0.333 + s6 * 0.025, 1 / 2],    // left front\r\n    [-s3 / 6, -s6 / 3 * 0.333 + s6 * 0.025, -1 / 2],   // left back\r\n    [0, s6 / 3 * 0.666 + s6 * 0.025, 0]                // top\r\n  ];\r\n\r\n  const faces = [\r\n    [0, 1, 2],\r\n    [3, 1, 0],\r\n    [3, 0, 2],\r\n    [3, 2, 1]\r\n  ];\r\n\r\n  return { vertices, faces };\r\n}\r\n\r\nexport function createCube() {\r\n  const r = .35;\r\n\r\n  const vertices = [\r\n    [-r, -r, -r],\r\n    [-r, -r, r],\r\n    [r, -r, r],\r\n    [r, -r, -r],\r\n    [-r, r, -r],\r\n    [-r, r, r],\r\n    [r, r, r],\r\n    [r, r, -r]\r\n  ];\r\n\r\n  const faces = [\r\n    [0, 3, 2, 1],   // bottom\r\n    [4, 5, 6, 7],   // top\r\n    [0, 1, 5, 4],   // left\r\n    [2, 3, 7, 6],   // right\r\n    [1, 2, 6, 5],   // front\r\n    [3, 0, 4, 7]    // back\r\n  ];\r\n\r\n  return { vertices, faces };\r\n}\r\n\r\nexport function createOctahedron() {\r\n  const a = 1 / (2 * Math.sqrt(2)) * 1.3;\r\n  const b = 1 / 2 * 1.3;\r\n\r\n  const vertices = [\r\n    [-a, 0, a],    // front left\r\n    [a, 0, a],     // front right\r\n    [a, 0, -a],    // back right\r\n    [-a, 0, -a],   // back left\r\n    [0, b, 0],     // top\r\n    [0, -b, 0]     // bottom\r\n  ];\r\n\r\n  const faces = [\r\n    [3, 0, 4],\r\n    [2, 3, 4],\r\n    [1, 2, 4],\r\n    [0, 1, 4],\r\n    [3, 2, 5],\r\n    [0, 3, 5],\r\n    [2, 1, 5],\r\n    [1, 0, 5]\r\n  ];\r\n\r\n  return { vertices, faces };\r\n}\r\n\r\nexport function createPentagonalTrapezohedron() {\r\n  const height = 0.7;\r\n  const radius = 0.5;\r\n  let offset = 0.05;\r\n  const vertices = [];\r\n  const step = Math.PI / 5;\r\n  for (var theta = 0; theta < 2 * Math.PI; theta += step) {\r\n    const x = radius * Math.cos(theta);\r\n    const y = radius * Math.sin(theta);\r\n    vertices.push([x, offset, y]);\r\n    offset = -offset;\r\n  }\r\n  vertices.push([0, height, 0]);\r\n  vertices.push([0, -height, 0]);\r\n\r\n  const faces = [\r\n    [10, 2, 1, 0],\r\n    [10, 4, 3, 2],\r\n    [10, 6, 5, 4],\r\n    [10, 8, 7, 6],\r\n    [10, 0, 9, 8],\r\n    [11, 1, 2, 3],\r\n    [11, 3, 4, 5],\r\n    [11, 5, 6, 7],\r\n    [11, 7, 8, 9],\r\n    [11, 9, 0, 1]\r\n  ];\r\n\r\n  return { vertices, faces };\r\n}\r\n\r\nexport function createDodecahedron() {\r\n  const phi = (1 + Math.sqrt(5)) / 2;\r\n  const a = 0.5;\r\n  const b = 0.5 * 1 / phi;\r\n  const c = 0.5 * (2 - phi);\r\n\r\n  const vertices = [\r\n    [c, 0, a],\r\n    [-c, 0, a],\r\n    [-b, b, b],\r\n    [0, a, c],\r\n    [b, b, b],\r\n    [b, -b, b],\r\n    [0, -a, c],\r\n    [-b, -b, b],\r\n    [c, 0, -a],\r\n    [-c, 0, -a],\r\n    [-b, -b, -b],\r\n    [0, -a, -c],\r\n    [b, -b, -b],\r\n    [b, b, -b],\r\n    [0, a, -c],\r\n    [-b, b, -b],\r\n    [a, c, 0],\r\n    [-a, c, 0],\r\n    [-a, -c, 0],\r\n    [a, -c, 0]\r\n  ];\r\n\r\n  const faces = [\r\n    [4, 3, 2, 1, 0],\r\n    [7, 6, 5, 0, 1],\r\n    [12, 11, 10, 9, 8],\r\n    [15, 14, 13, 8, 9],\r\n    [14, 3, 4, 16, 13],\r\n    [3, 14, 15, 17, 2],\r\n    [11, 6, 7, 18, 10],\r\n    [6, 11, 12, 19, 5],\r\n    [4, 0, 5, 19, 16],\r\n    [12, 8, 13, 16, 19],\r\n    [15, 9, 10, 18, 17],\r\n    [7, 1, 2, 17, 18]\r\n  ];\r\n\r\n  return { vertices, faces };\r\n}\r\n\r\nexport function createIcosahedron() {\r\n  const phi = (1 + Math.sqrt(5)) / 2;\r\n  const a = 1 / 2;\r\n  const b = 1 / (2 * phi);\r\n\r\n  const vertices = [\r\n    [0, b, -a],\r\n    [b, a, 0],\r\n    [-b, a, 0],\r\n    [0, b, a],\r\n    [0, -b, a],\r\n    [-a, 0, b],\r\n    [a, 0, b],\r\n    [0, -b, -a],\r\n    [a, 0, -b],\r\n    [-a, 0, -b],\r\n    [b, -a, 0],\r\n    [-b, -a, 0]\r\n  ];\r\n\r\n  const faces = [\r\n    [1, 0, 2],\r\n    [2, 3, 1],\r\n    [4, 3, 5],\r\n    [6, 3, 4],\r\n    [7, 0, 8],\r\n    [9, 0, 7],\r\n    [10, 4, 11],\r\n    [11, 7, 10],\r\n    [5, 2, 9],\r\n    [9, 11, 5],\r\n    [8, 1, 6],\r\n    [6, 10, 8],\r\n    [5, 3, 2],\r\n    [1, 3, 6],\r\n    [2, 0, 9],\r\n    [8, 0, 1],\r\n    [9, 7, 11],\r\n    [10, 7, 8],\r\n    [11, 4, 5],\r\n    [6, 4, 10]\r\n  ];\r\n\r\n  return { vertices, faces };\r\n}\r\n\r\nexport function createIcosphere(recursions) {\r\n  const { faces, vertices } = createIcosahedron();\r\n\r\n  const cache = {};\r\n\r\n  const normalize = (vertex) => {\r\n    const length = Math.hypot(vertex[0], vertex[1], vertex[2]) * 1.8666666666666666666666666666667;\r\n    vertex[0] /= length;\r\n    vertex[1] /= length;\r\n    vertex[2] /= length;\r\n  }\r\n\r\n  const getMidpoint = (v1, v2) => {\r\n    let key;\r\n    if (v1 < v2) {\r\n      key = v1 + '_' + v2;\r\n    } else {\r\n      key = v2 + '_' + v1;\r\n    }\r\n    if (cache[key]) {\r\n      return cache[key];\r\n    }\r\n    const midpoint = [(vertices[v1][0] + vertices[v2][0]) / 2.0, (vertices[v1][1] + vertices[v2][1]) / 2.0, (vertices[v1][2] + vertices[v2][2]) / 2.0];\r\n    normalize(midpoint);\r\n    vertices.push(midpoint);\r\n    cache[key] = vertices.length - 1;\r\n    return vertices.length - 1;\r\n  }\r\n\r\n  for (const vertex of vertices) {\r\n    normalize(vertex);\r\n  }\r\n\r\n  for (let r = 0; r < recursions; r++) {\r\n    const faceCount = faces.length;\r\n\r\n    for (let i = 0; i < faceCount; i++) {\r\n      const face = faces[i];\r\n      const o1 = face[0];\r\n      const o2 = face[1];\r\n      const o3 = face[2];\r\n      const v1 = getMidpoint(o1, o2);\r\n      const v2 = getMidpoint(o2, o3);\r\n      const v3 = getMidpoint(o3, o1);\r\n      face[0] = v1;\r\n      face[1] = v2;\r\n      face[2] = v3;\r\n      faces.push([o1, v1, v3]);\r\n      faces.push([o2, v2, v1]);\r\n      faces.push([o3, v3, v2]);\r\n    }\r\n  }\r\n\r\n  return { vertices, faces };\r\n}","import Model from './Model';\r\nimport { getShape } from '../lib/shapes';\r\n\r\nclass ColorModel extends Model {\r\n  constructor(gl, shapeName, colors) {\r\n    super(gl);\r\n    this.gl = gl;\r\n    this.draw = this.draw.bind(this);\r\n    this._initModel({\r\n      gl,\r\n      geometry: ({ addFaces }) => {\r\n        const shape = getShape(shapeName);\r\n        if (shape) {\r\n          addFaces(shape.vertices, shape.faces, { colors });\r\n        } else {\r\n          alert('shape ' + shapeName + ' not found');\r\n        }\r\n      },\r\n      shader: {\r\n        vertex: 'shaders/color_L/vertex.glsl',\r\n        fragment: 'shaders/color_L/fragment.glsl'\r\n      }\r\n    });\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix, options) {\r\n    this._drawModel(Object.assign({ projectionMatrix, viewMatrix, modelMatrix }, options));\r\n  }\r\n}\r\n\r\nexport default ColorModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen } from '../lib/utility'\r\nimport ColorModel from '../models/ColorModel';\r\nimport { getShapeList } from '../lib/shapes';\r\n\r\nconst _colors = [\r\n  [1.0, 0.0, 0.0],\r\n  [0.0, 0.0, 1.0],\r\n  [0.0, 1.0, 0.0],\r\n  [1.0, 1.0, 0.0],\r\n  [0.0, 1.0, 1.0],\r\n  [1.0, 0.0, 1.0],\r\n  [1.0, 0.5, 0.0],\r\n  [0.0, 1.0, 0.5],\r\n  [1.0, 0.0, 0.5],\r\n  [0.5, 1.0, 0.0],\r\n  [0.0, 0.5, 1.0],\r\n  [0.5, 0.0, 1.0],\r\n  [1.0, 0.5, 0.5],\r\n  [0.5, 1.0, 0.5],\r\n  [0.5, 0.5, 1.0],\r\n  [1.0, 1.0, 0.5],\r\n  [1.0, 0.5, 1.0],\r\n  [0.5, 1.0, 1.0],\r\n  [0.5, 0.5, 0.5],\r\n  [1.0, 1.0, 1.0]\r\n];\r\n\r\nclass ColorScene {\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n    this.setOption = this.setOption.bind(this);\r\n    this.initScene = this.initScene.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n    this.renderOptions = {\r\n      ambientLight: [0.2, 0.2, 0.2],\r\n      directionalLight: {\r\n        color: [0.0, 0.0, 0.0],\r\n        direction: [0.0, 0.0, 0.0]\r\n      },\r\n      pointLight: {\r\n        color: [1.0, 1.0, 1.0],\r\n        position: [0.0, 0.0, 0.0],\r\n        brightness: 25.0\r\n      },\r\n      cameraPos: [0.0, 0.0, 0.0],\r\n      lightingModel: 0,\r\n      useColors: 1\r\n    };\r\n    const shapeNames = getShapeList();\r\n    this.shapes = [];\r\n    for (let i = 0; i < shapeNames.length; i++) {\r\n      this.shapes.push(new ColorModel(this.gl, shapeNames[i], _colors));\r\n    }\r\n    this.options = [\r\n      {\r\n        description: 'Colored dodecahedron and icosahedron with your choice of lighting',\r\n        type: 'description'\r\n      },\r\n      {\r\n        name: 'Use Colors',\r\n        id: 'useColors',\r\n        type: 'bool',\r\n        value: this.renderOptions.useColors\r\n      },\r\n      {\r\n        name: 'Left Model',\r\n        type: 'select',\r\n        options: shapeNames\r\n      },\r\n      {\r\n        name: 'Right Model',\r\n        type: 'select',\r\n        options: shapeNames\r\n      },\r\n      {\r\n        name: 'Lighting Model',\r\n        id: 'lightingModel',\r\n        type: 'select',\r\n        options: ['Unlit', 'Vertex Lighting', 'Fragment Lighting'],\r\n        value: this.renderOptions.lightingModel\r\n      }\r\n    ];\r\n  }\r\n\r\n  setOption(option, value) {\r\n    option.value = Number(value);\r\n    if (option.id) {\r\n      this.renderOptions[option.id] = option.value;\r\n    }\r\n    else if (option.name === 'Left Model') {\r\n      this.scene.actors[0].model = this.shapes[option.value];\r\n    }\r\n    else if (option.name === 'Right Model') {\r\n      this.scene.actors[1].model = this.shapes[option.value];\r\n    }\r\n  }\r\n\r\n  initScene() {\r\n    this.scene = {\r\n      actors: [\r\n        {\r\n          location: [-1.6, 0.0, -6.0],\r\n          scale: [2.8, 2.8, 2.8],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.2\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          location: [1.6, 0.0, -6.0],\r\n          scale: [2.8, 2.8, 2.8],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.2\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      camera: [0.0, 0.0, 0.0]\r\n    };\r\n\r\n    this.setOption(this.options[2], 4);\r\n    this.setOption(this.options[3], 5);\r\n  }\r\n\r\n  drawScene(deltaTime) {\r\n    const gl = this.gl;\r\n    const scene = this.scene;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 100.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, scene.camera);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      this._renderActor(projectionMatrix, viewMatrix, actor);\r\n      this._animateActor(deltaTime, actor);\r\n    }\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    if (actor.scale) {\r\n      mat4.scale(modelMatrix, modelMatrix, actor.scale);\r\n    }\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      mat4.rotate(modelMatrix, modelMatrix, rotation.angle, rotation.axis);\r\n    }\r\n\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix, this.renderOptions);\r\n  }\r\n\r\n  _animateActor(deltaTime, actor) {\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      rotation.angle += deltaTime * rotation.speed;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ColorScene;\r\n","import Model from './Model';\r\n\r\nclass TexturedCubeModel extends Model {\r\n  constructor(gl, textureName) {\r\n    super(gl);\r\n    this.gl = gl;\r\n    this.draw = this.draw.bind(this);\r\n    this._initModel({\r\n      gl,\r\n      geometry: this._geometry,\r\n      texture: {\r\n        diffuse: textureName\r\n      },\r\n      shader: {\r\n        vertex: 'shaders/texture_LD/vertex.glsl',\r\n        fragment: 'shaders/texture_LD/fragment.glsl'\r\n      }\r\n    });\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix, options) {\r\n    const {\r\n      ambientLight,\r\n      directionalLight,\r\n      pointLight,\r\n      cameraPos,\r\n      lightingModel\r\n    } = options;\r\n    this._drawModel({\r\n      projectionMatrix,\r\n      viewMatrix,\r\n      modelMatrix,\r\n      ambientLight,\r\n      directionalLight,\r\n      pointLight,\r\n      cameraPos,\r\n      lightingModel\r\n    });\r\n  }\r\n\r\n  _geometry({ addSquare }) {\r\n    const f0 = [-1, -1, 1];\r\n    const f1 = [1, -1, 1];\r\n    const f2 = [1, 1, 1];\r\n    const f3 = [-1, 1, 1];\r\n    const b0 = [-1, -1, -1];\r\n    const b1 = [1, -1, -1];\r\n    const b2 = [1, 1, -1];\r\n    const b3 = [-1, 1, -1];\r\n    addSquare(f0, f1, f2, f3);  // front\r\n    addSquare(b1, b0, b3, b2);  // back\r\n    addSquare(b0, f0, f3, b3);  // left\r\n    addSquare(f1, b1, b2, f2);  // right\r\n    addSquare(b0, b1, f1, f0);  // bottom\r\n    addSquare(b2, b3, f3, f2);  // top\r\n  }\r\n}\r\n\r\nexport default TexturedCubeModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen } from '../lib/utility'\r\nimport TexturedCubeModel from '../models/TexturedCubeModel';\r\n\r\nclass TextureScene {\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n    this.setOption = this.setOption.bind(this);\r\n    this.initScene = this.initScene.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n    this.renderOptions = {\r\n      ambientLight: [0.2, 0.2, 0.2],\r\n      directionalLight: {\r\n        color: [0.0, 0.0, 0.0],\r\n        direction: [0.0, 0.0, 0.0]\r\n      },\r\n      pointLight: {\r\n        color: [1.0, 1.0, 1.0],\r\n        position: [0.0, 0.0, 0.0],\r\n        brightness: 25.0\r\n      },\r\n      cameraPos: [0.0, 0.0, 0.0],\r\n      lightingModel: 0\r\n    };\r\n    this.options = [\r\n      {\r\n        description: 'Textured cubes with diffuse maps only with your choice of lighting',\r\n        type: 'description'\r\n      },\r\n      {\r\n        name: 'Lighting Model',\r\n        id: 'lightingModel',\r\n        type: 'select',\r\n        options: ['Unlit', 'Vertex Lighting', 'Fragment Lighting'],\r\n        value: this.renderOptions.lightingModel\r\n      }\r\n    ];\r\n    this.credits = [\r\n      'Textures created by João Paulo',\r\n      'link:https://3dtextures.me/about/'\r\n    ];\r\n  }\r\n\r\n  setOption(option, value) {\r\n    option.value = Number(value);\r\n    this.renderOptions[option.id] = option.value;\r\n  }\r\n\r\n  initScene() {\r\n    this.scene = {\r\n      actors: [\r\n        {\r\n          model: new TexturedCubeModel(this.gl, 'images/Tiles_035_basecolor.jpg'),\r\n          location: [-1.6, 0.0, -6.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.2\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: new TexturedCubeModel(this.gl, 'images/Wood_planks_011_basecolor.jpg'),\r\n          location: [1.6, 0.0, -6.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.2\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      camera: [0.0, 0.0, 0.0]\r\n    };\r\n  }\r\n\r\n  drawScene(deltaTime) {\r\n    const gl = this.gl;\r\n    const scene = this.scene;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 100.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, scene.camera);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      this._renderActor(projectionMatrix, viewMatrix, actor);\r\n      this._animateActor(deltaTime, actor);\r\n    }\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      mat4.rotate(modelMatrix, modelMatrix, rotation.angle, rotation.axis);\r\n    }\r\n\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix, this.renderOptions);\r\n  }\r\n\r\n  _animateActor(deltaTime, actor) {\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      rotation.angle += deltaTime * rotation.speed;\r\n    }\r\n  }\r\n}\r\n\r\nexport default TextureScene;\r\n","const _materials = {\r\n  emerald: {\r\n    ambient: [0.0215, 0.1745, 0.0215], diffuse: [0.07568, 0.61424, 0.07568], specular: [0.633, 0.727811, 0.633], shininess: 0.6\r\n  },\r\n  jade: {\r\n    ambient: [0.135, 0.2225, 0.1575], diffuse: [0.54, 0.89, 0.63], specular: [0.316228, 0.316228, 0.316228], shininess: 0.1\r\n  },\r\n  obsidian: {\r\n    ambient: [0.05375, 0.05, 0.06625], diffuse: [0.18275, 0.17, 0.22525], specular: [0.332741, 0.328634, 0.346435], shininess: 0.3\r\n  },\r\n  pearl: {\r\n    ambient: [0.25, 0.20725, 0.20725], diffuse: [1, 0.829, 0.829], specular: [0.296648, 0.296648, 0.296648], shininess: 0.088\r\n  },\r\n  ruby: {\r\n    ambient: [0.1745, 0.01175, 0.01175], diffuse: [0.61424, 0.04136, 0.04136], specular: [0.727811, 0.626959, 0.626959], shininess: 0.6\r\n  },\r\n  turquoise: {\r\n    ambient: [0.1, 0.18725, 0.1745], diffuse: [0.396, 0.74151, 0.69102], specular: [0.297254, 0.30829, 0.306678], shininess: 0.1\r\n  },\r\n  brass: {\r\n    ambient: [0.329412, 0.223529, 0.027451], diffuse: [0.780392, 0.568627, 0.113725], specular: [0.992157, 0.941176, 0.807843], shininess: 0.21794872\r\n  },\r\n  bronze: {\r\n    ambient: [0.2125, 0.1275, 0.054], diffuse: [0.714, 0.4284, 0.18144], specular: [0.393548, 0.271906, 0.166721], shininess: 0.2\r\n  },\r\n  chrome: {\r\n    ambient: [0.25, 0.25, 0.25], diffuse: [0.4, 0.4, 0.4], specular: [0.774597, 0.774597, 0.774597], shininess: 0.6\r\n  },\r\n  copper: {\r\n    ambient: [0.19125, 0.0735, 0.0225], diffuse: [0.7038, 0.27048, 0.0828], specular: [0.256777, 0.137622, 0.086014], shininess: 0.1\r\n  },\r\n  gold: {\r\n    ambient: [0.24725, 0.1995, 0.0745], diffuse: [0.75164, 0.60648, 0.22648], specular: [0.628281, 0.555802, 0.366065], shininess: 0.4\r\n  },\r\n  silver: {\r\n    ambient: [0.19225, 0.19225, 0.19225], diffuse: [0.50754, 0.50754, 0.50754], specular: [0.508273, 0.508273, 0.508273], shininess: 0.4\r\n  },\r\n  blackPlastic: {\r\n    ambient: [0.0, 0.0, 0.0], diffuse: [0.01, 0.01, 0.01], specular: [0.50, 0.50, 0.50], shininess: 0.25\r\n  },\r\n  cyanPlastic: {\r\n    ambient: [0.0, 0.1, 0.06], diffuse: [0.0, 0.50980392, 0.50980392], specular: [0.50196078, 0.50196078, 0.50196078], shininess: 0.25\r\n  },\r\n  greenPlastic: {\r\n    ambient: [0.0, 0.0, 0.0], diffuse: [0.1, 0.35, 0.1], specular: [0.45, 0.55, 0.45], shininess: 0.25\r\n  },\r\n  redPlastic: {\r\n    ambient: [0.0, 0.0, 0.0], diffuse: [0.5, 0.0, 0.0], specular: [0.7, 0.6, 0.6], shininess: 0.25\r\n  },\r\n  whitePlastic: {\r\n    ambient: [0.0, 0.0, 0.0], diffuse: [0.55, 0.55, 0.55], specular: [0.70, 0.70, 0.70], shininess: 0.25\r\n  },\r\n  yellowPlastic: {\r\n    ambient: [0.0, 0.0, 0.0], diffuse: [0.5, 0.5, 0.0], specular: [0.60, 0.60, 0.50], shininess: 0.25\r\n  },\r\n  blackRubber: {\r\n    ambient: [0.02, 0.02, 0.02], diffuse: [0.01, 0.01, 0.01], specular: [0.4, 0.4, 0.4], shininess: 0.078125\r\n  },\r\n  cyanRubber: {\r\n    ambient: [0.0, 0.05, 0.05], diffuse: [0.4, 0.5, 0.5], specular: [0.04, 0.7, 0.7], shininess: 0.078125\r\n  },\r\n  greenRubber: {\r\n    ambient: [0.0, 0.05, 0.0], diffuse: [0.4, 0.5, 0.4], specular: [0.04, 0.7, 0.04], shininess: 0.078125\r\n  },\r\n  redRubber: {\r\n    ambient: [0.05, 0.0, 0.0], diffuse: [0.5, 0.4, 0.4], specular: [0.7, 0.04, 0.04], shininess: 0.078125\r\n  },\r\n  whiteRubber: {\r\n    ambient: [0.05, 0.05, 0.05], diffuse: [0.5, 0.5, 0.5], specular: [0.7, 0.7, 0.7], shininess: 0.078125\r\n  },\r\n  yellowRubber: {\r\n    ambient: [0.05, 0.05, 0.0], diffuse: [0.5, 0.5, 0.4], specular: [0.7, 0.7, 0.04], shininess: 0.078125\r\n  }\r\n};\r\n\r\nexport function getMaterialList() {\r\n  const materials = [];\r\n  for (const prop in _materials) {\r\n    if (_materials.hasOwnProperty(prop)) {\r\n      materials.push(prop);\r\n    }\r\n  }\r\n  return materials;\r\n}\r\n\r\nexport function getMaterial(name) {\r\n  return _materials[name];\r\n}\r\n","import { degreesToRadians } from './utility';\r\n\r\nconst _directions = [\r\n  { x: -1, y: 0 },\r\n  { x: 0, y: -1 },\r\n  { x: 1, y: 0 },\r\n  { x: 0, y: 1 }\r\n];\r\n\r\nexport function generateMaze(width, height, windiness = 0.8) {\r\n  const carve = (pos) => {\r\n    data[pos.y][pos.x] = 0;\r\n  }\r\n\r\n  const canCarve = (pos, dir) => {\r\n    if (!isInBounds(addDir(pos, dir, 3))) {\r\n      return false;\r\n    }\r\n    const nxt = addDir(pos, dir, 2);\r\n    return data[nxt.y][nxt.x] === 1;\r\n  }\r\n\r\n  const isInBounds = (pos) => {\r\n    if (pos.x < 0 || pos.y < 0 || pos.x >= width || pos.y >= height) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  const addDir = (pos, dir, len) => {\r\n    return {\r\n      x: pos.x + dir.x * len,\r\n      y: pos.y + dir.y * len\r\n    }\r\n  }\r\n\r\n  const data = [];\r\n  for (let y = 0; y < height; y++) {\r\n    data.push(new Array(width).fill(1));\r\n  }\r\n\r\n  const start = { x: 1, y: 1 };\r\n  const cells = [];\r\n  let lastDir;\r\n  carve(start);\r\n  cells.push(start);\r\n  while (cells.length > 0) {\r\n    const cell = cells[cells.length - 1];\r\n    const posCells = [];\r\n    for (let i = 0; i < _directions.length; i++) {\r\n      const dir = _directions[i];\r\n      if (canCarve(cell, dir)) {\r\n        posCells.push(dir);\r\n      }\r\n    }\r\n    if (posCells.length > 0) {\r\n      let dir;\r\n      if (posCells.includes(lastDir) && Math.random() > windiness) {\r\n        dir = lastDir;\r\n      } else {\r\n        dir = posCells[Math.floor(Math.random() * posCells.length)];\r\n      }\r\n      carve(addDir(cell, dir, 1));\r\n      carve(addDir(cell, dir, 2));\r\n      cells.push(addDir(cell, dir, 2));\r\n      lastDir = dir;\r\n    } else {\r\n      cells.pop();\r\n      lastDir = null;\r\n    }\r\n  }\r\n  return {\r\n    width,\r\n    height,\r\n    data\r\n  };\r\n}\r\n\r\nexport function generateDungeon(width, height, windiness = 0.8) {\r\n  const regions = [];\r\n  let region = 0;\r\n\r\n  const data = [];\r\n  for (let y = 0; y < height; y++) {\r\n    data.push(new Array(width).fill(1));\r\n  }\r\n\r\n  const incrementRegion = () => {\r\n    region++;\r\n  }\r\n\r\n  const carveRegion = (data, pos, value) => {\r\n    data[pos.y][pos.x] = value;\r\n    regions[pos.y][pos.x] = region;\r\n  }\r\n\r\n  const my = data.length;\r\n  const mx = data[0].length;\r\n  for (let y = 0; y < my; y++) {\r\n    regions.push(Array(mx).fill(0))\r\n  }\r\n\r\n  _addRooms(data, mx, my, incrementRegion, carveRegion, 256, 4);\r\n\r\n  for (let y = 1; y < my; y += 2) {\r\n    for (let x = 1; x < mx; x += 2) {\r\n      if (data[y][x] !== 1) {\r\n        continue;\r\n      }\r\n\r\n      region++;\r\n\r\n      _createMaze(data, carveRegion, { x, y }, windiness);\r\n    }\r\n  }\r\n\r\n  _connectRegions(data, mx, my, region, regions);\r\n\r\n  _removeDeadEnds(data, mx, my);\r\n\r\n  return {\r\n    width,\r\n    height,\r\n    data\r\n  };\r\n}\r\n\r\nexport function getMazeStartLocation(map) {\r\n  const { width, height, data } = map;\r\n  const isSolid = (x, y) => {\r\n    if (x < 0 || x >= width || y < 0 || y >= height) {\r\n      return true;\r\n    }\r\n    if (data[y][x] === 1) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  const ofs_x = -width / 2;\r\n  const ofs_y = -height / 2;\r\n  for (let y = 0; y < height; y++) {\r\n    for (let x = 0; x < width; x++) {\r\n      if (data[y][x] !== 1) {\r\n        let angle = 0.0;\r\n        const matrix = [];\r\n        for (let r = -1; r < 2; r++) {\r\n          for (let c = -1; c < 2; c++) {\r\n            if (isSolid(x + c, y + r)) {\r\n              matrix.push('1');\r\n            } else {\r\n              matrix.push('0');\r\n            }\r\n          }\r\n        }\r\n        let tx, ty;\r\n        if (matrix[0] === '0') {\r\n          tx = x + 1;\r\n          ty = y + 1;\r\n          angle = -45.0;\r\n        } else if (matrix[2] === '0') {\r\n          tx = x - 1;\r\n          ty = y + 1;\r\n          angle = 45.0;\r\n        } else if (matrix[6] === '0') {\r\n          tx = x + 1;\r\n          ty = y - 1;\r\n          angle = -225.0;\r\n        } else if (matrix[8] === '0') {\r\n          tx = x - 1;\r\n          ty = y - 1;\r\n          angle = 225.0;\r\n        } else if (matrix[3] === '0') {\r\n          tx = x - 1;\r\n          ty = y;\r\n          angle = 90.0;\r\n        } else if (matrix[5] === '0') {\r\n          tx = x + 1;\r\n          ty = y;\r\n          angle = -90.0;\r\n        } else if (matrix[7] === '0') {\r\n          tx = x;\r\n          ty = y + 1;\r\n          angle = 180.0;\r\n        } else {\r\n          tx = x;\r\n          ty = y - 1;\r\n          angle = 0.0;\r\n        }\r\n        return { location: [x + ofs_x + 0.5, 0.5, y + ofs_y + 0.5], angle: degreesToRadians(angle), square: { x, y }, nextSquare: { x: tx, y: ty } };\r\n      }\r\n    }\r\n  }\r\n  return { location: [0.0, 0.5, 0.0] };\r\n}\r\n\r\nexport function getMazeBoundingSquares(map) {\r\n  const { width, height, data } = map;\r\n  const mapBounds = [];\r\n  const ofs_x = -width / 2;\r\n  const ofs_y = -height / 2;\r\n  for (let y = 0; y < height; y++) {\r\n    for (let x = 0; x < width; x++) {\r\n      if (data[y][x] === 1) {\r\n        mapBounds.push({ x1: x + ofs_x, y1: y + ofs_y, x2: x + ofs_x + 1, y2: y + ofs_y + 1 });\r\n      }\r\n    }\r\n  }\r\n  return mapBounds;\r\n}\r\n\r\nexport function getMazeSquareCenter(map, x, y, z) {\r\n  const { width, height } = map;\r\n  const ofs_x = -width / 2;\r\n  const ofs_y = -height / 2;\r\n  return [x + ofs_x + 0.5, z, y + ofs_y + 0.5]\r\n}\r\n\r\nfunction _addRooms(data, mx, my, incrementRegion, carveRegion, numRoomTries, roomExtraSize) {\r\n  const rooms = [];\r\n  for (let i = 0; i < numRoomTries; i++) {\r\n    const size = (_range(1, 3 + roomExtraSize) << 1) + 1;\r\n    let rectangularity = _range(0, 1 + size >> 1) << 1;\r\n    let width = size;\r\n    let height = size;\r\n    if (_range(0, 1) === 0) {\r\n      width += rectangularity;\r\n    } else {\r\n      height += rectangularity;\r\n    }\r\n    let x = (_range(0, (mx - width - 1) >> 1) << 1) + 1;\r\n    let y = (_range(0, (my - height - 1) >> 1) << 1) + 1;\r\n    if (x + width > mx - 1 || y + height > my - 1 || width >= mx / 2 || height >= my / 2) {\r\n      continue;\r\n    }\r\n    const room = { x, y, width, height };\r\n    let overlaps = false;\r\n    for (let j = 0; j < rooms.length; j++) {\r\n      const other = rooms[j];\r\n      if (_isOverlapped(room, other)) {\r\n        overlaps = true;\r\n        break;\r\n      }\r\n    }\r\n    if (overlaps) {\r\n      continue;\r\n    }\r\n    rooms.push(room);\r\n    incrementRegion();\r\n    for (let xOffset = 0; xOffset < width; xOffset++) {\r\n      for (let yOffset = 0; yOffset < height; yOffset++) {\r\n        carveRegion(data, { x: x + xOffset, y: y + yOffset }, 2);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction _createMaze(data, carveRegion, start, windiness) {\r\n  const my = data.length;\r\n  const mx = data[0].length;\r\n  const cells = [];\r\n  let lastDir;\r\n  carveRegion(data, start, 0);\r\n  data[start.y][start.x] = 0;\r\n  cells.push(start);\r\n  while (cells.length > 0) {\r\n    const cell = cells[cells.length - 1];\r\n    const posCells = [];\r\n    for (let i = 0; i < _directions.length; i++) {\r\n      const dir = _directions[i];\r\n      if (_canCarve(data, mx, my, cell, dir)) {\r\n        posCells.push(dir);\r\n      }\r\n    }\r\n    if (posCells.length > 0) {\r\n      let dir;\r\n      if (posCells.includes(lastDir) && Math.random() > windiness) {\r\n        dir = lastDir;\r\n      } else {\r\n        dir = posCells[Math.floor(Math.random() * posCells.length)];\r\n      }\r\n      const c1 = _addDir(cell, dir, 1);\r\n      const c2 = _addDir(cell, dir, 2);\r\n      carveRegion(data, c1, 0);\r\n      carveRegion(data, c2, 0);\r\n      cells.push(_addDir(cell, dir, 2));\r\n      lastDir = dir;\r\n    } else {\r\n      cells.pop();\r\n      lastDir = null;\r\n    }\r\n  }\r\n}\r\n\r\nfunction _connectRegions(data, mx, my, region, regions) {\r\n  let connectors = [];\r\n  for (let y = 1; y < my - 1; y++) {\r\n    for (let x = 1; x < mx - 1; x++) {\r\n      if (data[y][x] !== 1) {\r\n        continue;\r\n      }\r\n      const connectedRegions = [];\r\n      for (let i = 0; i < _directions.length; i++) {\r\n        const dir = _directions[i];\r\n        const region = regions[y + dir.y][x + dir.x];\r\n        if (region !== 0 && !connectedRegions.includes(region)) {\r\n          connectedRegions.push(region);\r\n        }\r\n      }\r\n      if (connectedRegions.length < 2) {\r\n        continue;\r\n      }\r\n      connectors.push({ x, y, regions: connectedRegions })\r\n    }\r\n  }\r\n  const merged = [0];\r\n  let openRegions = [];\r\n  for (var i = 1; i <= region; i++) {\r\n    merged.push(i);\r\n    openRegions.push(i);\r\n  }\r\n  while (openRegions.length > 1) {\r\n    const index = _range(0, connectors.length - 1)\r\n    const connector = connectors[index];\r\n    _carve(data, { x: connector.x, y: connector.y });\r\n    const regions = connector.regions.map((region) => merged[region]);\r\n    const dest = regions[0];\r\n    const sources = regions.slice(1);\r\n    for (let i = 0; i <= region; i++) {\r\n      if (sources.includes(i)) {\r\n        merged[i] = dest;\r\n      }\r\n    }\r\n    openRegions = openRegions.filter((region) => {\r\n      return !sources.includes(region);\r\n    });\r\n    connectors = connectors.filter((con) => {\r\n      if (Math.abs(con.x - connector.x) <= 1 && Math.abs(con.y - connector.y) <= 1) {\r\n        return false;\r\n      }\r\n      con.regions = con.regions.map((region) => merged[region]);\r\n      for (let i = 1; i < con.regions.length; i++) {\r\n        if (con.regions[i] !== con.regions[0]) {\r\n          return true;\r\n        }\r\n      }\r\n      if (_range(0, 99) === 0) {\r\n        _carve(data, { x: con.x, y: con.y });\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n}\r\n\r\nfunction _removeDeadEnds(data, mx, my) {\r\n  let done = false;\r\n  while (!done) {\r\n    done = true;\r\n    for (let y = 1; y < my - 1; y++) {\r\n      for (let x = 1; x < mx - 1; x++) {\r\n        if (data[y][x] === 1) {\r\n          continue;\r\n        }\r\n        let exits = 0;\r\n        for (let i = 0; i < _directions.length; i++) {\r\n          const dir = _directions[i];\r\n          if (data[y + dir.y][x + dir.x] !== 1) {\r\n            exits++;\r\n          }\r\n        }\r\n        if (exits !== 1) {\r\n          continue;\r\n        }\r\n        done = false;\r\n        _fill(data, { x, y });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction _carve(data, pos) {\r\n  data[pos.y][pos.x] = 0;\r\n}\r\n\r\nfunction _fill(data, pos) {\r\n  data[pos.y][pos.x] = 1;\r\n}\r\n\r\nfunction _canCarve(data, mx, my, pos, dir) {\r\n  if (!_isInBounds(mx, my, _addDir(pos, dir, 3))) {\r\n    return false;\r\n  }\r\n  const nxt = _addDir(pos, dir, 2);\r\n  return data[nxt.y][nxt.x] === 1;\r\n}\r\n\r\nfunction _isInBounds(mx, my, pos) {\r\n  if (pos.x < 0 || pos.y < 0 || pos.x >= mx || pos.y >= my) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction _addDir(pos, dir, len) {\r\n  return {\r\n    x: pos.x + dir.x * len,\r\n    y: pos.y + dir.y * len\r\n  }\r\n}\r\n\r\nfunction _range(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction _isOverlapped(pri, sec) {\r\n  if (pri.x > sec.x + sec.width || sec.x > pri.x + pri.width) {\r\n    return false;\r\n  }\r\n  if (pri.y > sec.y + sec.height || sec.y > pri.y + pri.height) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n","import Model from './Model';\r\n\r\nclass MazeModel extends Model {\r\n  constructor(gl, maze) {\r\n    super(gl);\r\n    this.gl = gl;\r\n    this.draw = this.draw.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this._geometry = this._geometry.bind(this);\r\n    this.maze = maze;\r\n    this._initModel({\r\n      gl,\r\n      geometry: this._geometry,\r\n      bufferCount: 3,\r\n      shaders: [\r\n        {\r\n          vertex: 'shaders/color_L/vertex.glsl',\r\n          fragment: 'shaders/color_L/fragment.glsl'\r\n        },\r\n        {\r\n          vertex: 'shaders/material_L/vertex.glsl',\r\n          fragment: 'shaders/material_L/fragment.glsl'\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix, options) {\r\n    const { shaderIndex, lights, material, materials, ambientLight, directionalLight, pointLight, lightingModel } = options;\r\n    this._drawModel({\r\n      projectionMatrix,\r\n      viewMatrix,\r\n      modelMatrix,\r\n      shaderIndex,\r\n      lights,\r\n      material,\r\n      materials,\r\n      ambientLight,\r\n      directionalLight,\r\n      pointLight,\r\n      lightingModel\r\n    });\r\n  }\r\n\r\n  update(maze) {\r\n    this.maze = maze;\r\n    this._updateModel(this._geometry);\r\n  }\r\n\r\n  _geometry({ addSquare }) {\r\n    const maze = this.maze;\r\n\r\n    const floorColor = [.2, .2, .2];\r\n    const ceilingColor = [.7, .7, .7];\r\n    const wallColor_Back = [.5, 0, .5];\r\n    const wallColor_Front = [0, .5, 0];\r\n    const wallColor_Left = [.5, 0, 0];\r\n    const wallColor_Right = [0, .0, .5];\r\n\r\n    const ofs_x = -maze.width / 2;\r\n    const ofs_y = -maze.height / 2;\r\n    for (let y = 0; y < maze.height; y++) {\r\n      for (let x = 0; x < maze.width; x++) {\r\n        const left = x + ofs_x;\r\n        const right = left + 1;\r\n        const back = y + ofs_y;\r\n        const front = back + 1;\r\n        const top = 1;\r\n        const bottom = 0;\r\n\r\n        const f0 = [left, top, front];\r\n        const f1 = [right, top, front];\r\n        const f2 = [right, bottom, front];\r\n        const f3 = [left, bottom, front];\r\n        const b0 = [left, top, back];\r\n        const b1 = [right, top, back];\r\n        const b2 = [right, bottom, back];\r\n        const b3 = [left, bottom, back];\r\n\r\n        if (maze.data[y][x] !== 1) {\r\n          addSquare(b2, b3, f3, f2, { color: floorColor, bufferIndex: 1 });\r\n        } else {\r\n          addSquare(b1, b0, f0, f1, { color: ceilingColor, bufferIndex: 2 });\r\n\r\n          if (y === 0 || maze.data[y - 1][x] !== 1) {\r\n            addSquare(b0, b1, b2, b3, { color: wallColor_Back });\r\n          }\r\n\r\n          if (x === 0 || maze.data[y][x - 1] !== 1) {\r\n            addSquare(f0, b0, b3, f3, { color: wallColor_Left });\r\n          }\r\n\r\n          if (y === maze.height - 1 || maze.data[y + 1][x] !== 1) {\r\n            addSquare(f1, f0, f3, f2, { color: wallColor_Front });\r\n          }\r\n\r\n          if (x === maze.width - 1 || maze.data[y][x + 1] !== 1) {\r\n            addSquare(b1, f1, f2, b2, { color: wallColor_Right });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default MazeModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen, degreesToRadians } from '../lib/utility';\r\nimport { getMaterialList, getMaterial } from '../lib/materials';\r\nimport { generateMaze, generateDungeon } from '../lib/maze';\r\nimport MazeModel from '../models/MazeModel';\r\n\r\nclass MazeScene {\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n    this.setOption = this.setOption.bind(this);\r\n    this.initScene = this.initScene.bind(this);\r\n    this.createMaze = this.createMaze.bind(this);\r\n    this.createDungeon = this.createDungeon.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n    this.totalDelta = 0.0;\r\n\r\n    this.renderOptions = {\r\n      lights: [\r\n        {\r\n          position: [10.0, -10.0, 0.0],\r\n          ambient: [0.2, 0.2, 0.2],\r\n          diffuse: [0.5, 0.5, 0.5],\r\n          specular: [0.9, 0.9, 0.9]\r\n        },\r\n        {\r\n          position: [-10.0, 10.0, 0.0],\r\n          ambient: [0.2, 0.2, 0.2],\r\n          diffuse: [0.5, 0.5, 0.5],\r\n          specular: [0.9, 0.9, 0.9]\r\n        }\r\n      ],\r\n      ambientLight: [0.2, 0.2, 0.2],\r\n      directionalLight: {\r\n        color: [1.0, 1.0, 1.0],\r\n        direction: [-1.0, -1.0, 0.0]\r\n      },\r\n      pointLight: {\r\n        color: [1.0, 1.0, 1.0]\r\n      },\r\n      useMaterials: false,\r\n      materials: new Array(3).fill(undefined),\r\n      lightingModel: 0\r\n    };\r\n\r\n    this.options = [\r\n      {\r\n        description: 'Random maze/dungeon geometry with colors or materials using Phong shading with your choice of lighting',\r\n        type: 'description'\r\n      },\r\n      {\r\n        name: 'Use Materials',\r\n        id: 'useMaterials',\r\n        type: 'bool',\r\n        value: this.renderOptions.useMaterials\r\n      },\r\n      {\r\n        name: 'Wall Material',\r\n        type: 'select',\r\n        options: getMaterialList()\r\n      },\r\n      {\r\n        name: 'Floor Material',\r\n        type: 'select',\r\n        options: getMaterialList()\r\n      },\r\n      {\r\n        name: 'Ceiling Material',\r\n        type: 'select',\r\n        options: getMaterialList()\r\n      },\r\n      {\r\n        name: 'Lighting Model',\r\n        id: 'lightingModel',\r\n        type: 'select',\r\n        options: ['Unlit', 'Vertex Lighting', 'Fragment Lighting'],\r\n        value: this.renderOptions.lightingModel\r\n      },\r\n      {\r\n        name: 'Create Maze',\r\n        type: 'function',\r\n        function: this.createMaze\r\n      },\r\n      {\r\n        name: 'Create Dungeon',\r\n        type: 'function',\r\n        function: this.createDungeon\r\n      }\r\n    ];\r\n\r\n    this.setOption(this.options[2], 0);\r\n    this.setOption(this.options[3], 9);\r\n    this.setOption(this.options[4], 10);\r\n\r\n    this.credits = [\r\n      'Maze generation is based on this article',\r\n      'link:https://journal.stuffwithstuff.com/2014/12/21/rooms-and-mazes/'\r\n    ]\r\n  }\r\n\r\n  setOption(option, value) {\r\n    option.value = Number(value);\r\n    if (option.id) {\r\n      this.renderOptions[option.id] = option.value;\r\n    }\r\n    if (option.name === 'Wall Material') {\r\n      const materialName = option.options[option.value];\r\n      this.renderOptions.materials[0] = getMaterial(materialName);\r\n    }\r\n    if (option.name === 'Floor Material') {\r\n      const materialName = option.options[option.value];\r\n      this.renderOptions.materials[1] = getMaterial(materialName);\r\n    }\r\n    if (option.name === 'Ceiling Material') {\r\n      const materialName = option.options[option.value];\r\n      this.renderOptions.materials[2] = getMaterial(materialName);\r\n    }\r\n  }\r\n\r\n  initScene() {\r\n    const gl = this.gl;\r\n    const { size, maze } = this._generateMaze();\r\n\r\n    const model = new MazeModel(gl, maze);\r\n    this.scene = {\r\n      actors: [\r\n        {\r\n          model,\r\n          location: [0.0, 0.0, -2.0 * size],\r\n          rotation: { angle: 0.0, axis: [0, 1, 0], speed: 0.5 }\r\n        }\r\n      ],\r\n      camera: [0.0, 0.0, 0.0]\r\n    };\r\n    this.renderOptions.pointLight.position = [0.0, size, -2.0 * size];\r\n    this.renderOptions.pointLight.brightness = size * size;\r\n  }\r\n\r\n  createMaze() {\r\n    const { size, maze } = this._generateMaze();\r\n    this.scene.actors[0].location = [0.0, 0.0, -2.0 * size];\r\n    this.scene.actors[0].model.update(maze);\r\n    this.renderOptions.pointLight.position = [0.0, 10.0, -2.0 * size];\r\n  }\r\n\r\n  _generateMaze() {\r\n    const size = Math.floor(Math.random() * 35) * 2 + 11;\r\n    const maze = generateMaze(size, size);\r\n    return { size, maze };\r\n  }\r\n\r\n  createDungeon() {\r\n    const { size, maze } = this._generateDungeon();\r\n    this.scene.actors[0].location = [0.0, 0.0, -2.0 * size];\r\n    this.scene.actors[0].model.update(maze);\r\n    this.renderOptions.pointLight.position = [0.0, 10.0, -2.0 * size];\r\n  }\r\n\r\n  _generateDungeon() {\r\n    const size = Math.floor(Math.random() * 35) * 2 + 11;\r\n    const maze = generateDungeon(size, size);\r\n    return { size, maze };\r\n  }\r\n\r\n  drawScene(deltaTime) {\r\n    const gl = this.gl;\r\n    const scene = this.scene;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 500.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, scene.camera);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      this._renderActor(projectionMatrix, viewMatrix, actor);\r\n      this._animateActor(deltaTime, actor);\r\n    }\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    mat4.rotate(modelMatrix, modelMatrix, degreesToRadians(45), [1, 0, 0]);\r\n    mat4.rotate(modelMatrix, modelMatrix, actor.rotation.angle, actor.rotation.axis);\r\n\r\n    if (this.renderOptions.useMaterials) {\r\n      this.renderOptions.shaderIndex = 1;\r\n    } else {\r\n      this.renderOptions.shaderIndex = 0;\r\n    }\r\n\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix, this.renderOptions);\r\n  }\r\n\r\n  _animateActor(deltaTime, actor) {\r\n    actor.rotation.angle += deltaTime * actor.rotation.speed;\r\n  }\r\n}\r\n\r\nexport default MazeScene;\r\n","import Model from './Model';\r\n\r\nclass BrickWallModel extends Model {\r\n  constructor(gl) {\r\n    super(gl);\r\n    this.gl = gl;\r\n    this.draw = this.draw.bind(this);\r\n    this._initModel({\r\n      gl,\r\n      geometry: this._geometry,\r\n      texture: {\r\n        diffuse: 'images/Brick_Wall_017_basecolor.jpg',\r\n        normal: 'images/Brick_Wall_017_normal.jpg',\r\n        height: 'images/Brick_Wall_017_height.png',\r\n        occlusion: 'images/Brick_Wall_017_ambientOcclusion.jpg'\r\n      },\r\n      shader: {\r\n        vertex: 'shaders/texture_LDNOP/vertex.glsl',\r\n        fragment: 'shaders/texture_LDNOP/fragment.glsl'\r\n      }\r\n    });\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix, options) {\r\n    const {\r\n      showDiffuseMap,\r\n      showNormalMap,\r\n      showAmbientOcclusionMap,\r\n      showParallaxMap,\r\n      parallaxHeightScale,\r\n      parallaxSteps,\r\n      parallaxOcclusionMapping,\r\n    } = options;\r\n    this._drawModel({\r\n      projectionMatrix,\r\n      viewMatrix,\r\n      modelMatrix,\r\n      showDiffuseMap,\r\n      showNormalMap,\r\n      showAmbientOcclusionMap,\r\n      showParallaxMap,\r\n      parallaxHeightScale,\r\n      parallaxSteps,\r\n      parallaxOcclusionMapping,\r\n      ambientLight: [0.3, 0.3, 0.3],\r\n      directionalLight: {\r\n        color: [0.4, 0.4, 0.4],\r\n        direction: [0.0, -1.0, 1.0]\r\n      },\r\n      pointLight: {\r\n        color: [1.0, 1.0, 1.0],\r\n        position: [0.0, 0.0, 0.0],\r\n        brightness: 15.0\r\n      },\r\n      cameraPos: [0.0, 0.0, 0.0]\r\n    });\r\n  }\r\n\r\n  _geometry({ addSquare }) {\r\n    const f0 = [-1, -1, 1];\r\n    const f1 = [1, -1, 1];\r\n    const f2 = [1, 1, 1];\r\n    const f3 = [-1, 1, 1];\r\n    const b0 = [-1, -1, -1];\r\n    const b1 = [1, -1, -1];\r\n    const b2 = [1, 1, -1];\r\n    const b3 = [-1, 1, -1];\r\n    addSquare(f0, f1, f2, f3);  // front\r\n    addSquare(b1, b0, b3, b2);  // back\r\n    addSquare(b0, f0, f3, b3);  // left\r\n    addSquare(f1, b1, b2, f2);  // right\r\n    addSquare(b0, b1, f1, f0);  // top\r\n    addSquare(b2, b3, f3, f2);  // bottom\r\n  }\r\n}\r\n\r\nexport default BrickWallModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen } from '../lib/utility'\r\nimport BrickWallModel from '../models/BrickWallModel';\r\n\r\nclass BrickWallScene {\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n    this.setOption = this.setOption.bind(this);\r\n    this.initScene = this.initScene.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n    this.renderOptions = {\r\n      showDiffuseMap: true,\r\n      showNormalMap: true,\r\n      showAmbientOcclusionMap: true,\r\n      showParallaxMap: true,\r\n      parallaxHeightScale: 0.04,\r\n      parallaxSteps: 32,\r\n      parallaxOcclusionMapping: true\r\n    };\r\n    this.options = [\r\n      {\r\n        description: 'Brick cube with diffuse, normal, ambient occlusion, and parallax maps',\r\n        type: 'description'\r\n      },\r\n      {\r\n        name: 'Show Diffuse Map',\r\n        id: 'showDiffuseMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Show Normal Map',\r\n        id: 'showNormalMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Show Ambient Occlusion Map',\r\n        id: 'showAmbientOcclusionMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Show Parallax Map',\r\n        id: 'showParallaxMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Parallax Height Scale',\r\n        id: 'parallaxHeightScale',\r\n        type: 'float',\r\n        min: 0.0,\r\n        max: 0.1\r\n      },\r\n      {\r\n        name: 'Parallax Steps',\r\n        id: 'parallaxSteps',\r\n        type: 'int',\r\n        min: 0,\r\n        max: 32\r\n      },\r\n      {\r\n        name: 'Use Parallax Occlusion Mapping',\r\n        id: 'parallaxOcclusionMapping',\r\n        type: 'bool'\r\n      }\r\n    ];\r\n    for (let i = 0; i < this.options.length; i++) {\r\n      this.options[i].value = this.renderOptions[this.options[i].id];\r\n    }\r\n    this.credits = [\r\n      'Textures created by João Paulo',\r\n      'link:https://3dtextures.me/about/'\r\n    ];\r\n  }\r\n\r\n  setOption(option, value) {\r\n    option.value = Number(value);\r\n    this.renderOptions[option.id] = option.value;\r\n  }\r\n\r\n  initScene() {\r\n    const gl = this.gl;\r\n    const model = new BrickWallModel(gl);\r\n    this.scene = {\r\n      actors: [\r\n        {\r\n          model,\r\n          location: [0.0, 0.0, -5.5],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.4\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.2\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      camera: [0.0, 0.0, 0.0]\r\n    };\r\n  }\r\n\r\n  drawScene(deltaTime) {\r\n    const gl = this.gl;\r\n    const scene = this.scene;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 100.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, scene.camera);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      this._renderActor(projectionMatrix, viewMatrix, actor);\r\n      this._animateActor(deltaTime, actor);\r\n    }\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      mat4.rotate(modelMatrix, modelMatrix, rotation.angle, rotation.axis);\r\n    }\r\n\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix, this.renderOptions);\r\n  }\r\n\r\n  _animateActor(deltaTime, actor) {\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      rotation.angle += deltaTime * rotation.speed;\r\n    }\r\n  }\r\n}\r\n\r\nexport default BrickWallScene;\r\n","import Model from './Model';\r\nimport { getShape } from '../lib/shapes';\r\n\r\nclass MaterialModel extends Model {\r\n  constructor(gl, shapeName) {\r\n    super(gl);\r\n    this.gl = gl;\r\n    this.draw = this.draw.bind(this);\r\n    this._initModel({\r\n      gl,\r\n      geometry: ({ addFaces }) => {\r\n        const shape = getShape(shapeName);\r\n        addFaces(shape.vertices, shape.faces);\r\n      },\r\n      shader: {\r\n        vertex: 'shaders/material_L/vertex.glsl',\r\n        fragment: 'shaders/material_L/fragment.glsl'\r\n      }\r\n    });\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix, options) {\r\n    const { cameraPos, lights, material, lightingModel } = options;\r\n    this._drawModel({\r\n      projectionMatrix,\r\n      viewMatrix,\r\n      modelMatrix,\r\n      cameraPos,\r\n      lights,\r\n      material,\r\n      lightingModel\r\n    });\r\n  }\r\n}\r\n\r\nexport default MaterialModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen } from '../lib/utility';\r\nimport { getMaterialList, getMaterial } from '../lib/materials';\r\nimport MaterialModel from '../models/MaterialModel';\r\n\r\nclass MaterialScene {\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n    this.setOption = this.setOption.bind(this);\r\n    this.initScene = this.initScene.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n    this.renderOptions = {\r\n      lights: [\r\n        {\r\n          position: [10.0, -10.0, 0.0],\r\n          ambient: [0.2, 0.2, 0.2],\r\n          diffuse: [0.5, 0.5, 0.5],\r\n          specular: [0.9, 0.9, 0.9]\r\n        },\r\n        {\r\n          position: [-10.0, 10.0, 0.0],\r\n          ambient: [0.2, 0.2, 0.2],\r\n          diffuse: [0.5, 0.5, 0.5],\r\n          specular: [0.9, 0.9, 0.9]\r\n        }\r\n      ],\r\n      materials: new Array(3).fill(0),\r\n      lightingModel: 2\r\n    };\r\n    const materialList = getMaterialList();\r\n    this.options = [\r\n      {\r\n        description: 'Various solid geometries with various materials using Phong shading',\r\n        type: 'description'\r\n      },\r\n      {\r\n        name: 'Material 1',\r\n        type: 'select',\r\n        options: materialList\r\n      },\r\n      {\r\n        name: 'Material 2',\r\n        type: 'select',\r\n        options: materialList\r\n      },\r\n      {\r\n        name: 'Material 3',\r\n        type: 'select',\r\n        options: materialList\r\n      }\r\n    ];\r\n\r\n    this.setOption(this.options[1], 8);\r\n    this.setOption(this.options[2], 10);\r\n    this.setOption(this.options[3], 2);\r\n  }\r\n\r\n  setOption(option, value) {\r\n    option.value = Number(value);\r\n    if (option.id) {\r\n      this.renderOptions[option.id] = option.value;\r\n    }\r\n    if (option.name === 'Material 1') {\r\n      const materialName = option.options[option.value];\r\n      this.renderOptions.materials[0] = getMaterial(materialName);\r\n    }\r\n    else if (option.name === 'Material 2') {\r\n      const materialName = option.options[option.value];\r\n      this.renderOptions.materials[1] = getMaterial(materialName);\r\n    }\r\n    else if (option.name === 'Material 3') {\r\n      const materialName = option.options[option.value];\r\n      this.renderOptions.materials[2] = getMaterial(materialName);\r\n    }\r\n  }\r\n\r\n  initScene() {\r\n    const gl = this.gl;\r\n    const model4 = new MaterialModel(gl, 'tetrahedron');\r\n    const model6 = new MaterialModel(gl, 'cube');\r\n    const model8 = new MaterialModel(gl, 'octahedron');\r\n    const model10 = new MaterialModel(gl, 'pentagonaltrapezohedron');\r\n    const model12 = new MaterialModel(gl, 'dodecahedron');\r\n    const model20 = new MaterialModel(gl, 'icosahedron');\r\n\r\n    this.scene = {\r\n      actors: [\r\n        {\r\n          model: model4,\r\n          materialIndex: 1,\r\n          location: [-3.75, 0.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model6,\r\n          materialIndex: 1,\r\n          location: [-2.25, 0.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model8,\r\n          materialIndex: 1,\r\n          location: [-0.75, 0.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model10,\r\n          materialIndex: 1,\r\n          location: [0.75, 0.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model12,\r\n          materialIndex: 1,\r\n          location: [2.25, 0.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model20,\r\n          materialIndex: 1,\r\n          location: [3.75, 0.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model4,\r\n          materialIndex: 0,\r\n          location: [-3.75, 2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model6,\r\n          materialIndex: 0,\r\n          location: [-2.25, 2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model8,\r\n          materialIndex: 0,\r\n          location: [-0.75, 2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model10,\r\n          materialIndex: 0,\r\n          location: [0.75, 2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model12,\r\n          materialIndex: 0,\r\n          location: [2.25, 2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model20,\r\n          materialIndex: 0,\r\n          location: [3.75, 2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model4,\r\n          materialIndex: 2,\r\n          location: [-3.75, -2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model6,\r\n          materialIndex: 2,\r\n          location: [-2.25, -2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model8,\r\n          materialIndex: 2,\r\n          location: [-0.75, -2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model10,\r\n          materialIndex: 2,\r\n          location: [0.75, -2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model12,\r\n          materialIndex: 2,\r\n          location: [2.25, -2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model20,\r\n          materialIndex: 2,\r\n          location: [3.75, -2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      camera: [0.0, 0.0, 0.0]\r\n    };\r\n  }\r\n\r\n  drawScene(deltaTime) {\r\n    const gl = this.gl;\r\n    const scene = this.scene;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 100.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, scene.camera);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    this.renderOptions.cameraPos = scene.camera;\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      this._renderActor(projectionMatrix, viewMatrix, actor);\r\n      this._animateActor(deltaTime, actor);\r\n    }\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      mat4.rotate(modelMatrix, modelMatrix, rotation.angle, rotation.axis);\r\n    }\r\n\r\n    this.renderOptions.material = this.renderOptions.materials[actor.materialIndex]\r\n\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix, this.renderOptions);\r\n  }\r\n\r\n  _animateActor(deltaTime, actor) {\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      rotation.angle += deltaTime * rotation.speed;\r\n    }\r\n  }\r\n}\r\n\r\nexport default MaterialScene;\r\n","export function collideRectangles(r1, r2) {\r\n  if (r1.x2 <= r2.x1 || r1.x1 >= r2.x2 || r1.y2 <= r2.y1 || r1.y1 >= r2.y2) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function collideCircles(cx, cy, radius, tx, ty, targetRadius) {\r\n  const distance = (cx - tx) * (cx - tx) + (cy - ty) * (cy - ty);\r\n  if (distance < (radius + targetRadius) * (radius + targetRadius)) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function collideCircleRectangle(cx, cy, radius, x1, y1, x2, y2) {\r\n  const epsilon = radius / 3.0;\r\n  let type = 0;\r\n  let testX = cx;\r\n  let testY = cy;\r\n  if (cx < x1 - epsilon) {\r\n    type |= 1;\r\n    testX = x1;\r\n  } else if (cx > x2 + epsilon) {\r\n    type |= 1;\r\n    testX = x2;\r\n  }\r\n  if (cy < y1 - epsilon) {\r\n    type |= 2;\r\n    testY = y1;\r\n  } else if (cy > y2 + epsilon) {\r\n    type |= 2;\r\n    testY = y2;\r\n  }\r\n  const distX = cx - testX;\r\n  const distY = cy - testY;\r\n  const distance = (distX * distX) + (distY * distY);\r\n  if (distance <= radius * radius) {\r\n    return type;\r\n  }\r\n  return 0;\r\n}\r\n","import Model from './Model';\r\n\r\nclass RoomModel extends Model {\r\n  constructor(gl, map) {\r\n    super(gl);\r\n    this.gl = gl;\r\n    this.map = map;\r\n    this.draw = this.draw.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this._geometry = this._geometry.bind(this);\r\n    this._initModel({\r\n      gl,\r\n      geometry: this._geometry,\r\n      textures: [\r\n        {\r\n          diffuse: 'images/Brick_Wall_017_basecolor.jpg',\r\n          normal: 'images/Brick_Wall_017_normal.jpg',\r\n          height: 'images/Brick_Wall_017_height.png',\r\n          occlusion: 'images/Brick_Wall_017_ambientOcclusion.jpg'\r\n        },\r\n        {\r\n          diffuse: 'images/Tiles_035_basecolor.jpg',\r\n          normal: 'images/Tiles_035_normal.jpg',\r\n          height: 'images/Tiles_035_height.png',\r\n          occlusion: 'images/Tiles_035_ambientOcclusion.jpg'\r\n        },\r\n        {\r\n          diffuse: 'images/Wood_planks_011_basecolor.jpg',\r\n          normal: 'images/Wood_planks_011_normal.jpg',\r\n          height: 'images/Wood_planks_011_height.png',\r\n          occlusion: 'images/Wood_planks_011_ambientOcclusion.jpg'\r\n        }\r\n      ],\r\n      shader: {\r\n        vertex: 'shaders/texture_LDNOP/vertex.glsl',\r\n        fragment: 'shaders/texture_LDNOP/fragment.glsl'\r\n      }\r\n    });\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix, options) {\r\n    const {\r\n      showDiffuseMap,\r\n      showNormalMap,\r\n      showAmbientOcclusionMap,\r\n      showParallaxMap,\r\n      parallaxHeightScale,\r\n      parallaxSteps,\r\n      parallaxOcclusionMapping,\r\n      ambientLight,\r\n      directionalLight,\r\n      pointLight,\r\n      cameraPos\r\n    } = options;\r\n    this._drawModel({\r\n      projectionMatrix,\r\n      viewMatrix,\r\n      modelMatrix,\r\n      showDiffuseMap,\r\n      showNormalMap,\r\n      showAmbientOcclusionMap,\r\n      showParallaxMap,\r\n      parallaxHeightScale,\r\n      parallaxSteps,\r\n      parallaxOcclusionMapping,\r\n      ambientLight,\r\n      directionalLight,\r\n      pointLight,\r\n      cameraPos\r\n    });\r\n  }\r\n\r\n  update(map) {\r\n    this.map = map;\r\n    this._updateModel(this._geometry);\r\n  }\r\n\r\n  _geometry({ addSquare }) {\r\n    const { width, height, data } = this.map;\r\n\r\n    const check = (x, y) => {\r\n      if (x < 0 || y < 0 || x > width - 1 || y > height - 1) {\r\n        return true;\r\n      }\r\n      if (data[y][x] === 1) {\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const ofs_x = -width / 2;\r\n    const ofs_y = -height / 2;\r\n    for (let y = 0; y < height; y++) {\r\n      for (let x = 0; x < width; x++) {\r\n        const left = x + ofs_x;\r\n        const right = left + 1;\r\n        const back = y + ofs_y;\r\n        const front = back + 1;\r\n        const top = 1;\r\n        const bottom = 0;\r\n\r\n        const f0 = [left, top, front];\r\n        const f1 = [right, top, front];\r\n        const f2 = [right, bottom, front];\r\n        const f3 = [left, bottom, front];\r\n        const b0 = [left, top, back];\r\n        const b1 = [right, top, back];\r\n        const b2 = [right, bottom, back];\r\n        const b3 = [left, bottom, back];\r\n\r\n        const f0h = [left, top + 1, front];\r\n        const f1h = [right, top + 1, front];\r\n        const f2h = [right, bottom + 1, front];\r\n        const f3h = [left, bottom + 1, front];\r\n        const b0h = [left, top + 1, back];\r\n        const b1h = [right, top + 1, back];\r\n        const b2h = [right, bottom + 1, back];\r\n        const b3h = [left, bottom + 1, back];\r\n\r\n        if (data[y][x] === 0) {\r\n          addSquare(b2, b3, f3, f2, { bufferIndex: 1 });\r\n          addSquare(b0, b1, f1, f0, { bufferIndex: 2 });\r\n\r\n          if (y === 0 || data[y - 1][x] === 1) {\r\n            addSquare(b1, b0, b3, b2);\r\n          }\r\n\r\n          if (x === 0 || data[y][x - 1] === 1) {\r\n            addSquare(b0, f0, f3, b3);\r\n          }\r\n\r\n          if (y === height - 1 || data[y + 1][x] === 1) {\r\n            addSquare(f0, f1, f2, f3);\r\n          }\r\n\r\n          if (x === width - 1 || data[y][x + 1] === 1) {\r\n            addSquare(f1, b1, b2, f2);\r\n          }\r\n        }\r\n        else if (data[y][x] === 2) {\r\n          const neighbors = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\r\n          for (let yo = -1; yo < 2; yo++) {\r\n            for (let xo = -1; xo < 2; xo++) {\r\n              neighbors[(yo + 1) * 3 + (xo + 1)] = check(x + xo, y + yo);\r\n            }\r\n          }\r\n\r\n          addSquare(b2, b3, f3, f2, { bufferIndex: 1 });\r\n          addSquare(b0h, b1h, f1h, f0h, { bufferIndex: 2 });\r\n\r\n          if (neighbors[1]) {\r\n            addSquare(b1, b0, b3, b2);\r\n            addSquare(b1h, b0h, b3h, b2h);\r\n          } else if (neighbors[0] && neighbors[2]) {\r\n            addSquare(b1h, b0h, b3h, b2h);\r\n          }\r\n\r\n          if (neighbors[3]) {\r\n            addSquare(b0, f0, f3, b3);\r\n            addSquare(b0h, f0h, f3h, b3h);\r\n          } else if (neighbors[0] && neighbors[6]) {\r\n            addSquare(b0h, f0h, f3h, b3h);\r\n          }\r\n\r\n          if (neighbors[7]) {\r\n            addSquare(f0, f1, f2, f3);\r\n            addSquare(f0h, f1h, f2h, f3h);\r\n          } else if (neighbors[6] && neighbors[8]) {\r\n            addSquare(f0h, f1h, f2h, f3h);\r\n          }\r\n\r\n          if (neighbors[5]) {\r\n            addSquare(f1, b1, b2, f2);\r\n            addSquare(f1h, b1h, b2h, f2h);\r\n          } else if (neighbors[2] && neighbors[8]) {\r\n            addSquare(f1h, b1h, b2h, f2h);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default RoomModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen, pickRandom } from '../lib/utility';\r\nimport { getMaterial } from '../lib/materials';\r\nimport { generateMaze, generateDungeon, getMazeBoundingSquares, getMazeStartLocation, getMazeSquareCenter } from '../lib/maze';\r\nimport { collideCircleRectangle, collideCircles } from '../lib/collision';\r\nimport RoomModel from '../models/RoomModel';\r\nimport MaterialModel from '../models/MaterialModel';\r\n\r\nconst shapes = ['tetrahedron', 'cube', 'octahedron', 'dodecahedron', 'icosahedron'];\r\nconst materials = ['gold', 'chrome', 'copper'];\r\n\r\nclass RoomScene {\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n    this.setOption = this.setOption.bind(this);\r\n    this.mouseMovement = this.mouseMovement.bind(this);\r\n    this.keyboardState = this.keyboardState.bind(this);\r\n    this.registerDataChange = this.registerDataChange.bind(this);\r\n    this.forceDataChange = this.forceDataChange.bind(this);\r\n    this.initScene = this.initScene.bind(this);\r\n    this.createMaze = this.createMaze.bind(this);\r\n    this.createDungeon = this.createDungeon.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n    const ambientLight = [0.1, 0.1, 0.1];\r\n    const directionalLight = {\r\n      color: [0.0, 0.0, 0.0],\r\n      direction: [0.0, 0.0, 0.0]\r\n    };\r\n    const pointLight = {\r\n      color: [0.6, 0.6, 0.6],\r\n      brightness: 15.0\r\n    };\r\n    this.renderOptions = {\r\n      showDiffuseMap: true,\r\n      showNormalMap: true,\r\n      showAmbientOcclusionMap: true,\r\n      showParallaxMap: false,\r\n      parallaxHeightScale: 0.02,\r\n      parallaxSteps: 32,\r\n      parallaxOcclusionMapping: true,\r\n      ambientLight,\r\n      directionalLight,\r\n      pointLight,\r\n      lights: [\r\n        {\r\n          ambient: [Math.min(ambientLight[0] * 2.0, 1.0), Math.min(ambientLight[1] * 2.0, 1.0), Math.min(ambientLight[2] * 2.0, 1.0)],\r\n          diffuse: pointLight.color,\r\n          specular: [Math.min(pointLight.color[0] * 2.0, 1.0), Math.min(pointLight.color[1] * 2.0, 1.0), Math.min(pointLight.color[2] * 2.0, 1.0)]\r\n        },\r\n        {\r\n          ambient: [0.0, 0.0, 0.0],\r\n          diffuse: [0.0, 0.0, 0.0],\r\n          specular: [0.0, 0.0, 0.0]\r\n        }\r\n      ],\r\n      lightingModel: 2\r\n    };\r\n    this.options = [\r\n      {\r\n        description: 'Explorable random maze geometry with diffuse, normal, ambient occlusion, and parallax maps',\r\n        type: 'description'\r\n      },\r\n      {\r\n        name: 'Show Diffuse Map',\r\n        id: 'showDiffuseMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Show Normal Map',\r\n        id: 'showNormalMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Show Ambient Occlusion Map',\r\n        id: 'showAmbientOcclusionMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Show Parallax Map',\r\n        id: 'showParallaxMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Parallax Height Scale',\r\n        id: 'parallaxHeightScale',\r\n        type: 'float',\r\n        min: 0.0,\r\n        max: 0.1\r\n      },\r\n      {\r\n        name: 'Parallax Steps',\r\n        id: 'parallaxSteps',\r\n        type: 'int',\r\n        min: 0,\r\n        max: 32\r\n      },\r\n      {\r\n        name: 'Use Parallax Occlusion Mapping',\r\n        id: 'parallaxOcclusionMapping',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Create Maze',\r\n        type: 'function',\r\n        function: this.createMaze\r\n      },\r\n      {\r\n        name: 'Create Dungeon',\r\n        type: 'function',\r\n        function: this.createDungeon\r\n      }\r\n    ];\r\n    for (let i = 0; i < this.options.length; i++) {\r\n      this.options[i].value = this.renderOptions[this.options[i].id];\r\n    }\r\n    this.credits = [\r\n      'Textures created by João Paulo',\r\n      'link:https://3dtextures.me/about/',\r\n      '',\r\n      'Maze generation is based on this article',\r\n      'link:https://journal.stuffwithstuff.com/2014/12/21/rooms-and-mazes/'\r\n    ];\r\n    this.movement = { front: 0.0, side: 0.0 };\r\n  }\r\n\r\n  setOption(option, value) {\r\n    option.value = Number(value);\r\n    this.renderOptions[option.id] = option.value;\r\n  }\r\n\r\n  mouseMovement(x, y) {\r\n    const camera = this.scene.camera;\r\n    camera.rotations[0].angle -= x * 0.001;\r\n    camera.rotations[1].angle -= y * 0.001;\r\n  }\r\n\r\n  keyboardState(keys) {\r\n    let front = 0.0;\r\n    if (keys['w']) {\r\n      front -= 1.0;\r\n    }\r\n    if (keys['s']) {\r\n      front += 1.0;\r\n    }\r\n    let side = 0.0;\r\n    if (keys['a']) {\r\n      side -= 1.0;\r\n    }\r\n    if (keys['d']) {\r\n      side += 1.0;\r\n    }\r\n    this.movement.front = front;\r\n    this.movement.side = side;\r\n  }\r\n\r\n  registerDataChange(onDataChange) {\r\n    this.onDataChange = onDataChange;\r\n  }\r\n\r\n  forceDataChange() {\r\n    this._updatePowerUpInfo(this.scene.actors);\r\n  }\r\n\r\n  initScene() {\r\n    this._updateMap(this.gl, false);\r\n  }\r\n\r\n  createMaze() {\r\n    this._updateMap(this.gl, false);\r\n  }\r\n\r\n  createDungeon() {\r\n    this._updateMap(this.gl, true);\r\n  }\r\n\r\n  _updateMap(gl, dungeon) {\r\n    this.ready = false;\r\n    if (dungeon) {\r\n      this.map = generateDungeon(15, 15);\r\n    } else {\r\n      this.map = generateMaze(11, 11);\r\n    }\r\n    const { location, angle, square, nextSquare } = getMazeStartLocation(this.map);\r\n    if (this.scene) {\r\n      if (this.scene.actors.length > 1) {\r\n        this.scene.actors.length = 1;\r\n      }\r\n      this.scene.actors[0].boundingRectagles = getMazeBoundingSquares(this.map);\r\n      this.scene.actors[0].model.update(this.map);\r\n      this.scene.camera.location = location;\r\n      this.scene.camera.rotations[0].angle = angle;\r\n    } else {\r\n      const model = new RoomModel(gl, this.map);\r\n      this.scene = {\r\n        actors: [\r\n          {\r\n            active: true,\r\n            boundingRectagles: getMazeBoundingSquares(this.map),\r\n            model,\r\n            location: [0.0, 0.0, 0.0],\r\n            rotations: []\r\n          }\r\n        ],\r\n        camera: {\r\n          location,\r\n          rotations: [\r\n            {\r\n              angle,\r\n              axis: [0, 1, 0]\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0]\r\n            }\r\n          ]\r\n        }\r\n      };\r\n    }\r\n    this._placePowerUps(this.scene, this.map, square.x, square.y, nextSquare.x, nextSquare.y);\r\n    this.ready = true;\r\n  }\r\n\r\n  _placePowerUps(scene, map, sx, sy, tx, ty) {\r\n    const { width, height, data } = map;\r\n    for (let y = 0; y < height; y++) {\r\n      for (let x = 0; x < width; x++) {\r\n        if (data[y][x] !== 1) {\r\n          if (x === sx && y === sy) {\r\n            continue;\r\n          }\r\n          if ((x === tx && y === ty) || Math.random() < 0.2) {\r\n            const location = getMazeSquareCenter(map, x, y, 0.4);\r\n            scene.actors.push({\r\n              active: true,\r\n              boundingRadius: 0.1,\r\n              model: new MaterialModel(this.gl, pickRandom(shapes)),\r\n              material: getMaterial(pickRandom(materials)),\r\n              location,\r\n              scale: [0.15, 0.15, 0.15],\r\n              rotations: [\r\n                {\r\n                  angle: 0.0,\r\n                  axis: [1, 0, 0],\r\n                  speed: 1.0 + Math.random()\r\n                },\r\n                {\r\n                  angle: 0.0,\r\n                  axis: [0, 1, 0],\r\n                  speed: 2.0 + Math.random() + Math.random()\r\n                }\r\n              ]\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this._updatePowerUpInfo(scene.actors);\r\n  }\r\n\r\n  _updatePowerUpInfo(actors) {\r\n    let collected = 0;\r\n    let total = 0;\r\n    for (let i = 0; i < actors.length; i++) {\r\n      const actor = actors[i];\r\n      if (actor.boundingRadius) {\r\n        total++;\r\n        if (!actor.active) {\r\n          collected++;\r\n        }\r\n      }\r\n    }\r\n    this.onDataChange({ collected, total });\r\n  }\r\n\r\n  drawScene(deltaTime) {\r\n    if (!this.ready) {\r\n      return;\r\n    }\r\n\r\n    const gl = this.gl;\r\n    const scene = this.scene;\r\n    const camera = scene.camera;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 100.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, camera.location);\r\n    for (let i = 0; i < camera.rotations.length; i++) {\r\n      const rotation = camera.rotations[i];\r\n      mat4.rotate(viewMatrix, viewMatrix, rotation.angle, rotation.axis);\r\n    }\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    this.renderOptions.cameraPos = camera.location;\r\n    this.renderOptions.pointLight.position = camera.location;\r\n    this.renderOptions.lights[0].position = camera.location;\r\n    this.renderOptions.lights[1].position = camera.location;\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      if (actor.active) {\r\n        this._renderActor(projectionMatrix, viewMatrix, actor);\r\n        this._animateActor(deltaTime, actor);\r\n      }\r\n    }\r\n\r\n    mat4.identity(viewMatrix);\r\n    mat4.rotate(viewMatrix, viewMatrix, camera.rotations[0].angle, camera.rotations[0].axis);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    const x = camera.location[0];\r\n    const y = camera.location[2];\r\n\r\n    camera.location[0] += deltaTime * this.movement.front * viewMatrix[2];\r\n    camera.location[1] += deltaTime * this.movement.front * viewMatrix[6];\r\n    camera.location[2] += deltaTime * this.movement.front * viewMatrix[10];\r\n\r\n    camera.location[0] += deltaTime * this.movement.side * viewMatrix[0];\r\n    camera.location[1] += deltaTime * this.movement.side * viewMatrix[4];\r\n    camera.location[2] += deltaTime * this.movement.side * viewMatrix[8];\r\n\r\n    this._detectCollisions(camera, x, y, scene);\r\n  }\r\n\r\n  _detectCollisions(camera, x, y, scene) {\r\n    // collision detection against map\r\n    const cx = camera.location[0];\r\n    const cy = camera.location[2];\r\n    const radius = 0.2;\r\n    const mapBounds = scene.actors[0].boundingRectagles;\r\n    const len = mapBounds.length;\r\n    let collision = 0;\r\n    for (let i = 0; i < len; i++) {\r\n      const rect = mapBounds[i];\r\n      collision |= collideCircleRectangle(cx, cy, radius, rect.x1, rect.y1, rect.x2, rect.y2);\r\n    }\r\n    if (collision !== 0) {\r\n      if (collision === 1) {\r\n        camera.location[0] = x;\r\n      } else if (collision === 2) {\r\n        camera.location[2] = y;\r\n      } else {\r\n        camera.location[0] = x;\r\n        camera.location[2] = y;\r\n      }\r\n    }\r\n\r\n    // collision detection against power-ups\r\n    collision = 0;\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      if (actor.active && actor.boundingRadius) {\r\n        if (collideCircles(cx, cy, radius, actor.location[0], actor.location[2], actor.boundingRadius)) {\r\n          collision++;\r\n          actor.active = false;\r\n        }\r\n      }\r\n    }\r\n    if (collision > 0) {\r\n      this._updatePowerUpInfo(scene.actors);\r\n    }\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    if (actor.scale) {\r\n      mat4.scale(modelMatrix, modelMatrix, actor.scale);\r\n    }\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      mat4.rotate(modelMatrix, modelMatrix, rotation.angle, rotation.axis);\r\n    }\r\n\r\n    if (actor.material) {\r\n      this.renderOptions.material = actor.material;\r\n    }\r\n\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix, this.renderOptions);\r\n  }\r\n\r\n  _animateActor(deltaTime, actor) {\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      rotation.angle += deltaTime * rotation.speed;\r\n    }\r\n  }\r\n}\r\n\r\nexport default RoomScene;\r\n","import ColorScene from '../scenes/ColorScene';\r\nimport TextureScene from '../scenes/TextureScene';\r\nimport MazeScene from '../scenes/MazeScene';\r\nimport BrickWallScene from '../scenes/BrickWallScene';\r\nimport MaterialScene from '../scenes/MaterialScene';\r\nimport RoomScene from '../scenes/RoomScene';\r\n\r\nclass SceneManager {\r\n  constructor(canvas, onDataChange) {\r\n    this.canvas = canvas;\r\n    this.onDataChange = onDataChange;\r\n\r\n    this.resizeViewport = this.resizeViewport.bind(this);\r\n    this.getScene = this.getScene.bind(this);\r\n    this.previousScene = this.previousScene.bind(this);\r\n    this.nextScene = this.nextScene.bind(this);\r\n    this.renderScene = this.renderScene.bind(this);\r\n\r\n    this.gl = canvas.getContext('webgl');\r\n    if (this.gl === null) {\r\n      alert(\"Unable to initialize WebGL. Your browser or machine may not support it.\");\r\n    } else {\r\n      this.resizeViewport();\r\n      this.gl.enable(this.gl.CULL_FACE);\r\n      this.gl.cullFace(this.gl.BACK);\r\n      this.scenes = [\r\n        new ColorScene(this.gl),\r\n        new TextureScene(this.gl),\r\n        new MaterialScene(this.gl),\r\n        new MazeScene(this.gl),\r\n        new BrickWallScene(this.gl),\r\n        new RoomScene(this.gl)\r\n      ];\r\n      this.sceneIndex = 0;\r\n\r\n      for (let i = 0; i < this.scenes.length; i++) {\r\n        const scene = this.scenes[i];\r\n        if (scene.registerDataChange) {\r\n          scene.registerDataChange(this.onDataChange);\r\n        }\r\n        scene.initScene();\r\n      }\r\n    }\r\n  }\r\n\r\n  resizeViewport() {\r\n    const canvas = this.canvas;\r\n    const rect = canvas.getBoundingClientRect()\r\n    canvas.width = rect.width;\r\n    canvas.height = rect.height;\r\n    this.gl.viewport(0, 0, canvas.width, canvas.height);\r\n  }\r\n\r\n  getScene() {\r\n    return this.scenes[this.sceneIndex];\r\n  }\r\n\r\n  previousScene() {\r\n    this.sceneIndex = (this.sceneIndex - 1) % this.scenes.length;\r\n    if (this.sceneIndex < 0) {\r\n      this.sceneIndex = this.scenes.length - 1;\r\n    }\r\n    const scene = this.scenes[this.sceneIndex];\r\n    if (scene.forceDataChange) {\r\n      scene.forceDataChange();\r\n    }\r\n    return this.scenes[this.sceneIndex];\r\n  }\r\n\r\n  nextScene() {\r\n    this.sceneIndex = (this.sceneIndex + 1) % this.scenes.length;\r\n    const scene = this.scenes[this.sceneIndex];\r\n    if (scene.forceDataChange) {\r\n      scene.forceDataChange();\r\n    }\r\n    return this.scenes[this.sceneIndex];\r\n  }\r\n\r\n  renderScene(timeStamp) {\r\n    timeStamp *= 0.001;\r\n    if (!this.timeStamp) {\r\n      this.timeStamp = timeStamp;\r\n    }\r\n    const deltaTime = timeStamp - this.timeStamp;\r\n    this.timeStamp = timeStamp;\r\n    const scene = this.scenes[this.sceneIndex];\r\n    scene.drawScene(deltaTime);\r\n  }\r\n}\r\n\r\nexport default SceneManager;\r\n","import React from 'react';\r\nimport Message from './Message';\r\nimport Controls from './Controls';\r\nimport Credits from './Credits';\r\nimport SceneManager from '../lib/SceneManager';\r\n\r\nconst exploreNotes = ['Click the canvas to explore the scene'];\r\nconst movementNotes = ['Use the mouse to look', 'Use the WASD keys to move around'];\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onResize = this.onResize.bind(this);\r\n    this.onKeyDown = this.onKeyDown.bind(this);\r\n    this.onKeyUp = this.onKeyUp.bind(this);\r\n    this.onMouseMove = this.onMouseMove.bind(this);\r\n    this.onDataChange = this.onDataChange.bind(this);\r\n    this.onLockChange = this.onLockChange.bind(this);\r\n    this.onClickCanvas = this.onClickCanvas.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onClickPrevious = this.onClickPrevious.bind(this);\r\n    this.onClickNext = this.onClickNext.bind(this);\r\n    this.onClickMessage = this.onClickMessage.bind(this);\r\n    this.onAnimationFrame = this.onAnimationFrame.bind(this);\r\n    this.state = {\r\n      showControls: false\r\n    }\r\n    this.keys = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.sceneManager = new SceneManager(this.canvas, this.onDataChange);\r\n    const scene = this.sceneManager.getScene();\r\n    const notes = scene.mouseMovement ? exploreNotes : undefined;\r\n    this.setState({ scene, notes, sceneData: undefined });\r\n    this.canvas.requestPointerLock = this.canvas.requestPointerLock || this.canvas.mozRequestPointerLock;\r\n    document.exitPointerLock = document.exitPointerLock || document.mozExitPointerLock;\r\n    this.frame = window.requestAnimationFrame(this.onAnimationFrame);\r\n    window.addEventListener('resize', this.onResize);\r\n    window.addEventListener('keydown', this.onKeyDown);\r\n    window.addEventListener('keyup', this.onKeyUp);\r\n    document.addEventListener('pointerlockchange', this.onLockChange);\r\n    document.addEventListener('mozpointerlockchange', this.onLockChange);\r\n    this.showMessage(['Press Escape to toggle menu', 'Press Page Up for previous screen', 'Press Page Down for next screen']);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.cancelAnimationFrame(this.frame);\r\n    window.removeEventListener('resize', this.onResize);\r\n    window.removeEventListener('keydown', this.onKeyDown);\r\n    window.removeEventListener('keyup', this.onKeyUp);\r\n    document.removeEventListener('pointerlockchange', this.onLockChange);\r\n    document.removeEventListener('mozpointerlockchange', this.onLockChange);\r\n  }\r\n\r\n  cancelLock() {\r\n    this.captureMouse = false;\r\n    this.captureKeys = false;\r\n    document.exitPointerLock();\r\n  }\r\n\r\n  onResize() {\r\n    this.sceneManager.resizeViewport();\r\n  }\r\n\r\n  onKeyDown(event) {\r\n    event.preventDefault();\r\n    if (!this.keys[event.key]) {\r\n      this.onKeyPress(event.key);\r\n      this.keys[event.key] = true;\r\n      if (this.captureKeys) {\r\n        this.state.scene.keyboardState(this.keys);\r\n      }\r\n    }\r\n  }\r\n\r\n  onKeyUp(event) {\r\n    event.preventDefault();\r\n    this.keys[event.key] = false;\r\n    if (this.captureKeys) {\r\n      this.state.scene.keyboardState(this.keys);\r\n    }\r\n  }\r\n\r\n  onKeyPress(key) {\r\n    if (key === 'Escape') {\r\n      if (this.messageTimer) {\r\n        this.cancelMessage();\r\n      } else {\r\n        this.setState({ showControls: !this.state.showControls });\r\n      }\r\n    } else if (key === 'PageUp') {\r\n      this.cancelLock();\r\n      this.setState({ sceneData: undefined });\r\n      const scene = this.sceneManager.previousScene();\r\n      const notes = scene.mouseMovement ? exploreNotes : undefined;\r\n      this.setState({ scene, notes });\r\n    } else if (key === 'PageDown') {\r\n      this.cancelLock();\r\n      this.setState({ sceneData: undefined });\r\n      const scene = this.sceneManager.nextScene();\r\n      const notes = scene.mouseMovement ? exploreNotes : undefined;\r\n      this.setState({ scene, notes });\r\n    }\r\n  }\r\n\r\n  onMouseMove(event) {\r\n    if (this.captureMouse) {\r\n      this.state.scene.mouseMovement(event.movementX, event.movementY);\r\n    }\r\n  }\r\n\r\n  onDataChange(sceneData) {\r\n    this.setState({ sceneData });\r\n  }\r\n\r\n  onLockChange(event) {\r\n    event.preventDefault();\r\n    if (document.pointerLockElement === this.canvas || document.mozPointerLockElement === this.canvas) {\r\n      document.addEventListener(\"mousemove\", this.onMouseMove);\r\n      this.captureMouse = true;\r\n      if (this.state.scene.keyboardState) {\r\n        this.captureKeys = true;\r\n      }\r\n      this.setState({ notes: movementNotes });\r\n    } else {\r\n      document.removeEventListener(\"mousemove\", this.onMouseMove);\r\n      this.captureMouse = false;\r\n      this.captureKeys = false;\r\n      this.setState({ notes: undefined });\r\n    }\r\n  }\r\n\r\n  onClickCanvas(event) {\r\n    event.preventDefault();\r\n    if (this.state.scene.mouseMovement) {\r\n      this.canvas.requestPointerLock();\r\n      this.setState({ showControls: false, notes: undefined });\r\n    }\r\n  }\r\n\r\n  onChange(option, value) {\r\n    if (value !== option.value) {\r\n      this.state.scene.setOption(option, value);\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  onClickPrevious(event) {\r\n    event.preventDefault();\r\n    this.cancelLock();\r\n    this.setState({ sceneData: undefined });\r\n    const scene = this.sceneManager.previousScene();\r\n    const notes = scene.mouseMovement ? exploreNotes : undefined;\r\n    this.setState({ scene, notes });\r\n  }\r\n\r\n  onClickNext(event) {\r\n    event.preventDefault();\r\n    this.cancelLock();\r\n    this.setState({ sceneData: undefined });\r\n    const scene = this.sceneManager.nextScene();\r\n    const notes = scene.mouseMovement ? exploreNotes : undefined;\r\n    this.setState({ scene, notes });\r\n  }\r\n\r\n  onClickMessage(event) {\r\n    event.preventDefault();\r\n    if (this.messageTimer) {\r\n      this.cancelMessage();\r\n    }\r\n  }\r\n\r\n  showMessage(message) {\r\n    this.setState({ message });\r\n    this.messageTimer = setTimeout(this.clearMessage.bind(this), 10000);\r\n  }\r\n\r\n  clearMessage() {\r\n    this.setState({ message: undefined });\r\n    this.messageTimer = undefined;\r\n  }\r\n\r\n  cancelMessage() {\r\n    clearTimeout(this.messageTimer);\r\n    this.clearMessage();\r\n  }\r\n\r\n  onAnimationFrame(timeStamp) {\r\n    this.sceneManager.renderScene(timeStamp);\r\n    this.frame = window.requestAnimationFrame(this.onAnimationFrame);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"screen\">\r\n        <canvas id=\"canvas\" ref={elem => this.canvas = elem} onClick={this.onClickCanvas}></canvas>\r\n        <div id=\"note\">\r\n          {this.state.notes ? (this.state.notes.map((note, key) => (<div key={key}>{note}</div>))) : null}\r\n          {this.state.sceneData && this.state.sceneData.total ? (<div>{this.state.sceneData.collected}/{this.state.sceneData.total} power-ups collected</div>) : null}\r\n        </div>\r\n        <Message message={this.state.message} onClick={this.onClickMessage} />\r\n        <Controls show={this.state.showControls} onClickPrevious={this.onClickPrevious} onClickNext={this.onClickNext} onChange={this.onChange} options={this.state.scene ? this.state.scene.options : undefined} />\r\n        <Credits show={this.state.showControls} credits={this.state.scene ? this.state.scene.credits : undefined} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}