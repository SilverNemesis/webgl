{"version":3,"sources":["components/Message.js","components/Controls.js","components/Credits.js","lib/utility.js","models/Model.js","models/ColorModel.js","scenes/ColorScene.js","models/TexturedCubeModel.js","scenes/TextureScene.js","lib/maze.js","models/MazeModel.js","scenes/MazeScene.js","models/BrickWallModel.js","scenes/BrickWallScene.js","models/MaterialModel.js","scenes/MaterialScene.js","lib/collision.js","models/RoomModel.js","scenes/RoomScene.js","lib/SceneManager.js","components/App.js","serviceWorker.js","index.js"],"names":["Message","message","onClick","id","map","text","index","key","DescriptionControl","props","control","className","description","SelectControl","options","i","length","push","value","htmlFor","name","onChange","event","target","BoolControl","type","checked","IntControl","min","max","FloatControl","factor","toFixed","Math","floor","FunctionControl","function","Controls","controls","show","onClickPrevious","onClickNext","option","Credits","children","credits","credit","startsWith","url","slice","href","rel","degreesToRadians","degrees","PI","_typeToString","gl","FLOAT","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT","INT_VEC2","INT_VEC3","INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","SAMPLER_CUBE","_loadShader","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","alert","getShaderInfoLog","deleteShader","loadTexture","texture","createTexture","bindTexture","TEXTURE_2D","internalFormat","RGBA","srcFormat","srcType","UNSIGNED_BYTE","pixel","Uint8Array","texImage2D","image","Image","onload","_isPowerOf2","width","height","generateMipmap","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","src","clearScreen","clearColor","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","pickRandom","data","random","getShape","shape","s3","sqrt","s6","vertices","faces","r","a","phi","b","c","_materials","emerald","ambient","diffuse","specular","shininess","jade","obsidian","pearl","ruby","turquoise","brass","bronze","chrome","copper","gold","silver","blackPlastic","cyanPlastic","greenPlastic","redPlastic","whitePlastic","yellowPlastic","blackRubber","cyanRubber","greenRubber","redRubber","whiteRubber","yellowRubber","getMaterialList","materials","prop","hasOwnProperty","getMaterial","Model","vertexShader","fragmentShader","geometry","bufferCount","textures","normal","occlusion","Promise","all","fetch","vertex","then","response","fragment","_setupShader","buffers","_initBuffers","model","shaders","vertexShaders","Array","fill","fragmentShaders","pendingLoads","this","_deleteBuffers","shaderProgram","vsSource","fsSource","VERTEX_SHADER","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","initShaderProgram","shaderParameters","attributeCount","ACTIVE_ATTRIBUTES","attributes","attribute","getActiveAttrib","uniformCount","ACTIVE_UNIFORMS","uniforms","uniform","getActiveUniform","getShaderParameters","program","attribLocations","uniformLocations","forEach","location","getAttribLocation","_addShaderNameToJavascript","getUniformLocation","shaderLocations","inputName","names","toLowerCase","split","out","subBeg","indexOf","subEnd","Number","requirements","vertexNormal","vertexTangent","vertexBitangent","textureCoord","vertexColor","vec3","tangent","bitangent","inputBuffers","positions","normals","tangents","bitangents","textureCoordinates","colors","indices","offset","addSquare","c0","c1","c2","c3","inputBuffer","bufferIndex","color","addFace","face","addTriangle","c4","addPentagon","addFaces","outputBuffers","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","indexBuffer","ELEMENT_ARRAY_BUFFER","Uint16Array","outputBuffer","position","vertexCount","normalBuffer","tangentBuffer","bitangentBuffer","textureCoordBuffer","colorBuffer","buffer","deleteBuffer","projectionMatrix","viewMatrix","modelMatrix","shaderIndex","material","undefined","vertexAttribPointer","vertexPosition","enableVertexAttribArray","useProgram","uniformMatrix4fv","normalMatrix","mat4","showDiffuseMap","uniform1i","showNormalMap","showAmbientOcclusionMap","showParallaxMap","lightingModel","parallaxHeightScale","uniform1f","parallaxSteps","parallaxOcclusionMapping","ambientLight","uniform3fv","directionalLight","direction","pointLight","brightness","lights","light","cameraPos","samplerDiffuse","activeTexture","TEXTURE0","samplerNormal","TEXTURE1","samplerHeight","TEXTURE2","samplerOcclusion","TEXTURE3","UNSIGNED_SHORT","drawElements","TRIANGLES","numAttributes","disableVertexAttribArray","ColorModel","shapeName","draw","bind","_initModel","_drawModel","ColorScene","setOption","initScene","drawScene","renderOptions","model6","model12","scene","actors","scale","rotations","angle","axis","speed","camera","deltaTime","fieldOfView","aspect","canvas","clientWidth","clientHeight","actor","_renderActor","_animateActor","rotation","TexturedCubeModel","_geometry","f0","f1","f2","f3","b0","b1","b2","b3","TextureScene","_directions","x","y","generateMaze","windiness","carve","pos","canCarve","dir","isInBounds","addDir","nxt","len","lastDir","start","cells","cell","posCells","includes","pop","generateDungeon","regions","region","carveRegion","my","mx","incrementRegion","numRoomTries","roomExtraSize","rooms","size","_range","rectangularity","room","overlaps","j","other","_isOverlapped","xOffset","yOffset","_addRooms","_createMaze","connectors","connectedRegions","merged","openRegions","connector","_carve","dest","sources","filter","con","abs","_connectRegions","done","exits","_fill","_removeDeadEnds","getMazeBoundingSquares","mapBounds","ofs_x","ofs_y","x1","y1","x2","y2","getMazeSquareCenter","z","_canCarve","_addDir","_isInBounds","pri","sec","MazeModel","maze","update","_updateModel","floorColor","ceilingColor","wallColor_Back","wallColor_Front","wallColor_Left","wallColor_Right","left","right","back","front","MazeScene","createMaze","createDungeon","totalDelta","useMaterials","materialName","_generateMaze","_generateDungeon","BrickWallModel","BrickWallScene","MaterialModel","MaterialScene","materialList","model4","model8","model10","model20","materialIndex","collideCircles","cx","cy","radius","tx","ty","targetRadius","collideCircleRectangle","epsilon","testX","testY","distX","distY","RoomModel","check","f0h","top","f1h","f2h","bottom","f3h","b0h","b1h","b2h","b3h","neighbors","yo","xo","shapes","RoomScene","mouseMovement","keyboardState","registerDataChange","forceDataChange","movement","side","keys","onDataChange","_updatePowerUpInfo","_updateMap","dungeon","ready","isSolid","matrix","square","nextSquare","getMazeStartLocation","boundingRectagles","active","_placePowerUps","sx","sy","boundingRadius","collected","total","_detectCollisions","collision","rect","SceneManager","resizeViewport","getScene","previousScene","nextScene","renderScene","getContext","CULL_FACE","cullFace","BACK","scenes","sceneIndex","getBoundingClientRect","viewport","timeStamp","exploreNotes","movementNotes","App","onResize","onKeyDown","onKeyUp","onMouseMove","onLockChange","onClickCanvas","onClickMessage","onAnimationFrame","state","showControls","sceneManager","notes","setState","sceneData","requestPointerLock","mozRequestPointerLock","document","exitPointerLock","mozExitPointerLock","frame","window","requestAnimationFrame","addEventListener","showMessage","cancelAnimationFrame","removeEventListener","captureMouse","captureKeys","preventDefault","onKeyPress","messageTimer","cancelMessage","cancelLock","movementX","movementY","pointerLockElement","mozPointerLockElement","forceUpdate","setTimeout","clearMessage","clearTimeout","ref","elem","note","React","Component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.1bbf87a3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Message = ({ message, onClick }) => {\r\n  if (!message) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div id=\"message\" onClick={onClick}>\r\n      {message.map((text, index) => (<div key={index}>{text}</div>))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\n\r\nconst DescriptionControl = (props) => {\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      {control.description}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst SelectControl = (props) => {\r\n  function onChange(event) {\r\n    props.onChange(control, event.target.value);\r\n  }\r\n  const { control } = props;\r\n  const options = [];\r\n  for (let i = 0; i < control.options.length; i++) {\r\n    options.push(\r\n      (<option key={i} value={i}>{control.options[i]}</option>)\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"control\">\r\n      <label htmlFor={control.name}>{control.name}</label>\r\n      <select id={control.name} className=\"select-css\" value={control.value} onChange={onChange}>\r\n        {options}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst BoolControl = (props) => {\r\n  function onChange(event) {\r\n    props.onChange(control, event.target.checked);\r\n  }\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      <label className=\"clickable\" htmlFor={control.name}><input className=\"clickable\" id={control.name} type=\"checkbox\" checked={control.value} onChange={onChange} />{control.name}</label>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst IntControl = (props) => {\r\n  function onChange(event) {\r\n    props.onChange(control, event.target.value);\r\n  }\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      <label htmlFor={control.name}>{control.name} {control.value}</label>\r\n      <input id={control.name} className=\"clickable\" type=\"range\" min={control.min} max={control.max} value={control.value} onChange={onChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst FloatControl = (props) => {\r\n  const factor = 1000;\r\n  function onChange(event) {\r\n    props.onChange(control, event.target.value / factor);\r\n  }\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      <label htmlFor={control.name}>{control.name} {control.value.toFixed(3)}</label>\r\n      <input id={control.name} className=\"clickable\" type=\"range\" min={Math.floor(control.min * factor)} max={Math.floor(control.max * factor)} value={Math.floor(control.value * factor)} onChange={onChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst FunctionControl = (props) => {\r\n  function onClick(event) {\r\n    control.function();\r\n  }\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      <button onClick={onClick}>{control.name}</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Controls = ({ show, onClickPrevious, onClickNext, onChange, options }) => {\r\n  if (!show) {\r\n    return null;\r\n  }\r\n  let controls\r\n  if (options) {\r\n    controls = options.map((option, index) => {\r\n      switch (option.type) {\r\n        case 'description':\r\n          return <DescriptionControl key={index} control={option} />\r\n        case 'select':\r\n          return <SelectControl key={index} control={option} onChange={onChange} />\r\n        case 'bool':\r\n          return <BoolControl key={index} control={option} onChange={onChange} />\r\n        case 'int':\r\n          return <IntControl key={index} control={option} onChange={onChange} />\r\n        case 'float':\r\n          return <FloatControl key={index} control={option} onChange={onChange} />\r\n        case 'function':\r\n          return <FunctionControl key={index} control={option} />\r\n        default:\r\n          return (\r\n            <div key={index} className=\"control\">{option.type} is not supported</div>\r\n          );\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <div id=\"overlay\">\r\n      <div className=\"none\">\r\n        <span className=\"left\" onClick={onClickPrevious}>❮ PREV</span>\r\n        <span className=\"right\" onClick={onClickNext}>NEXT ❯</span>\r\n      </div>\r\n      <div>\r\n        {controls}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Controls;\r\n","import React from 'react';\r\n\r\nconst Credits = ({ show, credits }) => {\r\n  if (!show) {\r\n    return null;\r\n  }\r\n  let children\r\n  if (credits) {\r\n    children = credits.map((credit, index) => {\r\n      if (credit.startsWith('link:')) {\r\n        const url = credit.slice(5);\r\n        return (\r\n          <div key={index} className=\"credit\"><a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{url}</a></div>\r\n        );\r\n      } else if (credit === '') {\r\n        return (\r\n          <div key={index} className=\"credit\"></div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div key={index} className=\"credit\">{credit}</div>\r\n        );\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <div id=\"credits\">\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Credits;\r\n","export function degreesToRadians(degrees) {\r\n  var pi = Math.PI;\r\n  return degrees * (pi / 180);\r\n}\r\n\r\nexport function initShaderProgram(gl, vsSource, fsSource) {\r\n  const vertexShader = _loadShader(gl, gl.VERTEX_SHADER, vsSource);\r\n  const fragmentShader = _loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\r\n  const shaderProgram = gl.createProgram();\r\n  gl.attachShader(shaderProgram, vertexShader);\r\n  gl.attachShader(shaderProgram, fragmentShader);\r\n  gl.linkProgram(shaderProgram);\r\n  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n    alert('Unable to initialize the shader program: ' + gl.getProgramInfoLog(shaderProgram));\r\n    return null;\r\n  }\r\n  return shaderProgram;\r\n}\r\n\r\nexport function getShaderParameters(gl, shaderProgram) {\r\n  const attributeCount = gl.getProgramParameter(shaderProgram, gl.ACTIVE_ATTRIBUTES);\r\n  const attributes = [];\r\n  for (let i = 0; i < attributeCount; i++) {\r\n    const attribute = gl.getActiveAttrib(shaderProgram, i);\r\n    attributes.push({ name: attribute.name, type: _typeToString(gl, attribute.type) });\r\n  }\r\n  const uniformCount = gl.getProgramParameter(shaderProgram, gl.ACTIVE_UNIFORMS);\r\n  const uniforms = [];\r\n  for (let i = 0; i < uniformCount; i++) {\r\n    const uniform = gl.getActiveUniform(shaderProgram, i);\r\n    uniforms.push({ name: uniform.name, type: _typeToString(gl, uniform.type) });\r\n  }\r\n  return {\r\n    attributes,\r\n    uniforms\r\n  };\r\n}\r\n\r\nfunction _typeToString(gl, type) {\r\n  switch (type) {\r\n    case gl.FLOAT:\r\n      return \"FLOAT\";\r\n    case gl.FLOAT_VEC2:\r\n      return \"FLOAT_VEC2\";\r\n    case gl.FLOAT_VEC3:\r\n      return \"FLOAT_VEC3\";\r\n    case gl.FLOAT_VEC4:\r\n      return \"FLOAT_VEC4\";\r\n    case gl.INT:\r\n      return \"INT\";\r\n    case gl.INT_VEC2:\r\n      return \"INT_VEC2\";\r\n    case gl.INT_VEC3:\r\n      return \"INT_VEC3\";\r\n    case gl.INT_VEC4:\r\n      return \"INT_VEC4\";\r\n    case gl.BOOL:\r\n      return \"BOOL\";\r\n    case gl.BOOL_VEC2:\r\n      return \"BOOL_VEC2\";\r\n    case gl.BOOL_VEC3:\r\n      return \"BOOL_VEC3\";\r\n    case gl.BOOL_VEC4:\r\n      return \"BOOL_VEC4\";\r\n    case gl.FLOAT_MAT2:\r\n      return \"FLOAT_MAT2\";\r\n    case gl.FLOAT_MAT3:\r\n      return \"FLOAT_MAT3\";\r\n    case gl.FLOAT_MAT4:\r\n      return \"FLOAT_MAT4\";\r\n    case gl.SAMPLER_2D:\r\n      return \"SAMPLER_2D\";\r\n    case gl.SAMPLER_CUBE:\r\n      return \"SAMPLER_CUBE\";\r\n    default:\r\n      return \"UNKNOWN\";\r\n  }\r\n}\r\n\r\nfunction _loadShader(gl, type, source) {\r\n  const shader = gl.createShader(type);\r\n  gl.shaderSource(shader, source);\r\n  gl.compileShader(shader);\r\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n    alert('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader));\r\n    gl.deleteShader(shader);\r\n    return null;\r\n  }\r\n  return shader;\r\n}\r\n\r\nexport function loadTexture(gl, url) {\r\n  const texture = gl.createTexture();\r\n  gl.bindTexture(gl.TEXTURE_2D, texture);\r\n  const level = 0;\r\n  const internalFormat = gl.RGBA;\r\n  const width = 1;\r\n  const height = 1;\r\n  const border = 0;\r\n  const srcFormat = gl.RGBA;\r\n  const srcType = gl.UNSIGNED_BYTE;\r\n  const pixel = new Uint8Array([0, 0, 255, 255]);\r\n  gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\r\n  const image = new Image();\r\n  image.onload = () => {\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\r\n      srcFormat, srcType, image);\r\n    if (_isPowerOf2(image.width) && _isPowerOf2(image.height)) {\r\n      gl.generateMipmap(gl.TEXTURE_2D);\r\n    } else {\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    }\r\n  };\r\n  image.src = url;\r\n  return texture;\r\n}\r\n\r\nfunction _isPowerOf2(value) {\r\n  return (value & (value - 1)) === 0;\r\n}\r\n\r\nexport function clearScreen(gl) {\r\n  gl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n  gl.clearDepth(1.0);\r\n  gl.enable(gl.DEPTH_TEST);\r\n  gl.depthFunc(gl.LEQUAL);\r\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n}\r\n\r\nexport function pickRandom(data) {\r\n  return data[Math.floor(Math.random() * data.length)];\r\n}\r\n\r\nexport function getShape(shape) {\r\n  if (shape === 'tetrahedron') {\r\n    const s3 = Math.sqrt(3);\r\n    const s6 = Math.sqrt(6);\r\n\r\n    const vertices = [\r\n      [s3 / 3, -s6 / 3 * 0.333 + s6 * 0.025, 0],         // right\r\n      [-s3 / 6, -s6 / 3 * 0.333 + s6 * 0.025, 1 / 2],    // left front\r\n      [-s3 / 6, -s6 / 3 * 0.333 + s6 * 0.025, -1 / 2],   // left back\r\n      [0, s6 / 3 * 0.666 + s6 * 0.025, 0]                // top\r\n    ];\r\n\r\n    const faces = [\r\n      [0, 1, 2],\r\n      [3, 1, 0],\r\n      [3, 0, 2],\r\n      [3, 2, 1]\r\n    ];\r\n\r\n    return { vertices, faces };\r\n  }\r\n\r\n  if (shape === 'cube') {\r\n    const r = .35;\r\n\r\n    const vertices = [\r\n      [-r, -r, -r],\r\n      [-r, -r, r],\r\n      [r, -r, r],\r\n      [r, -r, -r],\r\n      [-r, r, -r],\r\n      [-r, r, r],\r\n      [r, r, r],\r\n      [r, r, -r]\r\n    ];\r\n\r\n    const faces = [\r\n      [0, 3, 2, 1],   // bottom\r\n      [4, 5, 6, 7],   // top\r\n      [0, 1, 5, 4],   // left\r\n      [2, 3, 7, 6],   // right\r\n      [1, 2, 6, 5],   // front\r\n      [3, 0, 4, 7]    // back\r\n    ];\r\n\r\n    return { vertices, faces };\r\n  }\r\n\r\n  if (shape === 'octahedron') {\r\n    const a = 1 / (2 * Math.sqrt(2)) * 1.3;\r\n    const b = 1 / 2 * 1.3;\r\n\r\n    const vertices = [\r\n      [-a, 0, a],    // front left\r\n      [a, 0, a],     // front right\r\n      [a, 0, -a],    // back right\r\n      [-a, 0, -a],   // back left\r\n      [0, b, 0],     // top\r\n      [0, -b, 0]     // bottom\r\n    ];\r\n\r\n    const faces = [\r\n      [3, 0, 4],\r\n      [2, 3, 4],\r\n      [1, 2, 4],\r\n      [0, 1, 4],\r\n      [3, 2, 5],\r\n      [0, 3, 5],\r\n      [2, 1, 5],\r\n      [1, 0, 5]\r\n    ];\r\n\r\n    return { vertices, faces };\r\n  }\r\n\r\n  if (shape === 'pentagonaltrapezohedron') {\r\n    const vertices = [\r\n      [0.210292440, 0.15278640, 0.340260320],\r\n      [-0.08032456, 0.24721360, 0.340260320],\r\n      [-0.25993576, 0.00000000, 0.340260320],\r\n      [0.210292440, -0.6472136, 0.340260320],\r\n      [0.420584800, 0.00000000, -0.08032456],\r\n      [0.340260320, 0.24721360, 0.080324560],\r\n      [-0.21029244, 0.64721360, -0.34026032],\r\n      [-0.42058480, 0.00000000, 0.080324560],\r\n      [-0.34026032, -0.2472136, -0.08032456],\r\n      [0.080324560, -0.2472136, -0.34026032],\r\n      [0.259935760, 0.00000000, -0.34026032],\r\n      [-0.21029244, -0.1527864, -0.34026032]\r\n    ];\r\n\r\n    const faces = [\r\n      [3, 0, 1, 2],\r\n      [0, 3, 4, 5],\r\n      [1, 0, 5, 6],\r\n      [2, 1, 6, 7],\r\n      [3, 2, 7, 8],\r\n      [4, 3, 9, 10],\r\n      [5, 4, 10, 6],\r\n      [7, 6, 11, 8],\r\n      [3, 8, 11, 9],\r\n      [10, 9, 11, 6]\r\n    ];\r\n\r\n    return { vertices, faces };\r\n  }\r\n\r\n  if (shape === 'dodecahedron') {\r\n    const phi = (1 + Math.sqrt(5)) / 2;\r\n    const a = 0.5;\r\n    const b = 0.5 * 1 / phi;\r\n    const c = 0.5 * (2 - phi);\r\n\r\n    const vertices = [\r\n      [c, 0, a],\r\n      [-c, 0, a],\r\n      [-b, b, b],\r\n      [0, a, c],\r\n      [b, b, b],\r\n      [b, -b, b],\r\n      [0, -a, c],\r\n      [-b, -b, b],\r\n      [c, 0, -a],\r\n      [-c, 0, -a],\r\n      [-b, -b, -b],\r\n      [0, -a, -c],\r\n      [b, -b, -b],\r\n      [b, b, -b],\r\n      [0, a, -c],\r\n      [-b, b, -b],\r\n      [a, c, 0],\r\n      [-a, c, 0],\r\n      [-a, -c, 0],\r\n      [a, -c, 0]\r\n    ];\r\n\r\n    const faces = [\r\n      [4, 3, 2, 1, 0],\r\n      [7, 6, 5, 0, 1],\r\n      [12, 11, 10, 9, 8],\r\n      [15, 14, 13, 8, 9],\r\n      [14, 3, 4, 16, 13],\r\n      [3, 14, 15, 17, 2],\r\n      [11, 6, 7, 18, 10],\r\n      [6, 11, 12, 19, 5],\r\n      [4, 0, 5, 19, 16],\r\n      [12, 8, 13, 16, 19],\r\n      [15, 9, 10, 18, 17],\r\n      [7, 1, 2, 17, 18]\r\n    ];\r\n\r\n    return { vertices, faces };\r\n  }\r\n\r\n  if (shape === 'icosahedron') {\r\n    const phi = (1 + Math.sqrt(5)) / 2;\r\n    const a = 1 / 2;\r\n    const b = 1 / (2 * phi);\r\n\r\n    const vertices = [\r\n      [0, b, -a],\r\n      [b, a, 0],\r\n      [-b, a, 0],\r\n      [0, b, a],\r\n      [0, -b, a],\r\n      [-a, 0, b],\r\n      [a, 0, b],\r\n      [0, -b, -a],\r\n      [a, 0, -b],\r\n      [-a, 0, -b],\r\n      [b, -a, 0],\r\n      [-b, -a, 0]\r\n    ];\r\n\r\n    const faces = [\r\n      [1, 0, 2],\r\n      [2, 3, 1],\r\n      [4, 3, 5],\r\n      [6, 3, 4],\r\n      [7, 0, 8],\r\n      [9, 0, 7],\r\n      [10, 4, 11],\r\n      [11, 7, 10],\r\n      [5, 2, 9],\r\n      [9, 11, 5],\r\n      [8, 1, 6],\r\n      [6, 10, 8],\r\n      [5, 3, 2],\r\n      [1, 3, 6],\r\n      [2, 0, 9],\r\n      [8, 0, 1],\r\n      [9, 7, 11],\r\n      [10, 7, 8],\r\n      [11, 4, 5],\r\n      [6, 4, 10]\r\n    ];\r\n\r\n    return { vertices, faces };\r\n  }\r\n}\r\n\r\nconst _materials = {\r\n  emerald: {\r\n    ambient: [0.0215, 0.1745, 0.0215], diffuse: [0.07568, 0.61424, 0.07568], specular: [0.633, 0.727811, 0.633], shininess: 0.6\r\n  },\r\n  jade: {\r\n    ambient: [0.135, 0.2225, 0.1575], diffuse: [0.54, 0.89, 0.63], specular: [0.316228, 0.316228, 0.316228], shininess: 0.1\r\n  },\r\n  obsidian: {\r\n    ambient: [0.05375, 0.05, 0.06625], diffuse: [0.18275, 0.17, 0.22525], specular: [0.332741, 0.328634, 0.346435], shininess: 0.3\r\n  },\r\n  pearl: {\r\n    ambient: [0.25, 0.20725, 0.20725], diffuse: [1, 0.829, 0.829], specular: [0.296648, 0.296648, 0.296648], shininess: 0.088\r\n  },\r\n  ruby: {\r\n    ambient: [0.1745, 0.01175, 0.01175], diffuse: [0.61424, 0.04136, 0.04136], specular: [0.727811, 0.626959, 0.626959], shininess: 0.6\r\n  },\r\n  turquoise: {\r\n    ambient: [0.1, 0.18725, 0.1745], diffuse: [0.396, 0.74151, 0.69102], specular: [0.297254, 0.30829, 0.306678], shininess: 0.1\r\n  },\r\n  brass: {\r\n    ambient: [0.329412, 0.223529, 0.027451], diffuse: [0.780392, 0.568627, 0.113725], specular: [0.992157, 0.941176, 0.807843], shininess: 0.21794872\r\n  },\r\n  bronze: {\r\n    ambient: [0.2125, 0.1275, 0.054], diffuse: [0.714, 0.4284, 0.18144], specular: [0.393548, 0.271906, 0.166721], shininess: 0.2\r\n  },\r\n  chrome: {\r\n    ambient: [0.25, 0.25, 0.25], diffuse: [0.4, 0.4, 0.4], specular: [0.774597, 0.774597, 0.774597], shininess: 0.6\r\n  },\r\n  copper: {\r\n    ambient: [0.19125, 0.0735, 0.0225], diffuse: [0.7038, 0.27048, 0.0828], specular: [0.256777, 0.137622, 0.086014], shininess: 0.1\r\n  },\r\n  gold: {\r\n    ambient: [0.24725, 0.1995, 0.0745], diffuse: [0.75164, 0.60648, 0.22648], specular: [0.628281, 0.555802, 0.366065], shininess: 0.4\r\n  },\r\n  silver: {\r\n    ambient: [0.19225, 0.19225, 0.19225], diffuse: [0.50754, 0.50754, 0.50754], specular: [0.508273, 0.508273, 0.508273], shininess: 0.4\r\n  },\r\n  blackPlastic: {\r\n    ambient: [0.0, 0.0, 0.0], diffuse: [0.01, 0.01, 0.01], specular: [0.50, 0.50, 0.50], shininess: 0.25\r\n  },\r\n  cyanPlastic: {\r\n    ambient: [0.0, 0.1, 0.06], diffuse: [0.0, 0.50980392, 0.50980392], specular: [0.50196078, 0.50196078, 0.50196078], shininess: 0.25\r\n  },\r\n  greenPlastic: {\r\n    ambient: [0.0, 0.0, 0.0], diffuse: [0.1, 0.35, 0.1], specular: [0.45, 0.55, 0.45], shininess: 0.25\r\n  },\r\n  redPlastic: {\r\n    ambient: [0.0, 0.0, 0.0], diffuse: [0.5, 0.0, 0.0], specular: [0.7, 0.6, 0.6], shininess: 0.25\r\n  },\r\n  whitePlastic: {\r\n    ambient: [0.0, 0.0, 0.0], diffuse: [0.55, 0.55, 0.55], specular: [0.70, 0.70, 0.70], shininess: 0.25\r\n  },\r\n  yellowPlastic: {\r\n    ambient: [0.0, 0.0, 0.0], diffuse: [0.5, 0.5, 0.0], specular: [0.60, 0.60, 0.50], shininess: 0.25\r\n  },\r\n  blackRubber: {\r\n    ambient: [0.02, 0.02, 0.02], diffuse: [0.01, 0.01, 0.01], specular: [0.4, 0.4, 0.4], shininess: 0.078125\r\n  },\r\n  cyanRubber: {\r\n    ambient: [0.0, 0.05, 0.05], diffuse: [0.4, 0.5, 0.5], specular: [0.04, 0.7, 0.7], shininess: 0.078125\r\n  },\r\n  greenRubber: {\r\n    ambient: [0.0, 0.05, 0.0], diffuse: [0.4, 0.5, 0.4], specular: [0.04, 0.7, 0.04], shininess: 0.078125\r\n  },\r\n  redRubber: {\r\n    ambient: [0.05, 0.0, 0.0], diffuse: [0.5, 0.4, 0.4], specular: [0.7, 0.04, 0.04], shininess: 0.078125\r\n  },\r\n  whiteRubber: {\r\n    ambient: [0.05, 0.05, 0.05], diffuse: [0.5, 0.5, 0.5], specular: [0.7, 0.7, 0.7], shininess: 0.078125\r\n  },\r\n  yellowRubber: {\r\n    ambient: [0.05, 0.05, 0.0], diffuse: [0.5, 0.5, 0.4], specular: [0.7, 0.7, 0.04], shininess: 0.078125\r\n  }\r\n};\r\n\r\nexport function getMaterialList() {\r\n  const materials = [];\r\n  for (const prop in _materials) {\r\n    if (_materials.hasOwnProperty(prop)) {\r\n      materials.push(prop);\r\n    }\r\n  }\r\n  return materials;\r\n}\r\n\r\nexport function getMaterial(name) {\r\n  return _materials[name];\r\n}\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport * as vec3 from 'gl-matrix/vec3';\r\nimport { loadTexture, initShaderProgram, getShaderParameters } from '../lib/utility'\r\n\r\nclass Model {\r\n  _initModel(options) {\r\n    const { gl, geometry, bufferCount } = options;\r\n\r\n    const textures = [];\r\n    if (options.texture) {\r\n      const texture = {};\r\n      if (options.texture.diffuse) {\r\n        texture.diffuse = loadTexture(gl, options.texture.diffuse);\r\n      }\r\n      if (options.texture.normal) {\r\n        texture.normal = loadTexture(gl, options.texture.normal);\r\n      }\r\n      if (options.texture.height) {\r\n        texture.height = loadTexture(gl, options.texture.height);\r\n      }\r\n      if (options.texture.occlusion) {\r\n        texture.occlusion = loadTexture(gl, options.texture.occlusion);\r\n      }\r\n      textures.push(texture);\r\n    } else if (options.textures) {\r\n      for (let i = 0; i < options.textures.length; i++) {\r\n        const texture = {};\r\n        if (options.textures[i].diffuse) {\r\n          texture.diffuse = loadTexture(gl, options.textures[i].diffuse);\r\n        }\r\n        if (options.textures[i].normal) {\r\n          texture.normal = loadTexture(gl, options.textures[i].normal);\r\n        }\r\n        if (options.textures[i].height) {\r\n          texture.height = loadTexture(gl, options.textures[i].height);\r\n        }\r\n        if (options.textures[i].occlusion) {\r\n          texture.occlusion = loadTexture(gl, options.textures[i].occlusion);\r\n        }\r\n        textures.push(texture);\r\n      }\r\n    }\r\n\r\n    if (options.shader) {\r\n      let vertexShader;\r\n      let fragmentShader;\r\n      Promise.all([\r\n        fetch(options.shader.vertex).then((response) => response.text()).then((text) => vertexShader = text),\r\n        fetch(options.shader.fragment).then((response) => response.text()).then((text) => fragmentShader = text)\r\n      ]).then(() => {\r\n        const shader = this._setupShader(gl, vertexShader, fragmentShader);\r\n        const buffers = this._initBuffers(gl, [shader], geometry, bufferCount || textures.length || 1);\r\n        this.model = {\r\n          shaders: [shader],\r\n          buffers,\r\n          textures\r\n        };\r\n      });\r\n    }\r\n    else {\r\n      const vertexShaders = new Array(options.shaders.length).fill(null);\r\n      const fragmentShaders = new Array(options.shaders.length).fill(null);\r\n      const pendingLoads = [];\r\n      for (let i = 0; i < options.shaders.length; i++) {\r\n        pendingLoads.push(fetch(options.shaders[i].vertex).then((response) => response.text()).then((text) => vertexShaders[i] = text));\r\n        pendingLoads.push(fetch(options.shaders[i].fragment).then((response) => response.text()).then((text) => fragmentShaders[i] = text));\r\n      }\r\n\r\n      Promise.all(pendingLoads)\r\n        .then(() => {\r\n          const shaders = [];\r\n          for (let i = 0; i < options.shaders.length; i++) {\r\n            shaders.push(this._setupShader(gl, vertexShaders[i], fragmentShaders[i]));\r\n          }\r\n          const buffers = this._initBuffers(gl, shaders, geometry, bufferCount || textures.length || 1);\r\n          this.model = {\r\n            shaders,\r\n            buffers,\r\n            textures\r\n          };\r\n        });\r\n    }\r\n  }\r\n\r\n  _updateModel(geometry) {\r\n    const bufferCount = this.model.buffers.length;\r\n    this._deleteBuffers();\r\n    this.model.buffers = this._initBuffers(this.gl, this.model.shaders, geometry, bufferCount);\r\n  }\r\n\r\n  _setupShader(gl, vertexShader, fragmentShader) {\r\n    const shaderProgram = initShaderProgram(gl, vertexShader, fragmentShader);\r\n    const shaderParameters = getShaderParameters(gl, shaderProgram);\r\n    const shader = {\r\n      program: shaderProgram,\r\n      attribLocations: {},\r\n      uniformLocations: {}\r\n    };\r\n    shaderParameters.attributes.forEach((attribute) => {\r\n      const location = gl.getAttribLocation(shaderProgram, attribute.name)\r\n      this._addShaderNameToJavascript(shader.attribLocations, attribute.name, location);\r\n    });\r\n    shaderParameters.uniforms.forEach((uniform) => {\r\n      const location = gl.getUniformLocation(shaderProgram, uniform.name)\r\n      this._addShaderNameToJavascript(shader.uniformLocations, uniform.name, location);\r\n    });\r\n    return shader;\r\n  }\r\n\r\n  _addShaderNameToJavascript(shaderLocations, inputName, location) {\r\n    if (inputName[0] !== 'a' && inputName[0] !== 'u') {\r\n      alert('shader name of ' + inputName + ' is not valid');\r\n      return;\r\n    }\r\n    let outputName = inputName[1].toLowerCase() + inputName.slice(2);\r\n    const names = outputName.split('.');\r\n    let out = shaderLocations;\r\n    for (let i = 0; i < names.length; i++) {\r\n      let name = names[i];\r\n      const subBeg = name.indexOf('[');\r\n      if (subBeg !== -1) {\r\n        const subEnd = name.indexOf(']');\r\n        if (subEnd < subBeg + 2) {\r\n          alert('shader name of ' + inputName + ' is not valid');\r\n          return;\r\n        }\r\n        const index = Number(name.slice(subBeg + 1, subEnd));\r\n        name = name.slice(0, subBeg);\r\n        if (i < names.length - 1) {\r\n          if (!out[name]) {\r\n            out[name] = [];\r\n          }\r\n          if (out[name].length <= index) {\r\n            out[name].length = index + 1;\r\n          }\r\n          if (!out[name][index]) {\r\n            out[name][index] = {};\r\n          }\r\n          out = out[name][index];\r\n        } else {\r\n          if (!out[name]) {\r\n            out[name] = [];\r\n          }\r\n          if (out[name].length <= index) {\r\n            out[name].length = index + 1;\r\n          }\r\n          out[name][index] = location;\r\n        }\r\n      } else {\r\n        if (i < names.length - 1) {\r\n          if (!out[name]) {\r\n            out[name] = {};\r\n          }\r\n          out = out[name];\r\n        } else {\r\n          out[name] = location;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _initBuffers(gl, shaders, geometry, bufferCount) {\r\n    const requirements = {};\r\n\r\n    for (let i = 0; i < shaders.length; i++) {\r\n      const shader = shaders[i];\r\n\r\n      if (shader.attribLocations.vertexNormal) {\r\n        requirements.vertexNormal = true;\r\n      }\r\n\r\n      if (shader.attribLocations.vertexTangent) {\r\n        requirements.vertexTangent = true;\r\n      }\r\n\r\n      if (shader.attribLocations.vertexBitangent) {\r\n        requirements.vertexBitangent = true;\r\n      }\r\n\r\n      if (shader.attribLocations.textureCoord) {\r\n        requirements.textureCoord = true;\r\n      }\r\n\r\n      if (shader.attribLocations.vertexColor) {\r\n        requirements.vertexColor = true;\r\n      }\r\n    }\r\n\r\n    const normal = vec3.create();\r\n    const tangent = vec3.create();\r\n    const bitangent = vec3.create();\r\n\r\n    const inputBuffers = [];\r\n\r\n    for (let i = 0; i < bufferCount; i++) {\r\n      inputBuffers.push({\r\n        positions: [],\r\n        normals: [],\r\n        tangents: [],\r\n        bitangents: [],\r\n        textureCoordinates: [],\r\n        colors: [],\r\n        indices: [],\r\n        offset: 0\r\n      });\r\n    }\r\n\r\n    const addSquare = (c0, c1, c2, c3, options) => {\r\n      let inputBuffer;\r\n      if (options && options.bufferIndex) {\r\n        inputBuffer = inputBuffers[options.bufferIndex];\r\n      } else {\r\n        inputBuffer = inputBuffers[0];\r\n      }\r\n\r\n      const { positions, normals, tangents, bitangents, textureCoordinates, colors, indices, offset } = inputBuffer;\r\n\r\n      positions.push(...c0, ...c1, ...c2, ...c3);\r\n      indices.push(offset + 0, offset + 1, offset + 2, offset + 2, offset + 3, offset + 0);\r\n      inputBuffer.offset += 4;\r\n\r\n      if (requirements.vertexNormal || requirements.vertexTangent || requirements.vertexBitangent) {\r\n        vec3.subtract(tangent, c1, c0);\r\n        vec3.subtract(bitangent, c3, c0);\r\n\r\n        if (requirements.vertexNormal) {\r\n          vec3.cross(normal, tangent, bitangent);\r\n          vec3.normalize(normal, normal);\r\n          normals.push(...normal, ...normal, ...normal, ...normal);\r\n        }\r\n\r\n        if (requirements.vertexTangent) {\r\n          vec3.normalize(tangent, tangent);\r\n          tangents.push(...tangent, ...tangent, ...tangent, ...tangent);\r\n        }\r\n\r\n        if (requirements.vertexBitangent) {\r\n          vec3.normalize(bitangent, bitangent);\r\n          bitangents.push(...bitangent, ...bitangent, ...bitangent, ...bitangent);\r\n        }\r\n      }\r\n\r\n      if (requirements.textureCoord) {\r\n        textureCoordinates.push(0, 0, 1, 0, 1, 1, 0, 1);\r\n      }\r\n\r\n      if (requirements.vertexColor) {\r\n        colors.push(...options.color, ...options.color, ...options.color, ...options.color);\r\n      }\r\n    }\r\n\r\n    const addTriangle = (c0, c1, c2, options) => {\r\n      let inputBuffer;\r\n      if (options.bufferIndex) {\r\n        inputBuffer = inputBuffers[options.bufferIndex];\r\n      } else {\r\n        inputBuffer = inputBuffers[0];\r\n      }\r\n\r\n      const { positions, normals, tangents, bitangents, colors, indices, offset } = inputBuffer;\r\n\r\n      positions.push(...c0, ...c1, ...c2);\r\n      indices.push(offset + 0, offset + 1, offset + 2);\r\n      inputBuffer.offset += 3;\r\n\r\n      if (requirements.vertexNormal || requirements.vertexTangent || requirements.vertexBitangent) {\r\n        vec3.subtract(tangent, c1, c0);\r\n        vec3.subtract(bitangent, c2, c0);\r\n\r\n        if (requirements.vertexNormal) {\r\n          vec3.cross(normal, tangent, bitangent);\r\n          vec3.normalize(normal, normal);\r\n          normals.push(...normal, ...normal, ...normal);\r\n        }\r\n\r\n        if (requirements.vertexTangent) {\r\n          vec3.normalize(tangent, tangent);\r\n          tangents.push(...tangent, ...tangent, ...tangent);\r\n        }\r\n\r\n        if (requirements.vertexBitangent) {\r\n          vec3.normalize(bitangent, bitangent);\r\n          bitangents.push(...bitangent, ...bitangent, ...bitangent);\r\n        }\r\n      }\r\n\r\n      if (requirements.vertexColor) {\r\n        colors.push(...options.color, ...options.color, ...options.color);\r\n      }\r\n    }\r\n\r\n    const addPentagon = (c0, c1, c2, c3, c4, options) => {\r\n      let inputBuffer;\r\n      if (options.bufferIndex) {\r\n        inputBuffer = inputBuffers[options.bufferIndex];\r\n      } else {\r\n        inputBuffer = inputBuffers[0];\r\n      }\r\n\r\n      const { positions, normals, tangents, bitangents, colors, indices, offset } = inputBuffer;\r\n\r\n      positions.push(...c0, ...c1, ...c2, ...c3, ...c4);\r\n      indices.push(offset + 0, offset + 3, offset + 4, offset + 0, offset + 1, offset + 3, offset + 1, offset + 2, offset + 3);\r\n      inputBuffer.offset += 5;\r\n\r\n      if (requirements.vertexNormal || requirements.vertexTangent || requirements.vertexBitangent) {\r\n        vec3.subtract(tangent, c1, c0);\r\n        vec3.subtract(bitangent, c4, c0);\r\n\r\n        if (requirements.vertexNormal) {\r\n          vec3.cross(normal, tangent, bitangent);\r\n          vec3.normalize(normal, normal);\r\n          normals.push(...normal, ...normal, ...normal, ...normal, ...normal);\r\n        }\r\n\r\n        if (requirements.vertexTangent) {\r\n          vec3.normalize(tangent, tangent);\r\n          tangents.push(...tangent, ...tangent, ...tangent, ...tangent, ...tangent);\r\n        }\r\n\r\n        if (requirements.vertexBitangent) {\r\n          vec3.normalize(bitangent, bitangent);\r\n          bitangents.push(...bitangent, ...bitangent, ...bitangent, ...bitangent, ...bitangent);\r\n        }\r\n      }\r\n\r\n      if (requirements.vertexColor) {\r\n        colors.push(...options.color, ...options.color, ...options.color, ...options.color, ...options.color);\r\n      }\r\n    }\r\n\r\n    const addFace = (vertices, face, options) => {\r\n      switch (face.length) {\r\n        case 3:\r\n          addTriangle(vertices[face[0]], vertices[face[1]], vertices[face[2]], options);\r\n          break;\r\n        case 4:\r\n          addSquare(vertices[face[0]], vertices[face[1]], vertices[face[2]], vertices[face[3]], options);\r\n          break;\r\n        case 5:\r\n          addPentagon(vertices[face[0]], vertices[face[1]], vertices[face[2]], vertices[face[3]], vertices[face[4]], options);\r\n          break;\r\n        default:\r\n          alert('faces with ' + face.length + ' vertices are not supported');\r\n      }\r\n    }\r\n\r\n    const addFaces = (vertices, faces, options) => {\r\n      for (let i = 0; i < faces.length; i++) {\r\n        let option = {}\r\n        if (options) {\r\n          if (options.colors) {\r\n            option.color = options.colors[i % options.colors.length];\r\n          }\r\n        }\r\n        addFace(vertices, faces[i], option);\r\n      }\r\n    }\r\n\r\n    geometry({ addSquare, addFaces });\r\n\r\n    const outputBuffers = [];\r\n\r\n    for (let i = 0; i < bufferCount; i++) {\r\n      const inputBuffer = inputBuffers[i];\r\n      const { positions, normals, tangents, bitangents, textureCoordinates, colors, indices } = inputBuffer;\r\n\r\n      const positionBuffer = gl.createBuffer();\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n      gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\r\n\r\n      const indexBuffer = gl.createBuffer();\r\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\r\n\r\n      const outputBuffer = { position: positionBuffer, indices: indexBuffer, vertexCount: indices.length }\r\n\r\n      if (requirements.vertexNormal) {\r\n        const normalBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, normalBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(normals), gl.STATIC_DRAW);\r\n        outputBuffer.normal = normalBuffer;\r\n      }\r\n\r\n      if (requirements.vertexTangent) {\r\n        const tangentBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, tangentBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(tangents), gl.STATIC_DRAW);\r\n        outputBuffer.tangent = tangentBuffer;\r\n      }\r\n\r\n      if (requirements.vertexBitangent) {\r\n        const bitangentBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, bitangentBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(bitangents), gl.STATIC_DRAW);\r\n        outputBuffer.bitangent = bitangentBuffer;\r\n      }\r\n\r\n      if (requirements.textureCoord) {\r\n        const textureCoordBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, textureCoordBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(textureCoordinates), gl.STATIC_DRAW);\r\n        outputBuffer.textureCoord = textureCoordBuffer;\r\n      }\r\n\r\n      if (requirements.vertexColor) {\r\n        const colorBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW);\r\n        outputBuffer.color = colorBuffer;\r\n      }\r\n\r\n      outputBuffers.push(outputBuffer);\r\n    }\r\n\r\n    return outputBuffers;\r\n  }\r\n\r\n  _deleteBuffers() {\r\n    const buffers = this.model.buffers;\r\n    for (let i = 0; i < buffers.length; i++) {\r\n      const buffer = buffers[i];\r\n      buffer.vertexCount = 0;\r\n      for (const prop in buffer) {\r\n        if (buffer.hasOwnProperty(prop) && typeof buffer[prop] === 'object') {\r\n          this.gl.deleteBuffer(buffer[prop]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _drawModel(options) {\r\n    if (!this.model) {\r\n      return;\r\n    }\r\n\r\n    const gl = this.gl;\r\n    const model = this.model;\r\n    const { projectionMatrix, viewMatrix, modelMatrix } = options;\r\n    const { shaders, buffers, textures } = model;\r\n    const shader = shaders[options.shaderIndex ? options.shaderIndex : 0];\r\n\r\n    for (let i = 0; i < buffers.length; i++) {\r\n      const buffer = buffers[i];\r\n      const texture = textures[i];\r\n      const material = options.material ? options.material : (options.materials ? options.materials[i] : undefined);\r\n\r\n      {\r\n        const numComponents = 3;\r\n        const type = gl.FLOAT;\r\n        const normalize = false;\r\n        const stride = 0;\r\n        const offset = 0;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer.position);\r\n        gl.vertexAttribPointer(shader.attribLocations.vertexPosition, numComponents, type, normalize, stride, offset);\r\n        gl.enableVertexAttribArray(shader.attribLocations.vertexPosition);\r\n      }\r\n\r\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer.indices);\r\n\r\n      if (shader.attribLocations.vertexNormal && buffer.normal) {\r\n        const numComponents = 3;\r\n        const type = gl.FLOAT;\r\n        const normalize = false;\r\n        const stride = 0;\r\n        const offset = 0;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer.normal);\r\n        gl.vertexAttribPointer(shader.attribLocations.vertexNormal, numComponents, type, normalize, stride, offset);\r\n        gl.enableVertexAttribArray(shader.attribLocations.vertexNormal);\r\n      }\r\n\r\n      if (shader.attribLocations.vertexTangent && buffer.tangent) {\r\n        const numComponents = 3;\r\n        const type = gl.FLOAT;\r\n        const normalize = false;\r\n        const stride = 0;\r\n        const offset = 0;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer.tangent);\r\n        gl.vertexAttribPointer(shader.attribLocations.vertexTangent, numComponents, type, normalize, stride, offset);\r\n        gl.enableVertexAttribArray(shader.attribLocations.vertexTangent);\r\n      }\r\n\r\n      if (shader.attribLocations.vertexBitangent && buffer.bitangent) {\r\n        const numComponents = 3;\r\n        const type = gl.FLOAT;\r\n        const normalize = false;\r\n        const stride = 0;\r\n        const offset = 0;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer.bitangent);\r\n        gl.vertexAttribPointer(shader.attribLocations.vertexBitangent, numComponents, type, normalize, stride, offset);\r\n        gl.enableVertexAttribArray(shader.attribLocations.vertexBitangent);\r\n      }\r\n\r\n      if (shader.attribLocations.textureCoord && buffer.textureCoord) {\r\n        const numComponents = 2;\r\n        const type = gl.FLOAT;\r\n        const normalize = false;\r\n        const stride = 0;\r\n        const offset = 0;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer.textureCoord);\r\n        gl.vertexAttribPointer(shader.attribLocations.textureCoord, numComponents, type, normalize, stride, offset);\r\n        gl.enableVertexAttribArray(shader.attribLocations.textureCoord);\r\n      }\r\n\r\n      if (shader.attribLocations.vertexColor && buffer.color) {\r\n        const numComponents = 3;\r\n        const type = gl.FLOAT;\r\n        const normalize = false;\r\n        const stride = 0;\r\n        const offset = 0;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer.color);\r\n        gl.vertexAttribPointer(shader.attribLocations.vertexColor, numComponents, type, normalize, stride, offset);\r\n        gl.enableVertexAttribArray(shader.attribLocations.vertexColor);\r\n      }\r\n\r\n      gl.useProgram(shader.program);\r\n      gl.uniformMatrix4fv(shader.uniformLocations.projectionMatrix, false, projectionMatrix);\r\n      gl.uniformMatrix4fv(shader.uniformLocations.modelMatrix, false, modelMatrix);\r\n      gl.uniformMatrix4fv(shader.uniformLocations.viewMatrix, false, viewMatrix);\r\n\r\n      if (shader.uniformLocations.normalMatrix) {\r\n        const normalMatrix = mat4.create();\r\n        mat4.invert(normalMatrix, modelMatrix);\r\n        mat4.transpose(normalMatrix, normalMatrix);\r\n        gl.uniformMatrix4fv(shader.uniformLocations.normalMatrix, false, normalMatrix);\r\n      }\r\n\r\n      if (shader.uniformLocations.showDiffuseMap && options.showDiffuseMap !== undefined) {\r\n        gl.uniform1i(shader.uniformLocations.showDiffuseMap, options.showDiffuseMap);\r\n      }\r\n\r\n      if (shader.uniformLocations.showNormalMap && options.showNormalMap !== undefined) {\r\n        gl.uniform1i(shader.uniformLocations.showNormalMap, options.showNormalMap);\r\n      }\r\n\r\n      if (shader.uniformLocations.showAmbientOcclusionMap && options.showAmbientOcclusionMap !== undefined) {\r\n        gl.uniform1i(shader.uniformLocations.showAmbientOcclusionMap, options.showAmbientOcclusionMap);\r\n      }\r\n\r\n      if (shader.uniformLocations.showParallaxMap && options.showParallaxMap !== undefined) {\r\n        gl.uniform1i(shader.uniformLocations.showParallaxMap, options.showParallaxMap);\r\n      }\r\n\r\n      if (shader.uniformLocations.lightingModel && options.lightingModel !== undefined) {\r\n        gl.uniform1i(shader.uniformLocations.lightingModel, options.lightingModel);\r\n      }\r\n\r\n      if (shader.uniformLocations.parallaxHeightScale && options.parallaxHeightScale !== undefined) {\r\n        gl.uniform1f(shader.uniformLocations.parallaxHeightScale, options.parallaxHeightScale);\r\n      }\r\n\r\n      if (shader.uniformLocations.parallaxSteps && options.parallaxSteps !== undefined) {\r\n        gl.uniform1i(shader.uniformLocations.parallaxSteps, options.parallaxSteps);\r\n      }\r\n\r\n      if (shader.uniformLocations.parallaxOcclusionMapping && options.parallaxOcclusionMapping !== undefined) {\r\n        gl.uniform1i(shader.uniformLocations.parallaxOcclusionMapping, options.parallaxOcclusionMapping);\r\n      }\r\n\r\n      if (shader.uniformLocations.ambientLight && options.ambientLight) {\r\n        gl.uniform3fv(shader.uniformLocations.ambientLight, options.ambientLight);\r\n      }\r\n\r\n      if (shader.uniformLocations.directionalLight && options.directionalLight) {\r\n        const direction = vec3.clone(options.directionalLight.direction);\r\n        vec3.normalize(direction, direction);\r\n        gl.uniform3fv(shader.uniformLocations.directionalLight.color, options.directionalLight.color);\r\n        gl.uniform3fv(shader.uniformLocations.directionalLight.direction, direction);\r\n      }\r\n\r\n      if (shader.uniformLocations.pointLight && options.pointLight) {\r\n        gl.uniform3fv(shader.uniformLocations.pointLight.color, options.pointLight.color);\r\n        gl.uniform3fv(shader.uniformLocations.pointLight.position, options.pointLight.position);\r\n        gl.uniform1f(shader.uniformLocations.pointLight.brightness, options.pointLight.brightness);\r\n      }\r\n\r\n      if (shader.uniformLocations.lights && options.lights) {\r\n        const lights = options.lights;\r\n        for (let i = 0; i < lights.length; i++) {\r\n          const light = lights[i];\r\n          gl.uniform3fv(shader.uniformLocations.lights[i].position, light.position);\r\n          gl.uniform3fv(shader.uniformLocations.lights[i].ambient, light.ambient);\r\n          gl.uniform3fv(shader.uniformLocations.lights[i].diffuse, light.diffuse);\r\n          gl.uniform3fv(shader.uniformLocations.lights[i].specular, light.specular);\r\n        }\r\n      }\r\n\r\n      if (shader.uniformLocations.material && material) {\r\n        gl.uniform3fv(shader.uniformLocations.material.ambient, material.ambient);\r\n        gl.uniform3fv(shader.uniformLocations.material.diffuse, material.diffuse);\r\n        gl.uniform3fv(shader.uniformLocations.material.specular, material.specular);\r\n        gl.uniform1f(shader.uniformLocations.material.shininess, material.shininess);\r\n      }\r\n\r\n      if (shader.uniformLocations.cameraPos && options.cameraPos) {\r\n        gl.uniform3fv(shader.uniformLocations.cameraPos, options.cameraPos);\r\n      }\r\n\r\n      if (shader.uniformLocations.samplerDiffuse && texture.diffuse) {\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(gl.TEXTURE_2D, texture.diffuse);\r\n        gl.uniform1i(shader.uniformLocations.samplerDiffuse, 0);\r\n      }\r\n\r\n      if (shader.uniformLocations.samplerNormal && texture.normal) {\r\n        gl.activeTexture(gl.TEXTURE1);\r\n        gl.bindTexture(gl.TEXTURE_2D, texture.normal);\r\n        gl.uniform1i(shader.uniformLocations.samplerNormal, 1);\r\n      }\r\n\r\n      if (shader.uniformLocations.samplerHeight && texture.height) {\r\n        gl.activeTexture(gl.TEXTURE2);\r\n        gl.bindTexture(gl.TEXTURE_2D, texture.height);\r\n        gl.uniform1i(shader.uniformLocations.samplerHeight, 2);\r\n      }\r\n\r\n      if (shader.uniformLocations.samplerOcclusion && texture.occlusion) {\r\n        gl.activeTexture(gl.TEXTURE3);\r\n        gl.bindTexture(gl.TEXTURE_2D, texture.occlusion);\r\n        gl.uniform1i(shader.uniformLocations.samplerOcclusion, 3);\r\n      }\r\n\r\n      {\r\n        const vertexCount = buffer.vertexCount;\r\n        const type = gl.UNSIGNED_SHORT;\r\n        const offset = 0;\r\n        gl.drawElements(gl.TRIANGLES, vertexCount, type, offset);\r\n      }\r\n\r\n      const numAttributes = gl.getProgramParameter(shader.program, gl.ACTIVE_ATTRIBUTES);\r\n      for (let i = 0; i < numAttributes; i++) {\r\n        gl.disableVertexAttribArray(i);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Model;\r\n","import Model from './Model';\r\nimport { getShape } from '../lib/utility';\r\n\r\nclass ColorModel extends Model {\r\n  constructor(gl, shapeName, colors) {\r\n    super(gl);\r\n    this.gl = gl;\r\n    this.draw = this.draw.bind(this);\r\n    this._initModel({\r\n      gl,\r\n      geometry: ({ addFaces }) => {\r\n        const shape = getShape(shapeName);\r\n        addFaces(shape.vertices, shape.faces, { colors });\r\n      },\r\n      shader: {\r\n        vertex: 'shaders/color_L/vertex.glsl',\r\n        fragment: 'shaders/color_L/fragment.glsl'\r\n      }\r\n    });\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix, options) {\r\n    const {\r\n      ambientLight,\r\n      directionalLight,\r\n      pointLight,\r\n      cameraPos,\r\n      lightingModel\r\n    } = options;\r\n    this._drawModel({\r\n      projectionMatrix,\r\n      viewMatrix,\r\n      modelMatrix,\r\n      ambientLight,\r\n      directionalLight,\r\n      pointLight,\r\n      cameraPos,\r\n      lightingModel\r\n    });\r\n  }\r\n}\r\n\r\nexport default ColorModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen } from '../lib/utility'\r\nimport ColorModel from '../models/ColorModel';\r\n\r\nclass ColorScene {\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n    this.setOption = this.setOption.bind(this);\r\n    this.initScene = this.initScene.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n    this.renderOptions = {\r\n      ambientLight: [0.2, 0.2, 0.2],\r\n      directionalLight: {\r\n        color: [1.0, 1.0, 1.0],\r\n        direction: [-1.0, 1.0, 0.0]\r\n      },\r\n      pointLight: {\r\n        color: [1.0, 1.0, 1.0],\r\n        position: [1.0, -1.0, 0.0],\r\n        brightness: 25.0\r\n      },\r\n      cameraPos: [0.0, 0.0, 0.0],\r\n      lightingModel: 0\r\n    };\r\n    this.options = [\r\n      {\r\n        description: 'Colored cube and dodecahedron with your choice of lighting',\r\n        type: 'description'\r\n      },\r\n      {\r\n        name: 'Lighting Model',\r\n        id: 'lightingModel',\r\n        type: 'select',\r\n        options: ['Unlit', 'Vertex Lighting', 'Fragment Lighting'],\r\n        value: this.renderOptions.lightingModel\r\n      }\r\n    ];\r\n  }\r\n\r\n  setOption(option, value) {\r\n    option.value = Number(value);\r\n    this.renderOptions[option.id] = option.value;\r\n  }\r\n\r\n  initScene() {\r\n    const gl = this.gl;\r\n    const colors1 = [\r\n      [0.0, 0.0, 1.0],    // Bottom face: blue\r\n      [0.0, 1.0, 0.0],    // Top face: green\r\n      [1.0, 0.0, 1.0],    // Left face: purple\r\n      [1.0, 1.0, 0.0],    // Right face: yellow\r\n      [1.0, 1.0, 1.0],    // Front face: white\r\n      [1.0, 0.0, 0.0]     // Back face: red\r\n    ];\r\n    const model6 = new ColorModel(gl, 'cube', colors1);\r\n    const colors2 = [\r\n      [1.0, 0.0, 0.0],\r\n      [0.0, 0.0, 1.0],\r\n      [0.0, 1.0, 0.0],\r\n      [1.0, 1.0, 0.0],\r\n      [0.0, 1.0, 1.0],\r\n      [1.0, 0.0, 1.0],\r\n      [1.0, 0.5, 0.0],\r\n      [0.0, 1.0, 0.5],\r\n      [1.0, 0.0, 0.5],\r\n      [0.5, 1.0, 0.0],\r\n      [0.0, 0.5, 1.0],\r\n      [0.5, 0.0, 1.0]\r\n    ];\r\n    const model12 = new ColorModel(gl, 'dodecahedron', colors2);\r\n    this.scene = {\r\n      actors: [\r\n        {\r\n          model: model6,\r\n          location: [-1.6, 0.0, -6.0],\r\n          scale: [2.8, 2.8, 2.8],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 1.0\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.7\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model12,\r\n          location: [1.6, 0.0, -6.0],\r\n          scale: [2.8, 2.8, 2.8],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 1.0\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.7\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      camera: [0.0, 0.0, 0.0]\r\n    };\r\n  }\r\n\r\n  drawScene(deltaTime) {\r\n    const gl = this.gl;\r\n    const scene = this.scene;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 100.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, scene.camera);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      this._renderActor(projectionMatrix, viewMatrix, actor);\r\n      this._animateActor(deltaTime, actor);\r\n    }\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    if (actor.scale) {\r\n      mat4.scale(modelMatrix, modelMatrix, actor.scale);\r\n    }\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      mat4.rotate(modelMatrix, modelMatrix, rotation.angle, rotation.axis);\r\n    }\r\n\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix, this.renderOptions);\r\n  }\r\n\r\n  _animateActor(deltaTime, actor) {\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      rotation.angle += deltaTime * rotation.speed;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ColorScene;\r\n","import Model from './Model';\r\n\r\nclass TexturedCubeModel extends Model {\r\n  constructor(gl) {\r\n    super(gl);\r\n    this.gl = gl;\r\n    this.draw = this.draw.bind(this);\r\n    this._initModel({\r\n      gl,\r\n      geometry: this._geometry,\r\n      texture: {\r\n        diffuse: 'images/cubetexture.png'\r\n      },\r\n      shader: {\r\n        vertex: 'shaders/texture_LD/vertex.glsl',\r\n        fragment: 'shaders/texture_LD/fragment.glsl'\r\n      }\r\n    });\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix, options) {\r\n    const {\r\n      ambientLight,\r\n      directionalLight,\r\n      pointLight,\r\n      cameraPos,\r\n      lightingModel\r\n    } = options;\r\n    this._drawModel({\r\n      projectionMatrix,\r\n      viewMatrix,\r\n      modelMatrix,\r\n      ambientLight,\r\n      directionalLight,\r\n      pointLight,\r\n      cameraPos,\r\n      lightingModel\r\n    });\r\n  }\r\n\r\n  _geometry({ addSquare }) {\r\n    const f0 = [-1, -1, 1];\r\n    const f1 = [1, -1, 1];\r\n    const f2 = [1, 1, 1];\r\n    const f3 = [-1, 1, 1];\r\n    const b0 = [-1, -1, -1];\r\n    const b1 = [1, -1, -1];\r\n    const b2 = [1, 1, -1];\r\n    const b3 = [-1, 1, -1];\r\n    addSquare(f0, f1, f2, f3);  // front\r\n    addSquare(b1, b0, b3, b2);  // back\r\n    addSquare(b0, f0, f3, b3);  // left\r\n    addSquare(f1, b1, b2, f2);  // right\r\n    addSquare(b0, b1, f1, f0);  // bottom\r\n    addSquare(b2, b3, f3, f2);  // top\r\n  }\r\n}\r\n\r\nexport default TexturedCubeModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen } from '../lib/utility'\r\nimport TexturedCubeModel from '../models/TexturedCubeModel';\r\n\r\nclass TextureScene {\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n    this.setOption = this.setOption.bind(this);\r\n    this.initScene = this.initScene.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n    this.renderOptions = {\r\n      ambientLight: [0.2, 0.2, 0.2],\r\n      directionalLight: {\r\n        color: [1.0, 1.0, 1.0],\r\n        direction: [-1.0, 1.0, 0.0]\r\n      },\r\n      pointLight: {\r\n        color: [1.0, 1.0, 1.0],\r\n        position: [1.0, -1.0, 0.0],\r\n        brightness: 25.0\r\n      },\r\n      cameraPos: [0.0, 0.0, 0.0],\r\n      lightingModel: 0\r\n    };\r\n    this.options = [\r\n      {\r\n        description: 'Textured cube with diffuse map only with your choice of lighting',\r\n        type: 'description'\r\n      },\r\n      {\r\n        name: 'Lighting Model',\r\n        id: 'lightingModel',\r\n        type: 'select',\r\n        options: ['Unlit', 'Vertex Lighting', 'Fragment Lighting'],\r\n        value: this.renderOptions.lightingModel\r\n      }\r\n    ];\r\n    this.credits = [\r\n      'Texture from MDN WebGL Tutorial',\r\n      'link:https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Tutorial'\r\n    ];\r\n  }\r\n\r\n  setOption(option, value) {\r\n    option.value = Number(value);\r\n    this.renderOptions[option.id] = option.value;\r\n  }\r\n\r\n  initScene() {\r\n    const gl = this.gl;\r\n    const model = new TexturedCubeModel(gl);\r\n    this.scene = {\r\n      actors: [\r\n        {\r\n          model,\r\n          location: [0.0, 0.0, -6.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 1.0\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.7\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      camera: [0.0, 0.0, 0.0]\r\n    };\r\n  }\r\n\r\n  drawScene(deltaTime) {\r\n    const gl = this.gl;\r\n    const scene = this.scene;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 100.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, scene.camera);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      this._renderActor(projectionMatrix, viewMatrix, actor);\r\n      this._animateActor(deltaTime, actor);\r\n    }\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      mat4.rotate(modelMatrix, modelMatrix, rotation.angle, rotation.axis);\r\n    }\r\n\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix, this.renderOptions);\r\n  }\r\n\r\n  _animateActor(deltaTime, actor) {\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      rotation.angle += deltaTime * rotation.speed;\r\n    }\r\n  }\r\n}\r\n\r\nexport default TextureScene;\r\n","import { degreesToRadians } from './utility';\r\n\r\nconst _directions = [\r\n  { x: -1, y: 0 },\r\n  { x: 0, y: -1 },\r\n  { x: 1, y: 0 },\r\n  { x: 0, y: 1 }\r\n];\r\n\r\nexport function generateMaze(width, height, windiness = 0.8) {\r\n  const carve = (pos) => {\r\n    data[pos.y][pos.x] = 0;\r\n  }\r\n\r\n  const canCarve = (pos, dir) => {\r\n    if (!isInBounds(addDir(pos, dir, 3))) {\r\n      return false;\r\n    }\r\n    const nxt = addDir(pos, dir, 2);\r\n    return data[nxt.y][nxt.x] === 1;\r\n  }\r\n\r\n  const isInBounds = (pos) => {\r\n    if (pos.x < 0 || pos.y < 0 || pos.x >= width || pos.y >= height) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  const addDir = (pos, dir, len) => {\r\n    return {\r\n      x: pos.x + dir.x * len,\r\n      y: pos.y + dir.y * len\r\n    }\r\n  }\r\n\r\n  const data = [];\r\n  for (let y = 0; y < height; y++) {\r\n    data.push(new Array(width).fill(1));\r\n  }\r\n\r\n  const start = { x: 1, y: 1 };\r\n  const cells = [];\r\n  let lastDir;\r\n  carve(start);\r\n  cells.push(start);\r\n  while (cells.length > 0) {\r\n    const cell = cells[cells.length - 1];\r\n    const posCells = [];\r\n    for (let i = 0; i < _directions.length; i++) {\r\n      const dir = _directions[i];\r\n      if (canCarve(cell, dir)) {\r\n        posCells.push(dir);\r\n      }\r\n    }\r\n    if (posCells.length > 0) {\r\n      let dir;\r\n      if (posCells.includes(lastDir) && Math.random() > windiness) {\r\n        dir = lastDir;\r\n      } else {\r\n        dir = posCells[Math.floor(Math.random() * posCells.length)];\r\n      }\r\n      carve(addDir(cell, dir, 1));\r\n      carve(addDir(cell, dir, 2));\r\n      cells.push(addDir(cell, dir, 2));\r\n      lastDir = dir;\r\n    } else {\r\n      cells.pop();\r\n      lastDir = null;\r\n    }\r\n  }\r\n  return {\r\n    width,\r\n    height,\r\n    data\r\n  };\r\n}\r\n\r\nexport function generateDungeon(width, height, windiness = 0.8) {\r\n  const regions = [];\r\n  let region = 0;\r\n\r\n  const data = [];\r\n  for (let y = 0; y < height; y++) {\r\n    data.push(new Array(width).fill(1));\r\n  }\r\n\r\n  const incrementRegion = () => {\r\n    region++;\r\n  }\r\n\r\n  const carveRegion = (data, pos, value) => {\r\n    data[pos.y][pos.x] = value;\r\n    regions[pos.y][pos.x] = region;\r\n  }\r\n\r\n  const my = data.length;\r\n  const mx = data[0].length;\r\n  for (let y = 0; y < my; y++) {\r\n    regions.push(Array(mx).fill(0))\r\n  }\r\n\r\n  _addRooms(data, mx, my, incrementRegion, carveRegion, 256, 4);\r\n\r\n  for (let y = 1; y < my; y += 2) {\r\n    for (let x = 1; x < mx; x += 2) {\r\n      if (data[y][x] !== 1) {\r\n        continue;\r\n      }\r\n\r\n      region++;\r\n\r\n      _createMaze(data, carveRegion, { x, y }, windiness);\r\n    }\r\n  }\r\n\r\n  _connectRegions(data, mx, my, region, regions);\r\n\r\n  _removeDeadEnds(data, mx, my);\r\n\r\n  return {\r\n    width,\r\n    height,\r\n    data\r\n  };\r\n}\r\n\r\nexport function getMazeStartLocation(map) {\r\n  const { width, height, data } = map;\r\n  const isSolid = (x, y) => {\r\n    if (x < 0 || x >= width || y < 0 || y >= height) {\r\n      return true;\r\n    }\r\n    if (data[y][x] === 1) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  const ofs_x = -width / 2;\r\n  const ofs_y = -height / 2;\r\n  for (let y = 0; y < height; y++) {\r\n    for (let x = 0; x < width; x++) {\r\n      if (data[y][x] !== 1) {\r\n        let angle = 0.0;\r\n        const matrix = [];\r\n        for (let r = -1; r < 2; r++) {\r\n          for (let c = -1; c < 2; c++) {\r\n            if (isSolid(x + c, y + r)) {\r\n              matrix.push('1');\r\n            } else {\r\n              matrix.push('0');\r\n            }\r\n          }\r\n        }\r\n        let tx, ty;\r\n        if (matrix[0] === '0') {\r\n          tx = x + 1;\r\n          ty = y + 1;\r\n          angle = -45.0;\r\n        } else if (matrix[2] === '0') {\r\n          tx = x - 1;\r\n          ty = y + 1;\r\n          angle = 45.0;\r\n        } else if (matrix[6] === '0') {\r\n          tx = x + 1;\r\n          ty = y - 1;\r\n          angle = -225.0;\r\n        } else if (matrix[8] === '0') {\r\n          tx = x - 1;\r\n          ty = y - 1;\r\n          angle = 225.0;\r\n        } else if (matrix[3] === '0') {\r\n          tx = x - 1;\r\n          ty = y;\r\n          angle = 90.0;\r\n        } else if (matrix[5] === '0') {\r\n          tx = x + 1;\r\n          ty = y;\r\n          angle = -90.0;\r\n        } else if (matrix[7] === '0') {\r\n          tx = x;\r\n          ty = y + 1;\r\n          angle = 180.0;\r\n        } else {\r\n          tx = x;\r\n          ty = y - 1;\r\n          angle = 0.0;\r\n        }\r\n        return { location: [x + ofs_x + 0.5, 0.5, y + ofs_y + 0.5], angle: degreesToRadians(angle), square: { x, y }, nextSquare: { x: tx, y: ty } };\r\n      }\r\n    }\r\n  }\r\n  return { location: [0.0, 0.5, 0.0] };\r\n}\r\n\r\nexport function getMazeBoundingSquares(map) {\r\n  const { width, height, data } = map;\r\n  const mapBounds = [];\r\n  const ofs_x = -width / 2;\r\n  const ofs_y = -height / 2;\r\n  for (let y = 0; y < height; y++) {\r\n    for (let x = 0; x < width; x++) {\r\n      if (data[y][x] === 1) {\r\n        mapBounds.push({ x1: x + ofs_x, y1: y + ofs_y, x2: x + ofs_x + 1, y2: y + ofs_y + 1 });\r\n      }\r\n    }\r\n  }\r\n  return mapBounds;\r\n}\r\n\r\nexport function getMazeSquareCenter(map, x, y, z) {\r\n  const { width, height } = map;\r\n  const ofs_x = -width / 2;\r\n  const ofs_y = -height / 2;\r\n  return [x + ofs_x + 0.5, z, y + ofs_y + 0.5]\r\n}\r\n\r\nfunction _addRooms(data, mx, my, incrementRegion, carveRegion, numRoomTries, roomExtraSize) {\r\n  const rooms = [];\r\n  for (let i = 0; i < numRoomTries; i++) {\r\n    const size = (_range(1, 3 + roomExtraSize) << 1) + 1;\r\n    let rectangularity = _range(0, 1 + size >> 1) << 1;\r\n    let width = size;\r\n    let height = size;\r\n    if (_range(0, 1) === 0) {\r\n      width += rectangularity;\r\n    } else {\r\n      height += rectangularity;\r\n    }\r\n    let x = (_range(0, (mx - width - 1) >> 1) << 1) + 1;\r\n    let y = (_range(0, (my - height - 1) >> 1) << 1) + 1;\r\n    if (x + width > mx - 1 || y + height > my - 1 || width >= mx / 2 || height >= my / 2) {\r\n      continue;\r\n    }\r\n    const room = { x, y, width, height };\r\n    let overlaps = false;\r\n    for (let j = 0; j < rooms.length; j++) {\r\n      const other = rooms[j];\r\n      if (_isOverlapped(room, other)) {\r\n        overlaps = true;\r\n        break;\r\n      }\r\n    }\r\n    if (overlaps) {\r\n      continue;\r\n    }\r\n    rooms.push(room);\r\n    incrementRegion();\r\n    for (let xOffset = 0; xOffset < width; xOffset++) {\r\n      for (let yOffset = 0; yOffset < height; yOffset++) {\r\n        carveRegion(data, { x: x + xOffset, y: y + yOffset }, 2);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction _createMaze(data, carveRegion, start, windiness) {\r\n  const my = data.length;\r\n  const mx = data[0].length;\r\n  const cells = [];\r\n  let lastDir;\r\n  carveRegion(data, start, 0);\r\n  data[start.y][start.x] = 0;\r\n  cells.push(start);\r\n  while (cells.length > 0) {\r\n    const cell = cells[cells.length - 1];\r\n    const posCells = [];\r\n    for (let i = 0; i < _directions.length; i++) {\r\n      const dir = _directions[i];\r\n      if (_canCarve(data, mx, my, cell, dir)) {\r\n        posCells.push(dir);\r\n      }\r\n    }\r\n    if (posCells.length > 0) {\r\n      let dir;\r\n      if (posCells.includes(lastDir) && Math.random() > windiness) {\r\n        dir = lastDir;\r\n      } else {\r\n        dir = posCells[Math.floor(Math.random() * posCells.length)];\r\n      }\r\n      const c1 = _addDir(cell, dir, 1);\r\n      const c2 = _addDir(cell, dir, 2);\r\n      carveRegion(data, c1, 0);\r\n      carveRegion(data, c2, 0);\r\n      cells.push(_addDir(cell, dir, 2));\r\n      lastDir = dir;\r\n    } else {\r\n      cells.pop();\r\n      lastDir = null;\r\n    }\r\n  }\r\n}\r\n\r\nfunction _connectRegions(data, mx, my, region, regions) {\r\n  let connectors = [];\r\n  for (let y = 1; y < my - 1; y++) {\r\n    for (let x = 1; x < mx - 1; x++) {\r\n      if (data[y][x] !== 1) {\r\n        continue;\r\n      }\r\n      const connectedRegions = [];\r\n      for (let i = 0; i < _directions.length; i++) {\r\n        const dir = _directions[i];\r\n        const region = regions[y + dir.y][x + dir.x];\r\n        if (region !== 0 && !connectedRegions.includes(region)) {\r\n          connectedRegions.push(region);\r\n        }\r\n      }\r\n      if (connectedRegions.length < 2) {\r\n        continue;\r\n      }\r\n      connectors.push({ x, y, regions: connectedRegions })\r\n    }\r\n  }\r\n  const merged = [0];\r\n  let openRegions = [];\r\n  for (var i = 1; i <= region; i++) {\r\n    merged.push(i);\r\n    openRegions.push(i);\r\n  }\r\n  while (openRegions.length > 1) {\r\n    const index = _range(0, connectors.length - 1)\r\n    const connector = connectors[index];\r\n    _carve(data, { x: connector.x, y: connector.y });\r\n    const regions = connector.regions.map((region) => merged[region]);\r\n    const dest = regions[0];\r\n    const sources = regions.slice(1);\r\n    for (let i = 0; i <= region; i++) {\r\n      if (sources.includes(i)) {\r\n        merged[i] = dest;\r\n      }\r\n    }\r\n    openRegions = openRegions.filter((region) => {\r\n      return !sources.includes(region);\r\n    });\r\n    connectors = connectors.filter((con) => {\r\n      if (Math.abs(con.x - connector.x) <= 1 && Math.abs(con.y - connector.y) <= 1) {\r\n        return false;\r\n      }\r\n      con.regions = con.regions.map((region) => merged[region]);\r\n      for (let i = 1; i < con.regions.length; i++) {\r\n        if (con.regions[i] !== con.regions[0]) {\r\n          return true;\r\n        }\r\n      }\r\n      if (_range(0, 99) === 0) {\r\n        _carve(data, { x: con.x, y: con.y });\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n}\r\n\r\nfunction _removeDeadEnds(data, mx, my) {\r\n  let done = false;\r\n  while (!done) {\r\n    done = true;\r\n    for (let y = 1; y < my - 1; y++) {\r\n      for (let x = 1; x < mx - 1; x++) {\r\n        if (data[y][x] === 1) {\r\n          continue;\r\n        }\r\n        let exits = 0;\r\n        for (let i = 0; i < _directions.length; i++) {\r\n          const dir = _directions[i];\r\n          if (data[y + dir.y][x + dir.x] !== 1) {\r\n            exits++;\r\n          }\r\n        }\r\n        if (exits !== 1) {\r\n          continue;\r\n        }\r\n        done = false;\r\n        _fill(data, { x, y });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction _carve(data, pos) {\r\n  data[pos.y][pos.x] = 0;\r\n}\r\n\r\nfunction _fill(data, pos) {\r\n  data[pos.y][pos.x] = 1;\r\n}\r\n\r\nfunction _canCarve(data, mx, my, pos, dir) {\r\n  if (!_isInBounds(mx, my, _addDir(pos, dir, 3))) {\r\n    return false;\r\n  }\r\n  const nxt = _addDir(pos, dir, 2);\r\n  return data[nxt.y][nxt.x] === 1;\r\n}\r\n\r\nfunction _isInBounds(mx, my, pos) {\r\n  if (pos.x < 0 || pos.y < 0 || pos.x >= mx || pos.y >= my) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction _addDir(pos, dir, len) {\r\n  return {\r\n    x: pos.x + dir.x * len,\r\n    y: pos.y + dir.y * len\r\n  }\r\n}\r\n\r\nfunction _range(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction _isOverlapped(pri, sec) {\r\n  if (pri.x > sec.x + sec.width || sec.x > pri.x + pri.width) {\r\n    return false;\r\n  }\r\n  if (pri.y > sec.y + sec.height || sec.y > pri.y + pri.height) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n","import Model from './Model';\r\n\r\nclass MazeModel extends Model {\r\n  constructor(gl, maze) {\r\n    super(gl);\r\n    this.gl = gl;\r\n    this.draw = this.draw.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this._geometry = this._geometry.bind(this);\r\n    this.maze = maze;\r\n    this._initModel({\r\n      gl,\r\n      geometry: this._geometry,\r\n      bufferCount: 3,\r\n      shaders: [\r\n        {\r\n          vertex: 'shaders/color_L/vertex.glsl',\r\n          fragment: 'shaders/color_L/fragment.glsl'\r\n        },\r\n        {\r\n          vertex: 'shaders/material_L/vertex.glsl',\r\n          fragment: 'shaders/material_L/fragment.glsl'\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix, options) {\r\n    const { shaderIndex, lights, material, materials, ambientLight, directionalLight, pointLight, lightingModel } = options;\r\n    this._drawModel({\r\n      projectionMatrix,\r\n      viewMatrix,\r\n      modelMatrix,\r\n      shaderIndex,\r\n      lights,\r\n      material,\r\n      materials,\r\n      ambientLight,\r\n      directionalLight,\r\n      pointLight,\r\n      lightingModel\r\n    });\r\n  }\r\n\r\n  update(maze) {\r\n    this.maze = maze;\r\n    this._updateModel(this._geometry);\r\n  }\r\n\r\n  _geometry({ addSquare }) {\r\n    const maze = this.maze;\r\n\r\n    const floorColor = [.2, .2, .2];\r\n    const ceilingColor = [.7, .7, .7];\r\n    const wallColor_Back = [.5, 0, .5];\r\n    const wallColor_Front = [0, .5, 0];\r\n    const wallColor_Left = [.5, 0, 0];\r\n    const wallColor_Right = [0, .0, .5];\r\n\r\n    const ofs_x = -maze.width / 2;\r\n    const ofs_y = -maze.height / 2;\r\n    for (let y = 0; y < maze.height; y++) {\r\n      for (let x = 0; x < maze.width; x++) {\r\n        const left = x + ofs_x;\r\n        const right = left + 1;\r\n        const back = y + ofs_y;\r\n        const front = back + 1;\r\n        const top = 1;\r\n        const bottom = 0;\r\n\r\n        const f0 = [left, top, front];\r\n        const f1 = [right, top, front];\r\n        const f2 = [right, bottom, front];\r\n        const f3 = [left, bottom, front];\r\n        const b0 = [left, top, back];\r\n        const b1 = [right, top, back];\r\n        const b2 = [right, bottom, back];\r\n        const b3 = [left, bottom, back];\r\n\r\n        if (maze.data[y][x] !== 1) {\r\n          addSquare(b2, b3, f3, f2, { color: floorColor, bufferIndex: 1 });\r\n        } else {\r\n          addSquare(b1, b0, f0, f1, { color: ceilingColor, bufferIndex: 2 });\r\n\r\n          if (y === 0 || maze.data[y - 1][x] !== 1) {\r\n            addSquare(b0, b1, b2, b3, { color: wallColor_Back });\r\n          }\r\n\r\n          if (x === 0 || maze.data[y][x - 1] !== 1) {\r\n            addSquare(f0, b0, b3, f3, { color: wallColor_Left });\r\n          }\r\n\r\n          if (y === maze.height - 1 || maze.data[y + 1][x] !== 1) {\r\n            addSquare(f1, f0, f3, f2, { color: wallColor_Front });\r\n          }\r\n\r\n          if (x === maze.width - 1 || maze.data[y][x + 1] !== 1) {\r\n            addSquare(b1, f1, f2, b2, { color: wallColor_Right });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default MazeModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen, degreesToRadians, getMaterialList, getMaterial } from '../lib/utility';\r\nimport { generateMaze, generateDungeon } from '../lib/maze';\r\nimport MazeModel from '../models/MazeModel';\r\n\r\nclass MazeScene {\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n    this.setOption = this.setOption.bind(this);\r\n    this.initScene = this.initScene.bind(this);\r\n    this.createMaze = this.createMaze.bind(this);\r\n    this.createDungeon = this.createDungeon.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n    this.totalDelta = 0.0;\r\n\r\n    this.renderOptions = {\r\n      lights: [\r\n        {\r\n          position: [10.0, -10.0, 0.0],\r\n          ambient: [0.2, 0.2, 0.2],\r\n          diffuse: [0.5, 0.5, 0.5],\r\n          specular: [0.9, 0.9, 0.9]\r\n        },\r\n        {\r\n          position: [-10.0, 10.0, 0.0],\r\n          ambient: [0.2, 0.2, 0.2],\r\n          diffuse: [0.5, 0.5, 0.5],\r\n          specular: [0.9, 0.9, 0.9]\r\n        }\r\n      ],\r\n      ambientLight: [0.2, 0.2, 0.2],\r\n      directionalLight: {\r\n        color: [1.0, 1.0, 1.0],\r\n        direction: [-1.0, -1.0, 0.0]\r\n      },\r\n      pointLight: {\r\n        color: [1.0, 1.0, 1.0]\r\n      },\r\n      useMaterials: false,\r\n      materials: new Array(3).fill(undefined),\r\n      lightingModel: 0\r\n    };\r\n\r\n    this.options = [\r\n      {\r\n        description: 'Random maze/dungeon geometry with colors or materials using Phong shading with your choice of lighting',\r\n        type: 'description'\r\n      },\r\n      {\r\n        name: 'Use Materials',\r\n        id: 'useMaterials',\r\n        type: 'bool',\r\n        value: false\r\n      },\r\n      {\r\n        name: 'Wall Material',\r\n        type: 'select',\r\n        options: getMaterialList()\r\n      },\r\n      {\r\n        name: 'Floor Material',\r\n        type: 'select',\r\n        options: getMaterialList()\r\n      },\r\n      {\r\n        name: 'Ceiling Material',\r\n        type: 'select',\r\n        options: getMaterialList()\r\n      },\r\n      {\r\n        name: 'Lighting Model',\r\n        id: 'lightingModel',\r\n        type: 'select',\r\n        options: ['Unlit', 'Vertex Lighting', 'Fragment Lighting'],\r\n        value: this.renderOptions.lightingModel\r\n      },\r\n      {\r\n        name: 'Create Maze',\r\n        type: 'function',\r\n        function: this.createMaze\r\n      },\r\n      {\r\n        name: 'Create Dungeon',\r\n        type: 'function',\r\n        function: this.createDungeon\r\n      }\r\n    ];\r\n\r\n    this.setOption(this.options[2], 0);\r\n    this.setOption(this.options[3], 9);\r\n    this.setOption(this.options[4], 10);\r\n\r\n    this.credits = [\r\n      'Maze generation is based on this article',\r\n      'link:https://journal.stuffwithstuff.com/2014/12/21/rooms-and-mazes/'\r\n    ]\r\n  }\r\n\r\n  setOption(option, value) {\r\n    option.value = Number(value);\r\n    if (option.id) {\r\n      this.renderOptions[option.id] = option.value;\r\n    }\r\n    if (option.name === 'Wall Material') {\r\n      const materialName = option.options[option.value];\r\n      this.renderOptions.materials[0] = getMaterial(materialName);\r\n    }\r\n    if (option.name === 'Floor Material') {\r\n      const materialName = option.options[option.value];\r\n      this.renderOptions.materials[1] = getMaterial(materialName);\r\n    }\r\n    if (option.name === 'Ceiling Material') {\r\n      const materialName = option.options[option.value];\r\n      this.renderOptions.materials[2] = getMaterial(materialName);\r\n    }\r\n  }\r\n\r\n  initScene() {\r\n    const gl = this.gl;\r\n    const { size, maze } = this._generateMaze();\r\n\r\n    const model = new MazeModel(gl, maze);\r\n    this.scene = {\r\n      actors: [\r\n        {\r\n          model,\r\n          location: [0.0, 0.0, -2.0 * size],\r\n          rotation: { angle: 0.0, axis: [0, 1, 0], speed: 0.5 }\r\n        }\r\n      ],\r\n      camera: [0.0, 0.0, 0.0]\r\n    };\r\n    this.renderOptions.pointLight.position = [0.0, size, -2.0 * size];\r\n    this.renderOptions.pointLight.brightness = size * size;\r\n  }\r\n\r\n  createMaze() {\r\n    const { size, maze } = this._generateMaze();\r\n    this.scene.actors[0].location = [0.0, 0.0, -2.0 * size];\r\n    this.scene.actors[0].model.update(maze);\r\n    this.renderOptions.pointLight.position = [0.0, 10.0, -2.0 * size];\r\n  }\r\n\r\n  _generateMaze() {\r\n    const size = Math.floor(Math.random() * 35) * 2 + 11;\r\n    const maze = generateMaze(size, size);\r\n    return { size, maze };\r\n  }\r\n\r\n  createDungeon() {\r\n    const { size, maze } = this._generateDungeon();\r\n    this.scene.actors[0].location = [0.0, 0.0, -2.0 * size];\r\n    this.scene.actors[0].model.update(maze);\r\n    this.renderOptions.pointLight.position = [0.0, 10.0, -2.0 * size];\r\n  }\r\n\r\n  _generateDungeon() {\r\n    const size = Math.floor(Math.random() * 35) * 2 + 11;\r\n    const maze = generateDungeon(size, size);\r\n    return { size, maze };\r\n  }\r\n\r\n  drawScene(deltaTime) {\r\n    const gl = this.gl;\r\n    const scene = this.scene;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 500.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, scene.camera);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      this._renderActor(projectionMatrix, viewMatrix, actor);\r\n      this._animateActor(deltaTime, actor);\r\n    }\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    mat4.rotate(modelMatrix, modelMatrix, degreesToRadians(45), [1, 0, 0]);\r\n    mat4.rotate(modelMatrix, modelMatrix, actor.rotation.angle, actor.rotation.axis);\r\n\r\n    if (this.renderOptions.useMaterials) {\r\n      this.renderOptions.shaderIndex = 1;\r\n    } else {\r\n      this.renderOptions.shaderIndex = 0;\r\n    }\r\n\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix, this.renderOptions);\r\n  }\r\n\r\n  _animateActor(deltaTime, actor) {\r\n    actor.rotation.angle += deltaTime * actor.rotation.speed;\r\n  }\r\n}\r\n\r\nexport default MazeScene;\r\n","import Model from './Model';\r\n\r\nclass BrickWallModel extends Model {\r\n  constructor(gl) {\r\n    super(gl);\r\n    this.gl = gl;\r\n    this.draw = this.draw.bind(this);\r\n    this._initModel({\r\n      gl,\r\n      geometry: this._geometry,\r\n      texture: {\r\n        diffuse: 'images/Brick_Wall_017_basecolor.jpg',\r\n        normal: 'images/Brick_Wall_017_normal.jpg',\r\n        height: 'images/Brick_Wall_017_height.png',\r\n        occlusion: 'images/Brick_Wall_017_ambientOcclusion.jpg'\r\n      },\r\n      shader: {\r\n        vertex: 'shaders/texture_LDNOP/vertex.glsl',\r\n        fragment: 'shaders/texture_LDNOP/fragment.glsl'\r\n      }\r\n    });\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix, options) {\r\n    const {\r\n      showDiffuseMap,\r\n      showNormalMap,\r\n      showAmbientOcclusionMap,\r\n      showParallaxMap,\r\n      parallaxHeightScale,\r\n      parallaxSteps,\r\n      parallaxOcclusionMapping,\r\n    } = options;\r\n    this._drawModel({\r\n      projectionMatrix,\r\n      viewMatrix,\r\n      modelMatrix,\r\n      showDiffuseMap,\r\n      showNormalMap,\r\n      showAmbientOcclusionMap,\r\n      showParallaxMap,\r\n      parallaxHeightScale,\r\n      parallaxSteps,\r\n      parallaxOcclusionMapping,\r\n      ambientLight: [0.3, 0.3, 0.3],\r\n      directionalLight: {\r\n        color: [0.4, 0.4, 0.4],\r\n        direction: [0.0, -1.0, 1.0]\r\n      },\r\n      pointLight: {\r\n        color: [1.0, 1.0, 1.0],\r\n        position: [0.0, 0.0, 0.0],\r\n        brightness: 15.0\r\n      },\r\n      cameraPos: [0.0, 0.0, 0.0]\r\n    });\r\n  }\r\n\r\n  _geometry({ addSquare }) {\r\n    const f0 = [-1, -1, 1];\r\n    const f1 = [1, -1, 1];\r\n    const f2 = [1, 1, 1];\r\n    const f3 = [-1, 1, 1];\r\n    const b0 = [-1, -1, -1];\r\n    const b1 = [1, -1, -1];\r\n    const b2 = [1, 1, -1];\r\n    const b3 = [-1, 1, -1];\r\n    addSquare(f0, f1, f2, f3);  // front\r\n    addSquare(b1, b0, b3, b2);  // back\r\n    addSquare(b0, f0, f3, b3);  // left\r\n    addSquare(f1, b1, b2, f2);  // right\r\n    addSquare(b0, b1, f1, f0);  // top\r\n    addSquare(b2, b3, f3, f2);  // bottom\r\n  }\r\n}\r\n\r\nexport default BrickWallModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen } from '../lib/utility'\r\nimport BrickWallModel from '../models/BrickWallModel';\r\n\r\nclass BrickWallScene {\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n    this.setOption = this.setOption.bind(this);\r\n    this.initScene = this.initScene.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n    this.renderOptions = {\r\n      showDiffuseMap: true,\r\n      showNormalMap: true,\r\n      showAmbientOcclusionMap: true,\r\n      showParallaxMap: true,\r\n      parallaxHeightScale: 0.04,\r\n      parallaxSteps: 32,\r\n      parallaxOcclusionMapping: true\r\n    };\r\n    this.options = [\r\n      {\r\n        description: 'Brick cube with diffuse, normal, ambient occlusion, and parallax maps',\r\n        type: 'description'\r\n      },\r\n      {\r\n        name: 'Show Diffuse Map',\r\n        id: 'showDiffuseMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Show Normal Map',\r\n        id: 'showNormalMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Show Ambient Occlusion Map',\r\n        id: 'showAmbientOcclusionMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Show Parallax Map',\r\n        id: 'showParallaxMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Parallax Height Scale',\r\n        id: 'parallaxHeightScale',\r\n        type: 'float',\r\n        min: 0.0,\r\n        max: 0.1\r\n      },\r\n      {\r\n        name: 'Parallax Steps',\r\n        id: 'parallaxSteps',\r\n        type: 'int',\r\n        min: 0,\r\n        max: 32\r\n      },\r\n      {\r\n        name: 'Use Parallax Occlusion Mapping',\r\n        id: 'parallaxOcclusionMapping',\r\n        type: 'bool'\r\n      }\r\n    ];\r\n    for (let i = 0; i < this.options.length; i++) {\r\n      this.options[i].value = this.renderOptions[this.options[i].id];\r\n    }\r\n    this.credits = [\r\n      'Textures created by João Paulo',\r\n      'link:https://3dtextures.me/about/'\r\n    ];\r\n  }\r\n\r\n  setOption(option, value) {\r\n    option.value = Number(value);\r\n    this.renderOptions[option.id] = option.value;\r\n  }\r\n\r\n  initScene() {\r\n    const gl = this.gl;\r\n    const model = new BrickWallModel(gl);\r\n    this.scene = {\r\n      actors: [\r\n        {\r\n          model,\r\n          location: [0.0, 0.0, -5.5],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.4\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.2\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      camera: [0.0, 0.0, 0.0]\r\n    };\r\n  }\r\n\r\n  drawScene(deltaTime) {\r\n    const gl = this.gl;\r\n    const scene = this.scene;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 100.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, scene.camera);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      this._renderActor(projectionMatrix, viewMatrix, actor);\r\n      this._animateActor(deltaTime, actor);\r\n    }\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      mat4.rotate(modelMatrix, modelMatrix, rotation.angle, rotation.axis);\r\n    }\r\n\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix, this.renderOptions);\r\n  }\r\n\r\n  _animateActor(deltaTime, actor) {\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      rotation.angle += deltaTime * rotation.speed;\r\n    }\r\n  }\r\n}\r\n\r\nexport default BrickWallScene;\r\n","import Model from './Model';\r\nimport { getShape } from '../lib/utility';\r\n\r\nclass MaterialModel extends Model {\r\n  constructor(gl, shapeName) {\r\n    super(gl);\r\n    this.gl = gl;\r\n    this.draw = this.draw.bind(this);\r\n    this._initModel({\r\n      gl,\r\n      geometry: ({ addFaces }) => {\r\n        const shape = getShape(shapeName);\r\n        addFaces(shape.vertices, shape.faces);\r\n      },\r\n      shader: {\r\n        vertex: 'shaders/material_L/vertex.glsl',\r\n        fragment: 'shaders/material_L/fragment.glsl'\r\n      }\r\n    });\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix, options) {\r\n    const { cameraPos, lights, material, lightingModel } = options;\r\n    this._drawModel({\r\n      projectionMatrix,\r\n      viewMatrix,\r\n      modelMatrix,\r\n      cameraPos,\r\n      lights,\r\n      material,\r\n      lightingModel\r\n    });\r\n  }\r\n}\r\n\r\nexport default MaterialModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen, getMaterialList, getMaterial } from '../lib/utility'\r\nimport MaterialModel from '../models/MaterialModel';\r\n\r\nclass MaterialScene {\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n    this.setOption = this.setOption.bind(this);\r\n    this.initScene = this.initScene.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n    this.renderOptions = {\r\n      lights: [\r\n        {\r\n          position: [10.0, -10.0, 0.0],\r\n          ambient: [0.2, 0.2, 0.2],\r\n          diffuse: [0.5, 0.5, 0.5],\r\n          specular: [0.9, 0.9, 0.9]\r\n        },\r\n        {\r\n          position: [-10.0, 10.0, 0.0],\r\n          ambient: [0.2, 0.2, 0.2],\r\n          diffuse: [0.5, 0.5, 0.5],\r\n          specular: [0.9, 0.9, 0.9]\r\n        }\r\n      ],\r\n      materials: new Array(3).fill(0),\r\n      lightingModel: 2\r\n    };\r\n    const materialList = getMaterialList();\r\n    this.options = [\r\n      {\r\n        description: 'Various solid geometries with various materials using Phong shading',\r\n        type: 'description'\r\n      },\r\n      {\r\n        name: 'Material 1',\r\n        type: 'select',\r\n        options: materialList\r\n      },\r\n      {\r\n        name: 'Material 2',\r\n        type: 'select',\r\n        options: materialList\r\n      },\r\n      {\r\n        name: 'Material 3',\r\n        type: 'select',\r\n        options: materialList\r\n      }\r\n    ];\r\n\r\n    this.setOption(this.options[1], 8);\r\n    this.setOption(this.options[2], 10);\r\n    this.setOption(this.options[3], 2);\r\n  }\r\n\r\n  setOption(option, value) {\r\n    option.value = Number(value);\r\n    if (option.id) {\r\n      this.renderOptions[option.id] = option.value;\r\n    }\r\n    if (option.name === 'Material 1') {\r\n      const materialName = option.options[option.value];\r\n      this.renderOptions.materials[0] = getMaterial(materialName);\r\n    }\r\n    else if (option.name === 'Material 2') {\r\n      const materialName = option.options[option.value];\r\n      this.renderOptions.materials[1] = getMaterial(materialName);\r\n    }\r\n    else if (option.name === 'Material 3') {\r\n      const materialName = option.options[option.value];\r\n      this.renderOptions.materials[2] = getMaterial(materialName);\r\n    }\r\n  }\r\n\r\n  initScene() {\r\n    const gl = this.gl;\r\n    const model4 = new MaterialModel(gl, 'tetrahedron');\r\n    const model6 = new MaterialModel(gl, 'cube');\r\n    const model8 = new MaterialModel(gl, 'octahedron');\r\n    const model10 = new MaterialModel(gl, 'pentagonaltrapezohedron');\r\n    const model12 = new MaterialModel(gl, 'dodecahedron');\r\n    const model20 = new MaterialModel(gl, 'icosahedron');\r\n\r\n    this.scene = {\r\n      actors: [\r\n        {\r\n          model: model4,\r\n          materialIndex: 1,\r\n          location: [-3.75, 0.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model6,\r\n          materialIndex: 1,\r\n          location: [-2.25, 0.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model8,\r\n          materialIndex: 1,\r\n          location: [-0.75, 0.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model10,\r\n          materialIndex: 1,\r\n          location: [0.75, 0.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model12,\r\n          materialIndex: 1,\r\n          location: [2.25, 0.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model20,\r\n          materialIndex: 1,\r\n          location: [3.75, 0.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model4,\r\n          materialIndex: 0,\r\n          location: [-3.75, 2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model6,\r\n          materialIndex: 0,\r\n          location: [-2.25, 2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model8,\r\n          materialIndex: 0,\r\n          location: [-0.75, 2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model10,\r\n          materialIndex: 0,\r\n          location: [0.75, 2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model12,\r\n          materialIndex: 0,\r\n          location: [2.25, 2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model20,\r\n          materialIndex: 0,\r\n          location: [3.75, 2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model4,\r\n          materialIndex: 2,\r\n          location: [-3.75, -2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model6,\r\n          materialIndex: 2,\r\n          location: [-2.25, -2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model8,\r\n          materialIndex: 2,\r\n          location: [-0.75, -2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model10,\r\n          materialIndex: 2,\r\n          location: [0.75, -2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model12,\r\n          materialIndex: 2,\r\n          location: [2.25, -2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model20,\r\n          materialIndex: 2,\r\n          location: [3.75, -2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      camera: [0.0, 0.0, 0.0]\r\n    };\r\n  }\r\n\r\n  drawScene(deltaTime) {\r\n    const gl = this.gl;\r\n    const scene = this.scene;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 100.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, scene.camera);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    this.renderOptions.cameraPos = scene.camera;\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      this._renderActor(projectionMatrix, viewMatrix, actor);\r\n      this._animateActor(deltaTime, actor);\r\n    }\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      mat4.rotate(modelMatrix, modelMatrix, rotation.angle, rotation.axis);\r\n    }\r\n\r\n    this.renderOptions.material = this.renderOptions.materials[actor.materialIndex]\r\n\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix, this.renderOptions);\r\n  }\r\n\r\n  _animateActor(deltaTime, actor) {\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      rotation.angle += deltaTime * rotation.speed;\r\n    }\r\n  }\r\n}\r\n\r\nexport default MaterialScene;\r\n","export function collideRectangles(r1, r2) {\r\n  if (r1.x2 <= r2.x1 || r1.x1 >= r2.x2 || r1.y2 <= r2.y1 || r1.y1 >= r2.y2) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function collideCircles(cx, cy, radius, tx, ty, targetRadius) {\r\n  const distance = (cx - tx) * (cx - tx) + (cy - ty) * (cy - ty);\r\n  if (distance < (radius + targetRadius) * (radius + targetRadius)) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function collideCircleRectangle(cx, cy, radius, x1, y1, x2, y2) {\r\n  const epsilon = radius / 3.0;\r\n  let type = 0;\r\n  let testX = cx;\r\n  let testY = cy;\r\n  if (cx < x1 - epsilon) {\r\n    type |= 1;\r\n    testX = x1;\r\n  } else if (cx > x2 + epsilon) {\r\n    type |= 1;\r\n    testX = x2;\r\n  }\r\n  if (cy < y1 - epsilon) {\r\n    type |= 2;\r\n    testY = y1;\r\n  } else if (cy > y2 + epsilon) {\r\n    type |= 2;\r\n    testY = y2;\r\n  }\r\n  const distX = cx - testX;\r\n  const distY = cy - testY;\r\n  const distance = (distX * distX) + (distY * distY);\r\n  if (distance <= radius * radius) {\r\n    return type;\r\n  }\r\n  return 0;\r\n}\r\n","import Model from './Model';\r\n\r\nclass RoomModel extends Model {\r\n  constructor(gl, map) {\r\n    super(gl);\r\n    this.gl = gl;\r\n    this.map = map;\r\n    this.draw = this.draw.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this._geometry = this._geometry.bind(this);\r\n    this._initModel({\r\n      gl,\r\n      geometry: this._geometry,\r\n      textures: [\r\n        {\r\n          diffuse: 'images/Brick_Wall_017_basecolor.jpg',\r\n          normal: 'images/Brick_Wall_017_normal.jpg',\r\n          height: 'images/Brick_Wall_017_height.png',\r\n          occlusion: 'images/Brick_Wall_017_ambientOcclusion.jpg'\r\n        },\r\n        {\r\n          diffuse: 'images/Tiles_035_basecolor.jpg',\r\n          normal: 'images/Tiles_035_normal.jpg',\r\n          height: 'images/Tiles_035_height.png',\r\n          occlusion: 'images/Tiles_035_ambientOcclusion.jpg'\r\n        },\r\n        {\r\n          diffuse: 'images/Wood_planks_011_basecolor.jpg',\r\n          normal: 'images/Wood_planks_011_normal.jpg',\r\n          height: 'images/Wood_planks_011_height.png',\r\n          occlusion: 'images/Wood_planks_011_ambientOcclusion.jpg'\r\n        }\r\n      ],\r\n      shader: {\r\n        vertex: 'shaders/texture_LDNOP/vertex.glsl',\r\n        fragment: 'shaders/texture_LDNOP/fragment.glsl'\r\n      }\r\n    });\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix, options) {\r\n    const {\r\n      showDiffuseMap,\r\n      showNormalMap,\r\n      showAmbientOcclusionMap,\r\n      showParallaxMap,\r\n      parallaxHeightScale,\r\n      parallaxSteps,\r\n      parallaxOcclusionMapping,\r\n      ambientLight,\r\n      directionalLight,\r\n      pointLight,\r\n      cameraPos\r\n    } = options;\r\n    this._drawModel({\r\n      projectionMatrix,\r\n      viewMatrix,\r\n      modelMatrix,\r\n      showDiffuseMap,\r\n      showNormalMap,\r\n      showAmbientOcclusionMap,\r\n      showParallaxMap,\r\n      parallaxHeightScale,\r\n      parallaxSteps,\r\n      parallaxOcclusionMapping,\r\n      ambientLight,\r\n      directionalLight,\r\n      pointLight,\r\n      cameraPos\r\n    });\r\n  }\r\n\r\n  update(map) {\r\n    this.map = map;\r\n    this._updateModel(this._geometry);\r\n  }\r\n\r\n  _geometry({ addSquare }) {\r\n    const { width, height, data } = this.map;\r\n\r\n    const check = (x, y) => {\r\n      if (x < 0 || y < 0 || x > width - 1 || y > height - 1) {\r\n        return true;\r\n      }\r\n      if (data[y][x] === 1) {\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const ofs_x = -width / 2;\r\n    const ofs_y = -height / 2;\r\n    for (let y = 0; y < height; y++) {\r\n      for (let x = 0; x < width; x++) {\r\n        const left = x + ofs_x;\r\n        const right = left + 1;\r\n        const back = y + ofs_y;\r\n        const front = back + 1;\r\n        const top = 1;\r\n        const bottom = 0;\r\n\r\n        const f0 = [left, top, front];\r\n        const f1 = [right, top, front];\r\n        const f2 = [right, bottom, front];\r\n        const f3 = [left, bottom, front];\r\n        const b0 = [left, top, back];\r\n        const b1 = [right, top, back];\r\n        const b2 = [right, bottom, back];\r\n        const b3 = [left, bottom, back];\r\n\r\n        const f0h = [left, top + 1, front];\r\n        const f1h = [right, top + 1, front];\r\n        const f2h = [right, bottom + 1, front];\r\n        const f3h = [left, bottom + 1, front];\r\n        const b0h = [left, top + 1, back];\r\n        const b1h = [right, top + 1, back];\r\n        const b2h = [right, bottom + 1, back];\r\n        const b3h = [left, bottom + 1, back];\r\n\r\n        if (data[y][x] === 0) {\r\n          addSquare(b2, b3, f3, f2, { bufferIndex: 1 });\r\n          addSquare(b0, b1, f1, f0, { bufferIndex: 2 });\r\n\r\n          if (y === 0 || data[y - 1][x] === 1) {\r\n            addSquare(b1, b0, b3, b2);\r\n          }\r\n\r\n          if (x === 0 || data[y][x - 1] === 1) {\r\n            addSquare(b0, f0, f3, b3);\r\n          }\r\n\r\n          if (y === height - 1 || data[y + 1][x] === 1) {\r\n            addSquare(f0, f1, f2, f3);\r\n          }\r\n\r\n          if (x === width - 1 || data[y][x + 1] === 1) {\r\n            addSquare(f1, b1, b2, f2);\r\n          }\r\n        }\r\n        else if (data[y][x] === 2) {\r\n          const neighbors = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\r\n          for (let yo = -1; yo < 2; yo++) {\r\n            for (let xo = -1; xo < 2; xo++) {\r\n              neighbors[(yo + 1) * 3 + (xo + 1)] = check(x + xo, y + yo);\r\n            }\r\n          }\r\n\r\n          addSquare(b2, b3, f3, f2, { bufferIndex: 1 });\r\n          addSquare(b0h, b1h, f1h, f0h, { bufferIndex: 2 });\r\n\r\n          if (neighbors[1]) {\r\n            addSquare(b1, b0, b3, b2);\r\n            addSquare(b1h, b0h, b3h, b2h);\r\n          } else if (neighbors[0] && neighbors[2]) {\r\n            addSquare(b1h, b0h, b3h, b2h);\r\n          }\r\n\r\n          if (neighbors[3]) {\r\n            addSquare(b0, f0, f3, b3);\r\n            addSquare(b0h, f0h, f3h, b3h);\r\n          } else if (neighbors[0] && neighbors[6]) {\r\n            addSquare(b0h, f0h, f3h, b3h);\r\n          }\r\n\r\n          if (neighbors[7]) {\r\n            addSquare(f0, f1, f2, f3);\r\n            addSquare(f0h, f1h, f2h, f3h);\r\n          } else if (neighbors[6] && neighbors[8]) {\r\n            addSquare(f0h, f1h, f2h, f3h);\r\n          }\r\n\r\n          if (neighbors[5]) {\r\n            addSquare(f1, b1, b2, f2);\r\n            addSquare(f1h, b1h, b2h, f2h);\r\n          } else if (neighbors[2] && neighbors[8]) {\r\n            addSquare(f1h, b1h, b2h, f2h);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default RoomModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen, pickRandom, getMaterial } from '../lib/utility';\r\nimport { generateMaze, generateDungeon, getMazeBoundingSquares, getMazeStartLocation, getMazeSquareCenter } from '../lib/maze';\r\nimport { collideCircleRectangle, collideCircles } from '../lib/collision';\r\nimport RoomModel from '../models/RoomModel';\r\nimport MaterialModel from '../models/MaterialModel';\r\n\r\nconst shapes = ['tetrahedron', 'cube', 'octahedron', 'dodecahedron', 'icosahedron'];\r\nconst materials = ['gold', 'chrome', 'copper'];\r\n\r\nclass RoomScene {\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n    this.setOption = this.setOption.bind(this);\r\n    this.mouseMovement = this.mouseMovement.bind(this);\r\n    this.keyboardState = this.keyboardState.bind(this);\r\n    this.registerDataChange = this.registerDataChange.bind(this);\r\n    this.forceDataChange = this.forceDataChange.bind(this);\r\n    this.initScene = this.initScene.bind(this);\r\n    this.createMaze = this.createMaze.bind(this);\r\n    this.createDungeon = this.createDungeon.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n    const ambientLight = [0.1, 0.1, 0.1];\r\n    const directionalLight = {\r\n      color: [0.0, 0.0, 0.0],\r\n      direction: [0.0, 0.0, 0.0]\r\n    };\r\n    const pointLight = {\r\n      color: [0.6, 0.6, 0.6],\r\n      brightness: 15.0\r\n    };\r\n    this.renderOptions = {\r\n      showDiffuseMap: true,\r\n      showNormalMap: true,\r\n      showAmbientOcclusionMap: true,\r\n      showParallaxMap: true,\r\n      parallaxHeightScale: 0.02,\r\n      parallaxSteps: 32,\r\n      parallaxOcclusionMapping: true,\r\n      ambientLight,\r\n      directionalLight,\r\n      pointLight,\r\n      lights: [\r\n        {\r\n          ambient: [Math.min(ambientLight[0] * 2.0, 1.0), Math.min(ambientLight[1] * 2.0, 1.0), Math.min(ambientLight[2] * 2.0, 1.0)],\r\n          diffuse: pointLight.color,\r\n          specular: [Math.min(pointLight.color[0] * 2.0, 1.0), Math.min(pointLight.color[1] * 2.0, 1.0), Math.min(pointLight.color[2] * 2.0, 1.0)]\r\n        },\r\n        {\r\n          ambient: [0.0, 0.0, 0.0],\r\n          diffuse: [0.0, 0.0, 0.0],\r\n          specular: [0.0, 0.0, 0.0]\r\n        }\r\n      ],\r\n      lightingModel: 2\r\n    };\r\n    this.options = [\r\n      {\r\n        description: 'Explorable random maze geometry with diffuse, normal, ambient occlusion, and parallax maps',\r\n        type: 'description'\r\n      },\r\n      {\r\n        name: 'Show Diffuse Map',\r\n        id: 'showDiffuseMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Show Normal Map',\r\n        id: 'showNormalMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Show Ambient Occlusion Map',\r\n        id: 'showAmbientOcclusionMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Show Parallax Map',\r\n        id: 'showParallaxMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Parallax Height Scale',\r\n        id: 'parallaxHeightScale',\r\n        type: 'float',\r\n        min: 0.0,\r\n        max: 0.1\r\n      },\r\n      {\r\n        name: 'Parallax Steps',\r\n        id: 'parallaxSteps',\r\n        type: 'int',\r\n        min: 0,\r\n        max: 32\r\n      },\r\n      {\r\n        name: 'Use Parallax Occlusion Mapping',\r\n        id: 'parallaxOcclusionMapping',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Create Maze',\r\n        type: 'function',\r\n        function: this.createMaze\r\n      },\r\n      {\r\n        name: 'Create Dungeon',\r\n        type: 'function',\r\n        function: this.createDungeon\r\n      }\r\n    ];\r\n    for (let i = 0; i < this.options.length; i++) {\r\n      this.options[i].value = this.renderOptions[this.options[i].id];\r\n    }\r\n    this.credits = [\r\n      'Textures created by João Paulo',\r\n      'link:https://3dtextures.me/about/',\r\n      '',\r\n      'Maze generation is based on this article',\r\n      'link:https://journal.stuffwithstuff.com/2014/12/21/rooms-and-mazes/'\r\n    ];\r\n    this.movement = { front: 0.0, side: 0.0 };\r\n  }\r\n\r\n  setOption(option, value) {\r\n    option.value = Number(value);\r\n    this.renderOptions[option.id] = option.value;\r\n  }\r\n\r\n  mouseMovement(x, y) {\r\n    const camera = this.scene.camera;\r\n    camera.rotations[0].angle -= x * 0.001;\r\n    camera.rotations[1].angle -= y * 0.001;\r\n  }\r\n\r\n  keyboardState(keys) {\r\n    let front = 0.0;\r\n    if (keys['w']) {\r\n      front -= 1.0;\r\n    }\r\n    if (keys['s']) {\r\n      front += 1.0;\r\n    }\r\n    let side = 0.0;\r\n    if (keys['a']) {\r\n      side -= 1.0;\r\n    }\r\n    if (keys['d']) {\r\n      side += 1.0;\r\n    }\r\n    this.movement.front = front;\r\n    this.movement.side = side;\r\n  }\r\n\r\n  registerDataChange(onDataChange) {\r\n    this.onDataChange = onDataChange;\r\n  }\r\n\r\n  forceDataChange() {\r\n    this._updatePowerUpInfo(this.scene.actors);\r\n  }\r\n\r\n  initScene() {\r\n    this._updateMap(this.gl, false);\r\n  }\r\n\r\n  createMaze() {\r\n    this._updateMap(this.gl, false);\r\n  }\r\n\r\n  createDungeon() {\r\n    this._updateMap(this.gl, true);\r\n  }\r\n\r\n  _updateMap(gl, dungeon) {\r\n    this.ready = false;\r\n    if (dungeon) {\r\n      this.map = generateDungeon(15, 15);\r\n    } else {\r\n      this.map = generateMaze(11, 11);\r\n    }\r\n    const { location, angle, square, nextSquare } = getMazeStartLocation(this.map);\r\n    if (this.scene) {\r\n      if (this.scene.actors.length > 1) {\r\n        this.scene.actors.length = 1;\r\n      }\r\n      this.scene.actors[0].boundingRectagles = getMazeBoundingSquares(this.map);\r\n      this.scene.actors[0].model.update(this.map);\r\n      this.scene.camera.location = location;\r\n      this.scene.camera.rotations[0].angle = angle;\r\n    } else {\r\n      const model = new RoomModel(gl, this.map);\r\n      this.scene = {\r\n        actors: [\r\n          {\r\n            active: true,\r\n            boundingRectagles: getMazeBoundingSquares(this.map),\r\n            model,\r\n            location: [0.0, 0.0, 0.0],\r\n            rotations: []\r\n          }\r\n        ],\r\n        camera: {\r\n          location,\r\n          rotations: [\r\n            {\r\n              angle,\r\n              axis: [0, 1, 0]\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0]\r\n            }\r\n          ]\r\n        }\r\n      };\r\n    }\r\n    this._placePowerUps(this.scene, this.map, square.x, square.y, nextSquare.x, nextSquare.y);\r\n    this.ready = true;\r\n  }\r\n\r\n  _placePowerUps(scene, map, sx, sy, tx, ty) {\r\n    const { width, height, data } = map;\r\n    for (let y = 0; y < height; y++) {\r\n      for (let x = 0; x < width; x++) {\r\n        if (data[y][x] !== 1) {\r\n          if (x === sx && y === sy) {\r\n            continue;\r\n          }\r\n          if ((x === tx && y === ty) || Math.random() < 0.2) {\r\n            const location = getMazeSquareCenter(map, x, y, 0.4);\r\n            scene.actors.push({\r\n              active: true,\r\n              boundingRadius: 0.1,\r\n              model: new MaterialModel(this.gl, pickRandom(shapes)),\r\n              material: getMaterial(pickRandom(materials)),\r\n              location,\r\n              scale: [0.15, 0.15, 0.15],\r\n              rotations: [\r\n                {\r\n                  angle: 0.0,\r\n                  axis: [1, 0, 0],\r\n                  speed: 1.0 + Math.random()\r\n                },\r\n                {\r\n                  angle: 0.0,\r\n                  axis: [0, 1, 0],\r\n                  speed: 2.0 + Math.random() + Math.random()\r\n                }\r\n              ]\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this._updatePowerUpInfo(scene.actors);\r\n  }\r\n\r\n  _updatePowerUpInfo(actors) {\r\n    let collected = 0;\r\n    let total = 0;\r\n    for (let i = 0; i < actors.length; i++) {\r\n      const actor = actors[i];\r\n      if (actor.boundingRadius) {\r\n        total++;\r\n        if (!actor.active) {\r\n          collected++;\r\n        }\r\n      }\r\n    }\r\n    this.onDataChange({ collected, total });\r\n  }\r\n\r\n  drawScene(deltaTime) {\r\n    if (!this.ready) {\r\n      return;\r\n    }\r\n\r\n    const gl = this.gl;\r\n    const scene = this.scene;\r\n    const camera = scene.camera;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 100.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, camera.location);\r\n    for (let i = 0; i < camera.rotations.length; i++) {\r\n      const rotation = camera.rotations[i];\r\n      mat4.rotate(viewMatrix, viewMatrix, rotation.angle, rotation.axis);\r\n    }\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    this.renderOptions.cameraPos = camera.location;\r\n    this.renderOptions.pointLight.position = camera.location;\r\n    this.renderOptions.lights[0].position = camera.location;\r\n    this.renderOptions.lights[1].position = camera.location;\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      if (actor.active) {\r\n        this._renderActor(projectionMatrix, viewMatrix, actor);\r\n        this._animateActor(deltaTime, actor);\r\n      }\r\n    }\r\n\r\n    mat4.identity(viewMatrix);\r\n    mat4.rotate(viewMatrix, viewMatrix, camera.rotations[0].angle, camera.rotations[0].axis);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    const x = camera.location[0];\r\n    const y = camera.location[2];\r\n\r\n    camera.location[0] += deltaTime * this.movement.front * viewMatrix[2];\r\n    camera.location[1] += deltaTime * this.movement.front * viewMatrix[6];\r\n    camera.location[2] += deltaTime * this.movement.front * viewMatrix[10];\r\n\r\n    camera.location[0] += deltaTime * this.movement.side * viewMatrix[0];\r\n    camera.location[1] += deltaTime * this.movement.side * viewMatrix[4];\r\n    camera.location[2] += deltaTime * this.movement.side * viewMatrix[8];\r\n\r\n    this._detectCollisions(camera, x, y, scene);\r\n  }\r\n\r\n  _detectCollisions(camera, x, y, scene) {\r\n    // collision detection against map\r\n    const cx = camera.location[0];\r\n    const cy = camera.location[2];\r\n    const radius = 0.2;\r\n    const mapBounds = scene.actors[0].boundingRectagles;\r\n    const len = mapBounds.length;\r\n    let collision = 0;\r\n    for (let i = 0; i < len; i++) {\r\n      const rect = mapBounds[i];\r\n      collision |= collideCircleRectangle(cx, cy, radius, rect.x1, rect.y1, rect.x2, rect.y2);\r\n    }\r\n    if (collision !== 0) {\r\n      if (collision === 1) {\r\n        camera.location[0] = x;\r\n      } else if (collision === 2) {\r\n        camera.location[2] = y;\r\n      } else {\r\n        camera.location[0] = x;\r\n        camera.location[2] = y;\r\n      }\r\n    }\r\n\r\n    // collision detection against power-ups\r\n    collision = 0;\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      if (actor.active && actor.boundingRadius) {\r\n        if (collideCircles(cx, cy, radius, actor.location[0], actor.location[2], actor.boundingRadius)) {\r\n          collision++;\r\n          actor.active = false;\r\n        }\r\n      }\r\n    }\r\n    if (collision > 0) {\r\n      this._updatePowerUpInfo(scene.actors);\r\n    }\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    if (actor.scale) {\r\n      mat4.scale(modelMatrix, modelMatrix, actor.scale);\r\n    }\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      mat4.rotate(modelMatrix, modelMatrix, rotation.angle, rotation.axis);\r\n    }\r\n\r\n    if (actor.material) {\r\n      this.renderOptions.material = actor.material;\r\n    }\r\n\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix, this.renderOptions);\r\n  }\r\n\r\n  _animateActor(deltaTime, actor) {\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      rotation.angle += deltaTime * rotation.speed;\r\n    }\r\n  }\r\n}\r\n\r\nexport default RoomScene;\r\n","import ColorScene from '../scenes/ColorScene';\r\nimport TextureScene from '../scenes/TextureScene';\r\nimport MazeScene from '../scenes/MazeScene';\r\nimport BrickWallScene from '../scenes/BrickWallScene';\r\nimport MaterialScene from '../scenes/MaterialScene';\r\nimport RoomScene from '../scenes/RoomScene';\r\n\r\nclass SceneManager {\r\n  constructor(canvas, onDataChange) {\r\n    this.canvas = canvas;\r\n    this.onDataChange = onDataChange;\r\n\r\n    this.resizeViewport = this.resizeViewport.bind(this);\r\n    this.getScene = this.getScene.bind(this);\r\n    this.previousScene = this.previousScene.bind(this);\r\n    this.nextScene = this.nextScene.bind(this);\r\n    this.renderScene = this.renderScene.bind(this);\r\n\r\n    this.gl = canvas.getContext('webgl');\r\n    if (this.gl === null) {\r\n      alert(\"Unable to initialize WebGL. Your browser or machine may not support it.\");\r\n    } else {\r\n      this.resizeViewport();\r\n      this.gl.enable(this.gl.CULL_FACE);\r\n      this.gl.cullFace(this.gl.BACK);\r\n      this.scenes = [\r\n        new ColorScene(this.gl),\r\n        new TextureScene(this.gl),\r\n        new MaterialScene(this.gl),\r\n        new MazeScene(this.gl),\r\n        new BrickWallScene(this.gl),\r\n        new RoomScene(this.gl)\r\n      ];\r\n      this.sceneIndex = 0;\r\n\r\n      for (let i = 0; i < this.scenes.length; i++) {\r\n        const scene = this.scenes[i];\r\n        if (scene.registerDataChange) {\r\n          scene.registerDataChange(this.onDataChange);\r\n        }\r\n        scene.initScene();\r\n      }\r\n    }\r\n  }\r\n\r\n  resizeViewport() {\r\n    const canvas = this.canvas;\r\n    const rect = canvas.getBoundingClientRect()\r\n    canvas.width = rect.width;\r\n    canvas.height = rect.height;\r\n    this.gl.viewport(0, 0, canvas.width, canvas.height);\r\n  }\r\n\r\n  getScene() {\r\n    return this.scenes[this.sceneIndex];\r\n  }\r\n\r\n  previousScene() {\r\n    this.sceneIndex = (this.sceneIndex - 1) % this.scenes.length;\r\n    if (this.sceneIndex < 0) {\r\n      this.sceneIndex = this.scenes.length - 1;\r\n    }\r\n    const scene = this.scenes[this.sceneIndex];\r\n    if (scene.forceDataChange) {\r\n      scene.forceDataChange();\r\n    }\r\n    return this.scenes[this.sceneIndex];\r\n  }\r\n\r\n  nextScene() {\r\n    this.sceneIndex = (this.sceneIndex + 1) % this.scenes.length;\r\n    const scene = this.scenes[this.sceneIndex];\r\n    if (scene.forceDataChange) {\r\n      scene.forceDataChange();\r\n    }\r\n    return this.scenes[this.sceneIndex];\r\n  }\r\n\r\n  renderScene(timeStamp) {\r\n    timeStamp *= 0.001;\r\n    if (!this.timeStamp) {\r\n      this.timeStamp = timeStamp;\r\n    }\r\n    const deltaTime = timeStamp - this.timeStamp;\r\n    this.timeStamp = timeStamp;\r\n    const scene = this.scenes[this.sceneIndex];\r\n    scene.drawScene(deltaTime);\r\n  }\r\n}\r\n\r\nexport default SceneManager;\r\n","import React from 'react';\r\nimport Message from './Message';\r\nimport Controls from './Controls';\r\nimport Credits from './Credits';\r\nimport SceneManager from '../lib/SceneManager';\r\n\r\nconst exploreNotes = ['Click the canvas to explore the scene'];\r\nconst movementNotes = ['Use the mouse to look', 'Use the WASD keys to move around'];\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onResize = this.onResize.bind(this);\r\n    this.onKeyDown = this.onKeyDown.bind(this);\r\n    this.onKeyUp = this.onKeyUp.bind(this);\r\n    this.onMouseMove = this.onMouseMove.bind(this);\r\n    this.onDataChange = this.onDataChange.bind(this);\r\n    this.onLockChange = this.onLockChange.bind(this);\r\n    this.onClickCanvas = this.onClickCanvas.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onClickPrevious = this.onClickPrevious.bind(this);\r\n    this.onClickNext = this.onClickNext.bind(this);\r\n    this.onClickMessage = this.onClickMessage.bind(this);\r\n    this.onAnimationFrame = this.onAnimationFrame.bind(this);\r\n    this.state = {\r\n      showControls: false\r\n    }\r\n    this.keys = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.sceneManager = new SceneManager(this.canvas, this.onDataChange);\r\n    const scene = this.sceneManager.getScene();\r\n    const notes = scene.mouseMovement ? exploreNotes : undefined;\r\n    this.setState({ scene, notes, sceneData: undefined });\r\n    this.canvas.requestPointerLock = this.canvas.requestPointerLock || this.canvas.mozRequestPointerLock;\r\n    document.exitPointerLock = document.exitPointerLock || document.mozExitPointerLock;\r\n    this.frame = window.requestAnimationFrame(this.onAnimationFrame);\r\n    window.addEventListener('resize', this.onResize);\r\n    window.addEventListener('keydown', this.onKeyDown);\r\n    window.addEventListener('keyup', this.onKeyUp);\r\n    document.addEventListener('pointerlockchange', this.onLockChange);\r\n    document.addEventListener('mozpointerlockchange', this.onLockChange);\r\n    this.showMessage(['Press Escape to toggle menu', 'Press Page Up for previous screen', 'Press Page Down for next screen']);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.cancelAnimationFrame(this.frame);\r\n    window.removeEventListener('resize', this.onResize);\r\n    window.removeEventListener('keydown', this.onKeyDown);\r\n    window.removeEventListener('keyup', this.onKeyUp);\r\n    document.removeEventListener('pointerlockchange', this.onLockChange);\r\n    document.removeEventListener('mozpointerlockchange', this.onLockChange);\r\n  }\r\n\r\n  cancelLock() {\r\n    this.captureMouse = false;\r\n    this.captureKeys = false;\r\n    document.exitPointerLock();\r\n  }\r\n\r\n  onResize() {\r\n    this.sceneManager.resizeViewport();\r\n  }\r\n\r\n  onKeyDown(event) {\r\n    event.preventDefault();\r\n    if (!this.keys[event.key]) {\r\n      this.onKeyPress(event.key);\r\n      this.keys[event.key] = true;\r\n      if (this.captureKeys) {\r\n        this.state.scene.keyboardState(this.keys);\r\n      }\r\n    }\r\n  }\r\n\r\n  onKeyUp(event) {\r\n    event.preventDefault();\r\n    this.keys[event.key] = false;\r\n    if (this.captureKeys) {\r\n      this.state.scene.keyboardState(this.keys);\r\n    }\r\n  }\r\n\r\n  onKeyPress(key) {\r\n    if (key === 'Escape') {\r\n      if (this.messageTimer) {\r\n        this.cancelMessage();\r\n      } else {\r\n        this.setState({ showControls: !this.state.showControls });\r\n      }\r\n    } else if (key === 'PageUp') {\r\n      this.cancelLock();\r\n      this.setState({ sceneData: undefined });\r\n      const scene = this.sceneManager.previousScene();\r\n      const notes = scene.mouseMovement ? exploreNotes : undefined;\r\n      this.setState({ scene, notes });\r\n    } else if (key === 'PageDown') {\r\n      this.cancelLock();\r\n      this.setState({ sceneData: undefined });\r\n      const scene = this.sceneManager.nextScene();\r\n      const notes = scene.mouseMovement ? exploreNotes : undefined;\r\n      this.setState({ scene, notes });\r\n    }\r\n  }\r\n\r\n  onMouseMove(event) {\r\n    if (this.captureMouse) {\r\n      this.state.scene.mouseMovement(event.movementX, event.movementY);\r\n    }\r\n  }\r\n\r\n  onDataChange(sceneData) {\r\n    this.setState({ sceneData });\r\n  }\r\n\r\n  onLockChange(event) {\r\n    event.preventDefault();\r\n    if (document.pointerLockElement === this.canvas || document.mozPointerLockElement === this.canvas) {\r\n      document.addEventListener(\"mousemove\", this.onMouseMove);\r\n      this.captureMouse = true;\r\n      if (this.state.scene.keyboardState) {\r\n        this.captureKeys = true;\r\n      }\r\n      this.setState({ notes: movementNotes });\r\n    } else {\r\n      document.removeEventListener(\"mousemove\", this.onMouseMove);\r\n      this.captureMouse = false;\r\n      this.captureKeys = false;\r\n      this.setState({ notes: undefined });\r\n    }\r\n  }\r\n\r\n  onClickCanvas(event) {\r\n    event.preventDefault();\r\n    if (this.state.scene.mouseMovement) {\r\n      this.canvas.requestPointerLock();\r\n      this.setState({ showControls: false, notes: undefined });\r\n    }\r\n  }\r\n\r\n  onChange(option, value) {\r\n    if (value !== option.value) {\r\n      this.state.scene.setOption(option, value);\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  onClickPrevious(event) {\r\n    event.preventDefault();\r\n    this.cancelLock();\r\n    this.setState({ sceneData: undefined });\r\n    const scene = this.sceneManager.previousScene();\r\n    const notes = scene.mouseMovement ? exploreNotes : undefined;\r\n    this.setState({ scene, notes });\r\n  }\r\n\r\n  onClickNext(event) {\r\n    event.preventDefault();\r\n    this.cancelLock();\r\n    this.setState({ sceneData: undefined });\r\n    const scene = this.sceneManager.nextScene();\r\n    const notes = scene.mouseMovement ? exploreNotes : undefined;\r\n    this.setState({ scene, notes });\r\n  }\r\n\r\n  onClickMessage(event) {\r\n    event.preventDefault();\r\n    if (this.messageTimer) {\r\n      this.cancelMessage();\r\n    }\r\n  }\r\n\r\n  showMessage(message) {\r\n    this.setState({ message });\r\n    this.messageTimer = setTimeout(this.clearMessage.bind(this), 10000);\r\n  }\r\n\r\n  clearMessage() {\r\n    this.setState({ message: undefined });\r\n    this.messageTimer = undefined;\r\n  }\r\n\r\n  cancelMessage() {\r\n    clearTimeout(this.messageTimer);\r\n    this.clearMessage();\r\n  }\r\n\r\n  onAnimationFrame(timeStamp) {\r\n    this.sceneManager.renderScene(timeStamp);\r\n    this.frame = window.requestAnimationFrame(this.onAnimationFrame);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"screen\">\r\n        <canvas id=\"canvas\" ref={elem => this.canvas = elem} onClick={this.onClickCanvas}></canvas>\r\n        <div id=\"note\">\r\n          {this.state.notes ? (this.state.notes.map((note, key) => (<div key={key}>{note}</div>))) : null}\r\n          {this.state.sceneData && this.state.sceneData.total ? (<div>{this.state.sceneData.collected}/{this.state.sceneData.total} power-ups collected</div>) : null}\r\n        </div>\r\n        <Message message={this.state.message} onClick={this.onClickMessage} />\r\n        <Controls show={this.state.showControls} onClickPrevious={this.onClickPrevious} onClickNext={this.onClickNext} onChange={this.onChange} options={this.state.scene ? this.state.scene.options : undefined} />\r\n        <Credits show={this.state.showControls} credits={this.state.scene ? this.state.scene.credits : undefined} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}