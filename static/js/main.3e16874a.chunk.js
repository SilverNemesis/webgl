(this.webpackJsonpwebgl=this.webpackJsonpwebgl||[]).push([[0],{13:function(t,e,i){t.exports=i(19)},18:function(t,e,i){},19:function(t,e,i){"use strict";i.r(e);var r=i(6),n=i.n(r),o=i(9),a=i.n(o),c=(i(18),i(2)),u=i(3),s=i(11),f=i(10),l=i(7),v=i(12),m=i(0);function d(t,e,i){var r=h(t,t.VERTEX_SHADER,e),n=h(t,t.FRAGMENT_SHADER,i),o=t.createProgram();return t.attachShader(o,r),t.attachShader(o,n),t.linkProgram(o),t.getProgramParameter(o,t.LINK_STATUS)?o:(alert("Unable to initialize the shader program: "+t.getProgramInfoLog(o)),null)}function h(t,e,i){var r=t.createShader(e);return t.shaderSource(r,i),t.compileShader(r),t.getShaderParameter(r,t.COMPILE_STATUS)?r:(alert("An error occurred compiling the shaders: "+t.getShaderInfoLog(r)),t.deleteShader(r),null)}function g(t,e){var i=t.createTexture();t.bindTexture(t.TEXTURE_2D,i);var r=t.RGBA,n=t.RGBA,o=t.UNSIGNED_BYTE,a=new Uint8Array([0,0,255,255]);t.texImage2D(t.TEXTURE_2D,0,r,1,1,0,n,o,a);var c=new Image;return c.onload=function(){t.bindTexture(t.TEXTURE_2D,i),t.texImage2D(t.TEXTURE_2D,0,r,n,o,c),x(c.width)&&x(c.height)?t.generateMipmap(t.TEXTURE_2D):(t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR))},c.src=e,i}function x(t){return 0===(t&t-1)}function b(t){t.clearColor(0,0,0,1),t.clearDepth(1),t.enable(t.DEPTH_TEST),t.depthFunc(t.LEQUAL),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT)}var A=[{x:-1,y:0},{x:0,y:-1},{x:1,y:0},{x:0,y:1}];function _(t,e){for(var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.8,r=function(t){c[t.y][t.x]=0},n=function(t,e){if(!o(a(t,e,3)))return!1;var i=a(t,e,2);return 1===c[i.y][i.x]},o=function(i){return!(i.x<0||i.y<0||i.x>=t||i.y>=e)},a=function(t,e,i){return{x:t.x+e.x*i,y:t.y+e.y*i}},c=[],u=0;u<e;u++)c.push(new Array(t).fill(1));var s,f={x:1,y:1},l=[];for(r(f),l.push(f);l.length>0;){for(var v=l[l.length-1],m=[],d=0;d<A.length;d++){var h=A[d];n(v,h)&&m.push(h)}if(m.length>0){var g=void 0;g=m.includes(s)&&Math.random()>i?s:m[Math.floor(Math.random()*m.length)],r(a(v,g,1)),r(a(v,g,2)),l.push(a(v,g,2)),s=g}else l.pop(),s=null}return{width:t,height:e,data:c}}var R=function(){function t(){Object(c.a)(this,t),this.initScene=this.initScene.bind(this),this.drawScene=this.drawScene.bind(this)}return Object(u.a)(t,[{key:"initScene",value:function(t){var e=d(t,"\n    attribute vec4 aVertexPosition;\n    attribute vec4 aVertexColor;\n\n    uniform mat4 uModelViewMatrix;\n    uniform mat4 uProjectionMatrix;\n\n    varying lowp vec4 vColor;\n\n    void main(void) {\n      gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n      vColor = aVertexColor;\n    }\n  ","\n    varying lowp vec4 vColor;\n\n    void main(void) {\n      gl_FragColor = vColor;\n    }\n  "),i={program:e,attribLocations:{vertexPosition:t.getAttribLocation(e,"aVertexPosition"),vertexColor:t.getAttribLocation(e,"aVertexColor")},uniformLocations:{projectionMatrix:t.getUniformLocation(e,"uProjectionMatrix"),modelViewMatrix:t.getUniformLocation(e,"uModelViewMatrix")}},r=this._initBuffers(t);this.scene={programInfo:i,buffers:r,squareRotation:0}}},{key:"drawScene",value:function(t,e){var i=this.scene,r=i.programInfo,n=i.buffers;b(t);var o=t.FLOAT;t.bindBuffer(t.ARRAY_BUFFER,n.color),t.vertexAttribPointer(r.attribLocations.vertexColor,4,o,!1,0,0),t.enableVertexAttribArray(r.attribLocations.vertexColor);var a=t.FLOAT;t.bindBuffer(t.ARRAY_BUFFER,n.position),t.vertexAttribPointer(r.attribLocations.vertexPosition,2,a,!1,0,0),t.enableVertexAttribArray(r.attribLocations.vertexPosition);var c=45*Math.PI/180,u=t.canvas.clientWidth/t.canvas.clientHeight,s=m.a();m.d(s,c,u,.1,100);var f=m.a();m.f(f,f,[-0,0,-6]),m.e(f,f,i.squareRotation,[0,0,1]),t.useProgram(r.program),t.uniformMatrix4fv(r.uniformLocations.projectionMatrix,!1,s),t.uniformMatrix4fv(r.uniformLocations.modelViewMatrix,!1,f);t.drawArrays(t.TRIANGLE_STRIP,0,4),i.squareRotation+=e}},{key:"_initBuffers",value:function(t){var e=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,e),t.bufferData(t.ARRAY_BUFFER,new Float32Array([1,1,-1,1,1,-1,-1,-1]),t.STATIC_DRAW);var i=t.createBuffer();return t.bindBuffer(t.ARRAY_BUFFER,i),t.bufferData(t.ARRAY_BUFFER,new Float32Array([1,1,1,1,1,0,0,1,0,1,0,1,0,0,1,1]),t.STATIC_DRAW),{position:e,color:i}}}]),t}(),L=function(){function t(){Object(c.a)(this,t),this.initScene=this.initScene.bind(this),this.drawScene=this.drawScene.bind(this)}return Object(u.a)(t,[{key:"initScene",value:function(t){var e=d(t,"\n    attribute vec4 aVertexPosition;\n    attribute vec4 aVertexColor;\n\n    uniform mat4 uModelViewMatrix;\n    uniform mat4 uProjectionMatrix;\n\n    varying lowp vec4 vColor;\n\n    void main(void) {\n      gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n      vColor = aVertexColor;\n    }\n  ","\n    varying lowp vec4 vColor;\n\n    void main(void) {\n      gl_FragColor = vColor;\n    }\n  "),i={program:e,attribLocations:{vertexPosition:t.getAttribLocation(e,"aVertexPosition"),vertexColor:t.getAttribLocation(e,"aVertexColor")},uniformLocations:{projectionMatrix:t.getUniformLocation(e,"uProjectionMatrix"),modelViewMatrix:t.getUniformLocation(e,"uModelViewMatrix")}},r=this._initBuffers(t);this.scene={programInfo:i,buffers:r,cubeRotation:0}}},{key:"drawScene",value:function(t,e){var i=this.scene,r=i.programInfo,n=i.buffers;b(t);var o=t.FLOAT;t.bindBuffer(t.ARRAY_BUFFER,n.position),t.vertexAttribPointer(r.attribLocations.vertexPosition,3,o,!1,0,0),t.enableVertexAttribArray(r.attribLocations.vertexPosition);var a=t.FLOAT;t.bindBuffer(t.ARRAY_BUFFER,n.color),t.vertexAttribPointer(r.attribLocations.vertexColor,4,a,!1,0,0),t.enableVertexAttribArray(r.attribLocations.vertexColor),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n.indices);var c=45*Math.PI/180,u=t.canvas.clientWidth/t.canvas.clientHeight,s=m.a();m.d(s,c,u,.1,100);var f=m.a();m.f(f,f,[-0,0,-6]),m.e(f,f,i.cubeRotation,[0,0,1]),m.e(f,f,.7*i.cubeRotation,[0,1,0]),t.useProgram(r.program),t.uniformMatrix4fv(r.uniformLocations.projectionMatrix,!1,s),t.uniformMatrix4fv(r.uniformLocations.modelViewMatrix,!1,f);var l=t.UNSIGNED_SHORT;t.drawElements(t.TRIANGLES,36,l,0),i.cubeRotation+=e}},{key:"_initBuffers",value:function(t){var e=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,e),t.bufferData(t.ARRAY_BUFFER,new Float32Array([-1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,1,-1,-1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1]),t.STATIC_DRAW);for(var i=[[1,1,1,1],[1,0,0,1],[0,1,0,1],[0,0,1,1],[1,1,0,1],[1,0,1,1]],r=[],n=0;n<i.length;++n){var o=i[n];r=r.concat(o,o,o,o)}var a=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,a),t.bufferData(t.ARRAY_BUFFER,new Float32Array(r),t.STATIC_DRAW);var c=t.createBuffer();return t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,c),t.bufferData(t.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23]),t.STATIC_DRAW),{position:e,color:a,indices:c}}}]),t}(),p=function(){function t(){Object(c.a)(this,t),this.initScene=this.initScene.bind(this),this.drawScene=this.drawScene.bind(this)}return Object(u.a)(t,[{key:"initScene",value:function(t){var e=d(t,"\n      attribute vec4 aVertexPosition;\n      attribute vec2 aTextureCoord;\n\n      uniform mat4 uModelViewMatrix;\n      uniform mat4 uProjectionMatrix;\n\n      varying highp vec2 vTextureCoord;\n\n      void main(void) {\n        gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n        vTextureCoord = aTextureCoord;\n      }\n    ","\n      varying highp vec2 vTextureCoord;\n\n      uniform sampler2D uSampler;\n\n      void main(void) {\n        gl_FragColor = texture2D(uSampler, vTextureCoord);\n      }\n    "),i={program:e,attribLocations:{vertexPosition:t.getAttribLocation(e,"aVertexPosition"),textureCoord:t.getAttribLocation(e,"aTextureCoord")},uniformLocations:{projectionMatrix:t.getUniformLocation(e,"uProjectionMatrix"),modelViewMatrix:t.getUniformLocation(e,"uModelViewMatrix"),uSampler:t.getUniformLocation(e,"uSampler")}},r=this._initBuffers(t),n=g(t,"images/cubetexture.png");this.scene={programInfo:i,buffers:r,texture:n,cubeRotation:0}}},{key:"drawScene",value:function(t,e){var i=this.scene,r=i.programInfo,n=i.buffers,o=i.texture;b(t);var a=t.FLOAT;t.bindBuffer(t.ARRAY_BUFFER,n.position),t.vertexAttribPointer(r.attribLocations.vertexPosition,3,a,!1,0,0),t.enableVertexAttribArray(r.attribLocations.vertexPosition);var c=t.FLOAT;t.bindBuffer(t.ARRAY_BUFFER,n.textureCoord),t.vertexAttribPointer(r.attribLocations.textureCoord,2,c,!1,0,0),t.enableVertexAttribArray(r.attribLocations.textureCoord),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n.indices);var u=45*Math.PI/180,s=t.canvas.clientWidth/t.canvas.clientHeight,f=m.a();m.d(f,u,s,.1,100);var l=m.a();m.f(l,l,[-0,0,-6]),m.e(l,l,i.cubeRotation,[0,0,1]),m.e(l,l,.7*i.cubeRotation,[0,1,0]),t.useProgram(r.program),t.uniformMatrix4fv(r.uniformLocations.projectionMatrix,!1,f),t.uniformMatrix4fv(r.uniformLocations.modelViewMatrix,!1,l),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,o),t.uniform1i(r.uniformLocations.uSampler,0);var v=t.UNSIGNED_SHORT;t.drawElements(t.TRIANGLES,36,v,0),i.cubeRotation+=e}},{key:"_initBuffers",value:function(t){var e=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,e),t.bufferData(t.ARRAY_BUFFER,new Float32Array([-1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,1,-1,-1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1]),t.STATIC_DRAW);var i=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,i),t.bufferData(t.ARRAY_BUFFER,new Float32Array([0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1]),t.STATIC_DRAW);var r=t.createBuffer();return t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,r),t.bufferData(t.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23]),t.STATIC_DRAW),{position:e,textureCoord:i,indices:r}}}]),t}(),E=i(4),T=function(){function t(e){Object(c.a)(this,t),this.gl=e,this.draw=this.draw.bind(this);var i=this._initShaders(e),r=this._initShadersPerPixel(e);this.model={shader:{program:i,attribLocations:{vertexPosition:e.getAttribLocation(i,"aVertexPosition"),vertexNormal:e.getAttribLocation(i,"aVertexNormal"),textureCoord:e.getAttribLocation(i,"aTextureCoord")},uniformLocations:{projectionMatrix:e.getUniformLocation(i,"uProjectionMatrix"),modelViewMatrix:e.getUniformLocation(i,"uModelViewMatrix"),normalMatrix:e.getUniformLocation(i,"uNormalMatrix"),uSampler:e.getUniformLocation(i,"uSampler"),ambientLight:e.getUniformLocation(i,"uAmbientLight"),directionalLight:{direction:e.getUniformLocation(i,"uDirectionalLight.direction"),color:e.getUniformLocation(i,"uDirectionalLight.color")},pointLight:{position:e.getUniformLocation(i,"uPointLight.position"),color:e.getUniformLocation(i,"uPointLight.color")}}},shaderPerPixel:{program:r,attribLocations:{vertexPosition:e.getAttribLocation(r,"aVertexPosition"),vertexNormal:e.getAttribLocation(r,"aVertexNormal"),textureCoord:e.getAttribLocation(r,"aTextureCoord")},uniformLocations:{projectionMatrix:e.getUniformLocation(r,"uProjectionMatrix"),modelViewMatrix:e.getUniformLocation(r,"uModelViewMatrix"),normalMatrix:e.getUniformLocation(r,"uNormalMatrix"),uSampler:e.getUniformLocation(r,"uSampler"),ambientLight:e.getUniformLocation(r,"uAmbientLight"),directionalLight:{direction:e.getUniformLocation(r,"uDirectionalLight.direction"),color:e.getUniformLocation(r,"uDirectionalLight.color")},pointLight:{position:e.getUniformLocation(r,"uPointLight.position"),color:e.getUniformLocation(r,"uPointLight.color")}}},buffers:this._initBuffers(e),texture:g(e,"images/cubetexture.png")}}return Object(u.a)(t,[{key:"draw",value:function(t,e,i,r){var n,o=this.gl,a=this.model,c=a.buffers,u=a.texture;n=r?this.model.shaderPerPixel:this.model.shader;var s=o.FLOAT;o.bindBuffer(o.ARRAY_BUFFER,c.position),o.vertexAttribPointer(n.attribLocations.vertexPosition,3,s,!1,0,0),o.enableVertexAttribArray(n.attribLocations.vertexPosition);var f=o.FLOAT;o.bindBuffer(o.ARRAY_BUFFER,c.normal),o.vertexAttribPointer(n.attribLocations.vertexNormal,3,f,!1,0,0),o.enableVertexAttribArray(n.attribLocations.vertexNormal);var l=o.FLOAT;o.bindBuffer(o.ARRAY_BUFFER,c.textureCoord),o.vertexAttribPointer(n.attribLocations.textureCoord,2,l,!1,0,0),o.enableVertexAttribArray(n.attribLocations.textureCoord),o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,c.indices);var v=m.a();m.b(v,i),m.g(v,v);var d=m.a();m.c(d,e,i),o.useProgram(n.program),o.uniformMatrix4fv(n.uniformLocations.projectionMatrix,!1,t),o.uniformMatrix4fv(n.uniformLocations.modelViewMatrix,!1,d),o.uniformMatrix4fv(n.uniformLocations.normalMatrix,!1,v),o.uniform3f(n.uniformLocations.ambientLight,.3,.3,.3);var h=E.b(0,1,0);E.c(h,h),o.uniform3f(n.uniformLocations.directionalLight.color,.5,.5,.5),o.uniform3fv(n.uniformLocations.directionalLight.direction,h),o.uniform3f(n.uniformLocations.pointLight.color,.7,.7,.7),o.uniform3f(n.uniformLocations.pointLight.position,0,0,0),o.activeTexture(o.TEXTURE0),o.bindTexture(o.TEXTURE_2D,u),o.uniform1i(n.uniformLocations.uSampler,0);var g=o.UNSIGNED_SHORT;o.drawElements(o.TRIANGLES,36,g,0)}},{key:"_initShaders",value:function(t){return d(t,"\n      attribute vec4 aVertexPosition;\n      attribute vec3 aVertexNormal;\n      attribute vec2 aTextureCoord;\n\n      uniform mat4 uProjectionMatrix;\n      uniform mat4 uModelViewMatrix;\n      uniform mat4 uNormalMatrix;\n      uniform vec3 uAmbientLight;\n      uniform struct {\n        vec3 direction;\n        vec3 color;\n      } uDirectionalLight;\n      uniform struct {\n        vec3 position;\n        vec3 color;\n      } uPointLight;\n\n      varying highp vec2 vTextureCoord;\n      varying highp vec3 vLighting;\n\n      void main(void) {\n        gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n        vTextureCoord = aTextureCoord;\n\n        highp vec3 transformedNormal = vec3(uNormalMatrix * vec4(aVertexNormal, 1.0));\n        highp float directional = max(dot(transformedNormal, uDirectionalLight.direction), 0.0);\n\n        vec3 surfaceToLight = uPointLight.position - aVertexPosition.xyz;\n        float bright = 50.0 * max(dot(transformedNormal, normalize(surfaceToLight)), 0.0) / (length(surfaceToLight) * length(surfaceToLight));\n        bright = clamp(bright, 0.0, 1.0);\n\n        vLighting = uAmbientLight + (uDirectionalLight.color * directional) + (uPointLight.color * bright);\n      }\n    ","\n      varying highp vec2 vTextureCoord;\n      varying highp vec3 vLighting;\n\n      uniform sampler2D uSampler;\n\n      void main(void) {\n        highp vec4 texelColor = texture2D(uSampler, vTextureCoord);\n        gl_FragColor = vec4(texelColor.rgb * vLighting, texelColor.a);\n      }\n    ")}},{key:"_initShadersPerPixel",value:function(t){return d(t,"\n      attribute vec4 aVertexPosition;\n      attribute vec2 aTextureCoord;\n      attribute vec3 aVertexNormal;\n\n      uniform mat4 uProjectionMatrix;\n      uniform mat4 uModelViewMatrix;\n      uniform mat4 uNormalMatrix;\n\n      varying vec3 vVertexPosition;\n      varying vec2 vTextureCoord;\n      varying vec3 vVertexNormal;\n\n      void main(void) {\n        gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n        vTextureCoord = aTextureCoord;\n        vVertexNormal = normalize(vec3(uNormalMatrix * vec4(aVertexNormal, 1.0)));\n        vVertexPosition = vec3(uModelViewMatrix * aVertexPosition);\n      }\n    ","\n      precision highp float;\n\n      uniform sampler2D uSampler;\n      uniform vec3 uAmbientLight;     \n      uniform struct {\n        vec3 direction;\n        vec3 color;\n      } uDirectionalLight;\n      uniform struct {\n        vec3 position;\n        vec3 color;\n      } uPointLight;\n\n      varying vec3 vVertexPosition;\n      varying vec2 vTextureCoord;\n      varying vec3 vVertexNormal;\n      \n      void main() {\n        highp float directional = max(dot(vVertexNormal, uDirectionalLight.direction), 0.0);\n\n        vec3 surfaceToLight = uPointLight.position - vVertexPosition;\n        float bright = 50.0 * max(dot(vVertexNormal, normalize(surfaceToLight)), 0.0) / (length(surfaceToLight) * length(surfaceToLight));\n        bright = clamp(bright, 0.0, 1.0);\n\n        highp vec3 lighting = uAmbientLight + (uDirectionalLight.color * directional) + (uPointLight.color * bright);\n\n        highp vec4 texelColor = texture2D(uSampler, vTextureCoord);\n        gl_FragColor = vec4(texelColor.rgb * lighting, texelColor.a);\n      }\n    ")}},{key:"_initBuffers",value:function(t){var e=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,e),t.bufferData(t.ARRAY_BUFFER,new Float32Array([-1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,1,-1,-1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1]),t.STATIC_DRAW);var i=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,i),t.bufferData(t.ARRAY_BUFFER,new Float32Array([0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0]),t.STATIC_DRAW);var r=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,r),t.bufferData(t.ARRAY_BUFFER,new Float32Array([0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1]),t.STATIC_DRAW);var n=t.createBuffer();return t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n),t.bufferData(t.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23]),t.STATIC_DRAW),{position:e,normal:i,textureCoord:r,indices:n}}}]),t}(),F=function(){function t(){Object(c.a)(this,t),this.initScene=this.initScene.bind(this),this.drawScene=this.drawScene.bind(this)}return Object(u.a)(t,[{key:"initScene",value:function(t){var e=new T(t);this.scene={actors:[{model:e,location:[-2,0,-5.5],rotation:0,rotationSpeed:1,perPixel:!1},{model:e,location:[2,0,-5.5],rotation:0,rotationSpeed:1,perPixel:!0}],camera:[0,0,0],cameraDir:[0,0,2]}}},{key:"drawScene",value:function(t,e){var i=this.scene;b(t);var r=45*Math.PI/180,n=t.canvas.clientWidth/t.canvas.clientHeight,o=m.a();m.d(o,r,n,.1,100);var a=m.a();m.f(a,a,i.camera),m.b(a,a);for(var c=0;c<i.actors.length;c++){var u=i.actors[c];this._renderActor(o,a,u),this._animateActor(e,u)}i.camera[2]>16?(i.camera[2]=16,i.cameraDir[2]=-2):i.camera[2]<0&&(i.camera[2]=0,i.cameraDir[2]=2),i.camera[0]+=i.cameraDir[0]*e,i.camera[1]+=i.cameraDir[1]*e,i.camera[2]+=i.cameraDir[2]*e}},{key:"_renderActor",value:function(t,e,i){var r=i.model,n=m.a();m.f(n,n,i.location),m.e(n,n,i.rotation,[0,0,1]),m.e(n,n,.7*i.rotation,[0,1,0]),m.e(n,n,.3*i.rotation,[1,0,0]),r.draw(t,e,n,i.perPixel)}},{key:"_animateActor",value:function(t,e){e.rotation+=t*e.rotationSpeed}}]),t}(),B=function(){function t(e,i){Object(c.a)(this,t),this.gl=e,this.maze=i,this.draw=this.draw.bind(this);var r=this._initShaders(e);this.model={program:r,attribLocations:{vertexPosition:e.getAttribLocation(r,"aVertexPosition"),vertexColor:e.getAttribLocation(r,"aVertexColor")},uniformLocations:{projectionMatrix:e.getUniformLocation(r,"uProjectionMatrix"),modelViewMatrix:e.getUniformLocation(r,"uModelViewMatrix")},buffers:this._initBuffers(e,i)}}return Object(u.a)(t,[{key:"update",value:function(t){this._freeBuffers(this.gl,this.model.buffers),this.maze=t,this.model.buffers=this._initBuffers(this.gl,t)}},{key:"draw",value:function(t,e,i){var r=this.gl,n=this.model,o=this.model.buffers,a=r.FLOAT;r.bindBuffer(r.ARRAY_BUFFER,o.position),r.vertexAttribPointer(n.attribLocations.vertexPosition,3,a,!1,0,0),r.enableVertexAttribArray(n.attribLocations.vertexPosition);var c=r.FLOAT;r.bindBuffer(r.ARRAY_BUFFER,o.color),r.vertexAttribPointer(n.attribLocations.vertexColor,4,c,!1,0,0),r.enableVertexAttribArray(n.attribLocations.vertexColor),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,o.indices);var u=m.a();m.c(u,e,i),r.useProgram(n.program),r.uniformMatrix4fv(n.uniformLocations.projectionMatrix,!1,t),r.uniformMatrix4fv(n.uniformLocations.modelViewMatrix,!1,u);var s=o.vertexCount,f=r.UNSIGNED_INT;r.drawElements(r.TRIANGLES,s,f,0)}},{key:"_initShaders",value:function(t){return d(t,"\n      attribute vec4 aVertexPosition;\n      attribute vec4 aVertexColor;\n\n      uniform mat4 uModelViewMatrix;\n      uniform mat4 uProjectionMatrix;\n\n      varying lowp vec4 vColor;\n\n      void main(void) {\n        gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n        vColor = aVertexColor;\n      }\n    ","\n      varying lowp vec4 vColor;\n\n      void main(void) {\n        gl_FragColor = vColor;\n      }\n    ")}},{key:"_initBuffers",value:function(t,e){for(var i=[],r=[],n=[],o=0,a=function(t,e,a,c,u,s){i.push(t,a,u,e,a,u,e,c,u,t,c,u),n.push(o+0,o+1,o+2,o+0,o+2,o+3),o+=4;for(var f=0;f<4;f++)for(var l=0;l<4;l++)r.push(s[l])},c=function(t,e,a,c,u,s){i.push(t,u,a,e,u,a,e,u,c,t,u,c),n.push(o+0,o+1,o+2,o+0,o+2,o+3),o+=4;for(var f=0;f<4;f++)for(var l=0;l<4;l++)r.push(s[l])},u=function(t,e,a,c,u,s){i.push(u,t,a,u,e,a,u,e,c,u,t,c),n.push(o+0,o+1,o+2,o+0,o+2,o+3),o+=4;for(var f=0;f<4;f++)for(var l=0;l<4;l++)r.push(s[l])},s=[.2,.2,.2,1],f=[.7,.7,.7,1],l=[.5,0,.5,1],v=[0,.5,0,1],m=[.5,0,0,1],d=[0,0,.5,1],h=-e.width/2,g=-e.height/2,x=0;x<e.height;x++)for(var b=0;b<e.width;b++){var A=b+h,_=A+1,R=x+g,L=R+1;0===e.data[x][b]?a(A,_,R,L,0,s):(a(A,_,R,L,1,f),0!==x&&0!==e.data[x-1][b]||c(A,_,0,1,R,l),0!==b&&0!==e.data[x][b-1]||u(L,R,0,1,A,m),x!==e.height-1&&0!==e.data[x+1][b]||c(_,A,0,1,L,v),b!==e.width-1&&0!==e.data[x][b+1]||u(R,L,0,1,_,d))}var p=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,p),t.bufferData(t.ARRAY_BUFFER,new Float32Array(i),t.STATIC_DRAW);var E=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,E),t.bufferData(t.ARRAY_BUFFER,new Float32Array(r),t.STATIC_DRAW);var T=t.createBuffer();return t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,T),t.bufferData(t.ELEMENT_ARRAY_BUFFER,new Uint32Array(n),t.STATIC_DRAW),{position:p,color:E,indices:T,vertexCount:n.length}}},{key:"_freeBuffers",value:function(t,e){t.deleteBuffer(e.position),t.deleteBuffer(e.color),t.deleteBuffer(e.indices)}}]),t}(),M=function(){function t(){Object(c.a)(this,t),this.initScene=this.initScene.bind(this),this.drawScene=this.drawScene.bind(this),this.totalDelta=0}return Object(u.a)(t,[{key:"initScene",value:function(t){var e=2*Math.floor(45*Math.random())+11,i=_(e,e),r=new B(t,i);this.scene={actors:[{model:r,location:[0,0,-2*e],rotation:{angle:0,axis:[0,0,1],speed:.5}}],camera:[0,0,0],cameraDir:[0,0,8]}}},{key:"drawScene",value:function(t,e){var i=this.scene;b(t);var r=45*Math.PI/180,n=t.canvas.clientWidth/t.canvas.clientHeight,o=m.a();m.d(o,r,n,.1,500);var a=m.a();m.f(a,a,i.camera),m.b(a,a);for(var c=0;c<i.actors.length;c++){var u=i.actors[c];this._renderActor(o,a,u),this._animateActor(e,u)}}},{key:"_renderActor",value:function(t,e,i){var r=i.model,n=m.a();m.f(n,n,i.location),m.e(n,n,-45*(Math.PI/180),[1,0,0]),m.e(n,n,i.rotation.angle,i.rotation.axis),r.draw(t,e,n)}},{key:"_animateActor",value:function(t,e){if(e.rotation.angle+=t*e.rotation.speed,this.totalDelta+=t,this.totalDelta>=10){this.totalDelta-=10;var i=2*Math.floor(45*Math.random())+11,r=_(i,i);e.location[2]=-2*i,e.model.update(r)}}}]),t}(),w=i(5),U=function(){function t(e){Object(c.a)(this,t),this.gl=e,this.draw=this.draw.bind(this);var i=this._initShaders(e);this.model={shader:{program:i,attribLocations:{vertexPosition:e.getAttribLocation(i,"vert_pos"),vertexTangent:e.getAttribLocation(i,"vert_tang"),vertexBitangent:e.getAttribLocation(i,"vert_bitang"),textureCoord:e.getAttribLocation(i,"vert_uv")},uniformLocations:{modelMatrix:e.getUniformLocation(i,"model_mtx"),viewMatrix:e.getUniformLocation(i,"view_mtx"),normalMatrix:e.getUniformLocation(i,"norm_mtx"),projectionMatrix:e.getUniformLocation(i,"proj_mtx"),textureNormal:e.getUniformLocation(i,"tex_norm"),textureDiffuse:e.getUniformLocation(i,"tex_diffuse"),showTexture:e.getUniformLocation(i,"show_texture"),cameraPosition:e.getUniformLocation(i,"camera_pos"),ambientLight:e.getUniformLocation(i,"ambient_color"),directionalLight:{direction:e.getUniformLocation(i,"diffuse_dir"),color:e.getUniformLocation(i,"diffuse_color")},pointLight:{position:e.getUniformLocation(i,"point_pos"),color:e.getUniformLocation(i,"point_color")}}},buffers:this._initBuffers(e),texture:{diffuse:g(e,"images/Brick_Wall_017_basecolor.jpg"),normal:g(e,"images/Brick_Wall_017_normal.jpg")}}}return Object(u.a)(t,[{key:"draw",value:function(t,e,i){var r=this.gl,n=this.model,o=n.buffers,a=n.texture,c=this.model.shader,u=r.FLOAT;r.bindBuffer(r.ARRAY_BUFFER,o.position),r.vertexAttribPointer(c.attribLocations.vertexPosition,3,u,!1,0,0),r.enableVertexAttribArray(c.attribLocations.vertexPosition);var s=r.FLOAT;r.bindBuffer(r.ARRAY_BUFFER,o.tangent),r.vertexAttribPointer(c.attribLocations.vertexTangent,3,s,!1,0,0),r.enableVertexAttribArray(c.attribLocations.vertexTangent);var f=r.FLOAT;r.bindBuffer(r.ARRAY_BUFFER,o.bitangent),r.vertexAttribPointer(c.attribLocations.vertexBitangent,3,f,!1,0,0),r.enableVertexAttribArray(c.attribLocations.vertexBitangent);var l=r.FLOAT;r.bindBuffer(r.ARRAY_BUFFER,o.textureCoord),r.vertexAttribPointer(c.attribLocations.textureCoord,2,l,!1,0,0),r.enableVertexAttribArray(c.attribLocations.textureCoord),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,o.indices);var v=m.a();m.b(v,i),m.g(v,v),r.useProgram(c.program),r.uniformMatrix4fv(c.uniformLocations.projectionMatrix,!1,t),r.uniformMatrix4fv(c.uniformLocations.modelMatrix,!1,i),r.uniformMatrix4fv(c.uniformLocations.viewMatrix,!1,e),r.uniformMatrix4fv(c.uniformLocations.normalMatrix,!1,v),r.uniform1i(c.uniformLocations.showTexture,1),r.uniform3f(c.uniformLocations.ambientLight,.2,.2,.2);var d=E.b(0,1,0);E.c(d,d),r.uniform3f(c.uniformLocations.directionalLight.color,1,1,1),r.uniform3fv(c.uniformLocations.directionalLight.direction,d),r.uniform3f(c.uniformLocations.pointLight.color,1,1,1),r.uniform3f(c.uniformLocations.pointLight.position,0,0,0),r.uniform3f(c.uniformLocations.cameraPosition,0,0,0),r.activeTexture(r.TEXTURE0),r.bindTexture(r.TEXTURE_2D,a.normal),r.uniform1i(c.uniformLocations.textureNormal,0),r.activeTexture(r.TEXTURE1),r.bindTexture(r.TEXTURE_2D,a.diffuse),r.uniform1i(c.uniformLocations.textureDiffuse,1);var h=o.vertexCount,g=r.UNSIGNED_SHORT;r.drawElements(r.TRIANGLES,h,g,0)}},{key:"_initShaders",value:function(t){return d(t,"\n      precision highp float;\n\n      attribute vec3 vert_pos;\n      attribute vec3 vert_tang;\n      attribute vec3 vert_bitang;\n      attribute vec2 vert_uv;\n      \n      uniform vec3 camera_pos;\n      uniform vec3 point_pos;\n      uniform vec3 diffuse_dir;\n      uniform mat4 norm_mtx;\n      uniform mat4 model_mtx;\n      uniform mat4 view_mtx;\n      uniform mat4 proj_mtx;\n      \n      varying vec2 frag_uv;\n      varying vec3 ts_light_pos;\n      varying vec3 ts_view_pos;\n      varying vec3 ts_frag_pos;\n      varying vec3 ts_diffuse_dir;\n      \n      mat3 transpose(in mat3 inMatrix)\n      {\n          vec3 i0 = inMatrix[0];\n          vec3 i1 = inMatrix[1];\n          vec3 i2 = inMatrix[2];\n      \n          mat3 outMatrix = mat3(\n              vec3(i0.x, i1.x, i2.x),\n              vec3(i0.y, i1.y, i2.y),\n              vec3(i0.z, i1.z, i2.z)\n          );\n      \n          return outMatrix;\n      }\n      \n      void main(void)\n      {\n          frag_uv = vert_uv;\n\n          vec3 t = normalize(mat3(norm_mtx) * vert_tang);\n          vec3 b = normalize(mat3(norm_mtx) * vert_bitang);\n          mat3 tbn = transpose(mat3(t, b, normalize(mat3(norm_mtx) * cross(vert_bitang, vert_tang))));\n      \n          ts_light_pos = tbn * point_pos;\n          ts_view_pos = tbn * camera_pos;\n          ts_frag_pos = tbn * vec3(model_mtx * vec4(vert_pos, 1.0));\n          ts_diffuse_dir = tbn * diffuse_dir;\n\n          gl_Position = proj_mtx * view_mtx * model_mtx * vec4(vert_pos, 1.0);\n      } \n    ","\n      precision highp float;\n\n      uniform sampler2D tex_norm;\n      uniform sampler2D tex_diffuse;\n      uniform int show_texture;\n      uniform vec3 ambient_color;\n      uniform vec3 diffuse_color;\n      uniform vec3 point_color;\n      \n      varying vec2 frag_uv;\n      varying vec3 ts_light_pos;\n      varying vec3 ts_view_pos;\n      varying vec3 ts_frag_pos;\n      varying vec3 ts_diffuse_dir;\n      \n      void main(void)\n      {\n        vec3 view_dir = normalize(ts_view_pos - ts_frag_pos);\n      \n        vec3 albedo = texture2D(tex_diffuse, frag_uv).rgb;\n\n        if (show_texture == 0) {\n          albedo = vec3(1.0, 1.0, 1.0);\n        }\n      \n        float point_intensity;\n        float diffuse_intensity;\n\n        vec3 norm = normalize(texture2D(tex_norm, frag_uv).rgb * 2.0 - 1.0);\n        vec3 light_dir = ts_light_pos - ts_frag_pos;\n        point_intensity = 15.0 * max(dot(norm, normalize(light_dir)), 0.0) / (length(light_dir) * length(light_dir));\n        point_intensity = clamp(point_intensity, 0.0, 1.0);\n        diffuse_intensity = max(dot(ts_diffuse_dir, norm), 0.0);\n\n        vec3 lighting = ambient_color + (diffuse_color * diffuse_intensity) + (point_color * point_intensity); \n        gl_FragColor = vec4(albedo * lighting, 1.0);\n      }\n    ")}},{key:"_initBuffers",value:function(t){var e=[],i=[],r=[],n=[],o=[],a=E.a(),c=E.a(),u=0,s=function(t,s,f,l){e.push.apply(e,Object(w.a)(t).concat(Object(w.a)(s),Object(w.a)(f),Object(w.a)(l))),E.d(a,l,t),E.c(a,a),i.push.apply(i,Object(w.a)(a).concat(Object(w.a)(a),Object(w.a)(a),Object(w.a)(a))),E.d(c,t,f),E.c(c,c),r.push.apply(r,Object(w.a)(c).concat(Object(w.a)(c),Object(w.a)(c),Object(w.a)(c))),n.push(0,0,1,1,0,1,1,0),o.push(u+0,u+1,u+2,u+0,u+3,u+1),u+=4},f=E.b(-1,-1,1),l=E.b(1,1,1),v=E.b(-1,1,1),m=E.b(1,-1,1),d=E.b(-1,-1,-1),h=E.b(1,1,-1),g=E.b(-1,1,-1),x=E.b(1,-1,-1);s(f,l,v,m),s(x,g,h,d),s(d,v,g,f),s(m,h,l,x),s(d,m,f,x),s(h,v,l,g);var b=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,b),t.bufferData(t.ARRAY_BUFFER,new Float32Array(e),t.STATIC_DRAW);var A=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,A),t.bufferData(t.ARRAY_BUFFER,new Float32Array(i),t.STATIC_DRAW);var _=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,_),t.bufferData(t.ARRAY_BUFFER,new Float32Array(r),t.STATIC_DRAW);var R=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,R),t.bufferData(t.ARRAY_BUFFER,new Float32Array(n),t.STATIC_DRAW);var L=t.createBuffer();return t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,L),t.bufferData(t.ELEMENT_ARRAY_BUFFER,new Uint16Array(o),t.STATIC_DRAW),{position:b,tangent:A,bitangent:_,textureCoord:R,indices:L,vertexCount:o.length}}}]),t}(),P=function(){function t(){Object(c.a)(this,t),this.initScene=this.initScene.bind(this),this.drawScene=this.drawScene.bind(this)}return Object(u.a)(t,[{key:"initScene",value:function(t){var e=new U(t);this.scene={actors:[{model:e,location:[0,0,-5.5],rotations:[{angle:0,axis:[0,1,0],speed:.4},{angle:0,axis:[1,0,0],speed:.2}]}],camera:[0,0,0]}}},{key:"drawScene",value:function(t,e){var i=this.scene;b(t);var r=45*Math.PI/180,n=t.canvas.clientWidth/t.canvas.clientHeight,o=m.a();m.d(o,r,n,.1,100);var a=m.a();m.f(a,a,i.camera),m.b(a,a);for(var c=0;c<i.actors.length;c++){var u=i.actors[c];this._renderActor(o,a,u),this._animateActor(e,u)}}},{key:"_renderActor",value:function(t,e,i){var r=i.model,n=m.a();m.f(n,n,i.location);for(var o=0;o<i.rotations.length;o++){var a=i.rotations[o];m.e(n,n,a.angle,a.axis)}r.draw(t,e,n)}},{key:"_animateActor",value:function(t,e){for(var i=0;i<e.rotations.length;i++){var r=e.rotations[i];r.angle+=t*r.speed}}}]),t}(),y=function(t){function e(t){var i;return Object(c.a)(this,e),(i=Object(s.a)(this,Object(f.a)(e).call(this,t))).onClickCanvas=i.onClickCanvas.bind(Object(l.a)(i)),i.renderCanvas=i.renderCanvas.bind(Object(l.a)(i)),i.scenes=[{init:!1,render:new R},{init:!1,render:new L},{init:!1,render:new p},{init:!1,render:new F},{init:!1,render:new M},{init:!1,render:new P}],i.sceneIndex=i.scenes.length-1,i}return Object(v.a)(e,t),Object(u.a)(e,[{key:"componentDidMount",value:function(){var t=this.canvas,e=t.getBoundingClientRect();if(t.width=e.width,t.height=e.height,this.gl=t.getContext("webgl"),null===this.gl)alert("Unable to initialize WebGL. Your browser or machine may not support it.");else{this.gl.enable(this.gl.CULL_FACE),this.gl.cullFace(this.gl.BACK),this.gl.getExtension("OES_element_index_uint");var i=this.scenes[this.sceneIndex];i.init||(i.init=!0,i.render.initScene(this.gl)),this.frame=window.requestAnimationFrame(this.renderCanvas)}}},{key:"componentWillUnmount",value:function(){window.cancelAnimationFrame(this.frame)}},{key:"onClickCanvas",value:function(t){t.preventDefault(),this.sceneIndex=(this.sceneIndex+1)%this.scenes.length;var e=this.scenes[this.sceneIndex];e.init||(e.init=!0,e.render.initScene(this.gl))}},{key:"renderCanvas",value:function(t){t*=.001,this.timeStamp||(this.timeStamp=t);var e=t-this.timeStamp;this.timeStamp=t,this.scenes[this.sceneIndex].render.drawScene(this.gl,e),this.frame=window.requestAnimationFrame(this.renderCanvas)}},{key:"render",value:function(){var t=this;return n.a.createElement("div",{className:"screen"},n.a.createElement("canvas",{className:"canvas",ref:function(e){return t.canvas=e},onClick:this.onClickCanvas}))}}]),e}(n.a.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));a.a.render(n.a.createElement(y,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(t){t.unregister()}))}},[[13,1,2]]]);
//# sourceMappingURL=main.3e16874a.chunk.js.map