{"version":3,"sources":["components/Message.js","components/Controls.js","components/Credits.js","lib/utility.js","models/Model.js","lib/shapes.js","models/ColorModel.js","scenes/ColorScene.js","models/TexturedCubeModel.js","scenes/TextureScene.js","lib/materials.js","lib/maze.js","models/MazeModel.js","scenes/MazeScene.js","models/BrickWallModel.js","scenes/BrickWallScene.js","models/MaterialModel.js","scenes/MaterialScene.js","lib/collision.js","models/RoomModel.js","scenes/RoomScene.js","lib/SceneManager.js","components/App.js","serviceWorker.js","index.js"],"names":["Message","message","onClick","id","map","text","index","key","DescriptionControl","props","control","className","description","SelectControl","options","i","length","push","value","htmlFor","name","onChange","event","target","BoolControl","type","checked","IntControl","min","max","FloatControl","factor","toFixed","Math","floor","FunctionControl","function","Controls","controls","show","onClickPrevious","onClickNext","option","Credits","children","credits","credit","startsWith","url","slice","href","rel","degreesToRadians","degrees","PI","_typeToString","gl","FLOAT","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT","INT_VEC2","INT_VEC3","INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","SAMPLER_CUBE","_loadShader","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","alert","getShaderInfoLog","deleteShader","loadTexture","texture","createTexture","bindTexture","TEXTURE_2D","internalFormat","RGBA","srcFormat","srcType","UNSIGNED_BYTE","pixel","Uint8Array","texImage2D","image","Image","onload","_isPowerOf2","width","height","generateMipmap","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","src","clearScreen","clearColor","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","pickRandom","data","random","Model","vertexShader","fragmentShader","geometry","bufferCount","textures","diffuse","normal","occlusion","Promise","all","fetch","vertex","then","response","fragment","_setupShader","buffers","_initBuffers","model","shaders","vertexShaders","Array","fill","fragmentShaders","pendingLoads","this","_deleteBuffers","shaderProgram","vsSource","fsSource","VERTEX_SHADER","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","initShaderProgram","shaderParameters","attributeCount","ACTIVE_ATTRIBUTES","attributes","attribute","getActiveAttrib","uniformCount","ACTIVE_UNIFORMS","uniforms","uniform","getActiveUniform","getShaderParameters","program","attribLocations","uniformLocations","forEach","location","getAttribLocation","_addShaderNameToJavascript","getUniformLocation","shaderLocations","inputName","names","toLowerCase","split","out","subBeg","indexOf","subEnd","Number","requirements","vertexNormal","vertexTangent","vertexBitangent","textureCoord","vertexColor","vec3","tangent","bitangent","inputBuffers","positions","normals","tangents","bitangents","textureCoordinates","colors","indices","offset","addSquare","c0","c1","c2","c3","inputBuffer","bufferIndex","color","addFace","vertices","face","addTriangle","c4","addPentagon","addFaces","faces","outputBuffers","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","indexBuffer","ELEMENT_ARRAY_BUFFER","Uint16Array","outputBuffer","position","vertexCount","normalBuffer","tangentBuffer","bitangentBuffer","textureCoordBuffer","colorBuffer","buffer","prop","hasOwnProperty","deleteBuffer","projectionMatrix","viewMatrix","modelMatrix","shaderIndex","material","materials","undefined","vertexAttribPointer","vertexPosition","enableVertexAttribArray","useProgram","uniformMatrix4fv","normalMatrix","mat4","showDiffuseMap","uniform1i","showNormalMap","showAmbientOcclusionMap","showParallaxMap","lightingModel","parallaxHeightScale","uniform1f","parallaxSteps","parallaxOcclusionMapping","ambientLight","uniform3fv","directionalLight","direction","pointLight","brightness","lights","light","ambient","specular","shininess","cameraPos","samplerDiffuse","activeTexture","TEXTURE0","samplerNormal","TEXTURE1","samplerHeight","TEXTURE2","samplerOcclusion","TEXTURE3","UNSIGNED_SHORT","drawElements","TRIANGLES","numAttributes","disableVertexAttribArray","getShape","shape","s3","sqrt","s6","r","a","step","theta","x","cos","y","sin","phi","b","c","ColorModel","shapeName","draw","bind","_initModel","_drawModel","ColorScene","setOption","initScene","drawScene","renderOptions","model6","model12","scene","actors","scale","rotations","angle","axis","speed","camera","deltaTime","fieldOfView","aspect","canvas","clientWidth","clientHeight","actor","_renderActor","_animateActor","rotation","TexturedCubeModel","_geometry","f0","f1","f2","f3","b0","b1","b2","b3","TextureScene","_materials","emerald","jade","obsidian","pearl","ruby","turquoise","brass","bronze","chrome","copper","gold","silver","blackPlastic","cyanPlastic","greenPlastic","redPlastic","whitePlastic","yellowPlastic","blackRubber","cyanRubber","greenRubber","redRubber","whiteRubber","yellowRubber","getMaterialList","getMaterial","_directions","generateMaze","windiness","carve","pos","canCarve","dir","isInBounds","addDir","nxt","len","lastDir","start","cells","cell","posCells","includes","pop","generateDungeon","regions","region","carveRegion","my","mx","incrementRegion","numRoomTries","roomExtraSize","rooms","size","_range","rectangularity","room","overlaps","j","other","_isOverlapped","xOffset","yOffset","_addRooms","_createMaze","connectors","connectedRegions","merged","openRegions","connector","_carve","dest","sources","filter","con","abs","_connectRegions","done","exits","_fill","_removeDeadEnds","getMazeBoundingSquares","mapBounds","ofs_x","ofs_y","x1","y1","x2","y2","getMazeSquareCenter","z","_canCarve","_addDir","_isInBounds","pri","sec","MazeModel","maze","update","_updateModel","floorColor","ceilingColor","wallColor_Back","wallColor_Front","wallColor_Left","wallColor_Right","left","right","back","front","MazeScene","createMaze","createDungeon","totalDelta","useMaterials","materialName","_generateMaze","_generateDungeon","BrickWallModel","BrickWallScene","MaterialModel","MaterialScene","materialList","model4","model8","model10","model20","materialIndex","collideCircles","cx","cy","radius","tx","ty","targetRadius","collideCircleRectangle","epsilon","testX","testY","distX","distY","RoomModel","check","f0h","top","f1h","f2h","bottom","f3h","b0h","b1h","b2h","b3h","neighbors","yo","xo","shapes","RoomScene","mouseMovement","keyboardState","registerDataChange","forceDataChange","movement","side","keys","onDataChange","_updatePowerUpInfo","_updateMap","dungeon","ready","isSolid","matrix","square","nextSquare","getMazeStartLocation","boundingRectagles","active","_placePowerUps","sx","sy","boundingRadius","collected","total","_detectCollisions","collision","rect","SceneManager","resizeViewport","getScene","previousScene","nextScene","renderScene","getContext","CULL_FACE","cullFace","BACK","scenes","sceneIndex","getBoundingClientRect","viewport","timeStamp","exploreNotes","movementNotes","App","onResize","onKeyDown","onKeyUp","onMouseMove","onLockChange","onClickCanvas","onClickMessage","onAnimationFrame","state","showControls","sceneManager","notes","setState","sceneData","requestPointerLock","mozRequestPointerLock","document","exitPointerLock","mozExitPointerLock","frame","window","requestAnimationFrame","addEventListener","showMessage","cancelAnimationFrame","removeEventListener","captureMouse","captureKeys","preventDefault","onKeyPress","messageTimer","cancelMessage","cancelLock","movementX","movementY","pointerLockElement","mozPointerLockElement","forceUpdate","setTimeout","clearMessage","clearTimeout","ref","elem","note","React","Component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.ef0ecb12.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Message = ({ message, onClick }) => {\r\n  if (!message) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div id=\"message\" onClick={onClick}>\r\n      {message.map((text, index) => (<div key={index}>{text}</div>))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\n\r\nconst DescriptionControl = (props) => {\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      {control.description}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst SelectControl = (props) => {\r\n  function onChange(event) {\r\n    props.onChange(control, event.target.value);\r\n  }\r\n  const { control } = props;\r\n  const options = [];\r\n  for (let i = 0; i < control.options.length; i++) {\r\n    options.push(\r\n      (<option key={i} value={i}>{control.options[i]}</option>)\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"control\">\r\n      <label htmlFor={control.name}>{control.name}</label>\r\n      <select id={control.name} className=\"select-css\" value={control.value} onChange={onChange}>\r\n        {options}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst BoolControl = (props) => {\r\n  function onChange(event) {\r\n    props.onChange(control, event.target.checked);\r\n  }\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      <label className=\"clickable\" htmlFor={control.name}><input className=\"clickable\" id={control.name} type=\"checkbox\" checked={control.value} onChange={onChange} />{control.name}</label>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst IntControl = (props) => {\r\n  function onChange(event) {\r\n    props.onChange(control, event.target.value);\r\n  }\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      <label htmlFor={control.name}>{control.name} {control.value}</label>\r\n      <input id={control.name} className=\"clickable\" type=\"range\" min={control.min} max={control.max} value={control.value} onChange={onChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst FloatControl = (props) => {\r\n  const factor = 1000;\r\n  function onChange(event) {\r\n    props.onChange(control, event.target.value / factor);\r\n  }\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      <label htmlFor={control.name}>{control.name} {control.value.toFixed(3)}</label>\r\n      <input id={control.name} className=\"clickable\" type=\"range\" min={Math.floor(control.min * factor)} max={Math.floor(control.max * factor)} value={Math.floor(control.value * factor)} onChange={onChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst FunctionControl = (props) => {\r\n  function onClick(event) {\r\n    control.function();\r\n  }\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      <button onClick={onClick}>{control.name}</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Controls = ({ show, onClickPrevious, onClickNext, onChange, options }) => {\r\n  if (!show) {\r\n    return null;\r\n  }\r\n  let controls\r\n  if (options) {\r\n    controls = options.map((option, index) => {\r\n      switch (option.type) {\r\n        case 'description':\r\n          return <DescriptionControl key={index} control={option} />\r\n        case 'select':\r\n          return <SelectControl key={index} control={option} onChange={onChange} />\r\n        case 'bool':\r\n          return <BoolControl key={index} control={option} onChange={onChange} />\r\n        case 'int':\r\n          return <IntControl key={index} control={option} onChange={onChange} />\r\n        case 'float':\r\n          return <FloatControl key={index} control={option} onChange={onChange} />\r\n        case 'function':\r\n          return <FunctionControl key={index} control={option} />\r\n        default:\r\n          return (\r\n            <div key={index} className=\"control\">{option.type} is not supported</div>\r\n          );\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <div id=\"overlay\">\r\n      <div className=\"none\">\r\n        <span className=\"left\" onClick={onClickPrevious}>❮ PREV</span>\r\n        <span className=\"right\" onClick={onClickNext}>NEXT ❯</span>\r\n      </div>\r\n      <div>\r\n        {controls}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Controls;\r\n","import React from 'react';\r\n\r\nconst Credits = ({ show, credits }) => {\r\n  if (!show) {\r\n    return null;\r\n  }\r\n  let children\r\n  if (credits) {\r\n    children = credits.map((credit, index) => {\r\n      if (credit.startsWith('link:')) {\r\n        const url = credit.slice(5);\r\n        return (\r\n          <div key={index} className=\"credit\"><a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{url}</a></div>\r\n        );\r\n      } else if (credit === '') {\r\n        return (\r\n          <div key={index} className=\"credit\"></div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div key={index} className=\"credit\">{credit}</div>\r\n        );\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <div id=\"credits\">\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Credits;\r\n","export function degreesToRadians(degrees) {\r\n  var pi = Math.PI;\r\n  return degrees * (pi / 180);\r\n}\r\n\r\nexport function initShaderProgram(gl, vsSource, fsSource) {\r\n  const vertexShader = _loadShader(gl, gl.VERTEX_SHADER, vsSource);\r\n  const fragmentShader = _loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\r\n  const shaderProgram = gl.createProgram();\r\n  gl.attachShader(shaderProgram, vertexShader);\r\n  gl.attachShader(shaderProgram, fragmentShader);\r\n  gl.linkProgram(shaderProgram);\r\n  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n    alert('Unable to initialize the shader program: ' + gl.getProgramInfoLog(shaderProgram));\r\n    return null;\r\n  }\r\n  return shaderProgram;\r\n}\r\n\r\nexport function getShaderParameters(gl, shaderProgram) {\r\n  const attributeCount = gl.getProgramParameter(shaderProgram, gl.ACTIVE_ATTRIBUTES);\r\n  const attributes = [];\r\n  for (let i = 0; i < attributeCount; i++) {\r\n    const attribute = gl.getActiveAttrib(shaderProgram, i);\r\n    attributes.push({ name: attribute.name, type: _typeToString(gl, attribute.type) });\r\n  }\r\n  const uniformCount = gl.getProgramParameter(shaderProgram, gl.ACTIVE_UNIFORMS);\r\n  const uniforms = [];\r\n  for (let i = 0; i < uniformCount; i++) {\r\n    const uniform = gl.getActiveUniform(shaderProgram, i);\r\n    uniforms.push({ name: uniform.name, type: _typeToString(gl, uniform.type) });\r\n  }\r\n  return {\r\n    attributes,\r\n    uniforms\r\n  };\r\n}\r\n\r\nfunction _typeToString(gl, type) {\r\n  switch (type) {\r\n    case gl.FLOAT:\r\n      return \"FLOAT\";\r\n    case gl.FLOAT_VEC2:\r\n      return \"FLOAT_VEC2\";\r\n    case gl.FLOAT_VEC3:\r\n      return \"FLOAT_VEC3\";\r\n    case gl.FLOAT_VEC4:\r\n      return \"FLOAT_VEC4\";\r\n    case gl.INT:\r\n      return \"INT\";\r\n    case gl.INT_VEC2:\r\n      return \"INT_VEC2\";\r\n    case gl.INT_VEC3:\r\n      return \"INT_VEC3\";\r\n    case gl.INT_VEC4:\r\n      return \"INT_VEC4\";\r\n    case gl.BOOL:\r\n      return \"BOOL\";\r\n    case gl.BOOL_VEC2:\r\n      return \"BOOL_VEC2\";\r\n    case gl.BOOL_VEC3:\r\n      return \"BOOL_VEC3\";\r\n    case gl.BOOL_VEC4:\r\n      return \"BOOL_VEC4\";\r\n    case gl.FLOAT_MAT2:\r\n      return \"FLOAT_MAT2\";\r\n    case gl.FLOAT_MAT3:\r\n      return \"FLOAT_MAT3\";\r\n    case gl.FLOAT_MAT4:\r\n      return \"FLOAT_MAT4\";\r\n    case gl.SAMPLER_2D:\r\n      return \"SAMPLER_2D\";\r\n    case gl.SAMPLER_CUBE:\r\n      return \"SAMPLER_CUBE\";\r\n    default:\r\n      return \"UNKNOWN\";\r\n  }\r\n}\r\n\r\nfunction _loadShader(gl, type, source) {\r\n  const shader = gl.createShader(type);\r\n  gl.shaderSource(shader, source);\r\n  gl.compileShader(shader);\r\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n    alert('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader));\r\n    gl.deleteShader(shader);\r\n    return null;\r\n  }\r\n  return shader;\r\n}\r\n\r\nexport function loadTexture(gl, url) {\r\n  const texture = gl.createTexture();\r\n  gl.bindTexture(gl.TEXTURE_2D, texture);\r\n  const level = 0;\r\n  const internalFormat = gl.RGBA;\r\n  const width = 1;\r\n  const height = 1;\r\n  const border = 0;\r\n  const srcFormat = gl.RGBA;\r\n  const srcType = gl.UNSIGNED_BYTE;\r\n  const pixel = new Uint8Array([0, 0, 255, 255]);\r\n  gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\r\n  const image = new Image();\r\n  image.onload = () => {\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\r\n      srcFormat, srcType, image);\r\n    if (_isPowerOf2(image.width) && _isPowerOf2(image.height)) {\r\n      gl.generateMipmap(gl.TEXTURE_2D);\r\n    } else {\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    }\r\n  };\r\n  image.src = url;\r\n  return texture;\r\n}\r\n\r\nfunction _isPowerOf2(value) {\r\n  return (value & (value - 1)) === 0;\r\n}\r\n\r\nexport function clearScreen(gl) {\r\n  gl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n  gl.clearDepth(1.0);\r\n  gl.enable(gl.DEPTH_TEST);\r\n  gl.depthFunc(gl.LEQUAL);\r\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n}\r\n\r\nexport function pickRandom(data) {\r\n  return data[Math.floor(Math.random() * data.length)];\r\n}\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport * as vec3 from 'gl-matrix/vec3';\r\nimport { loadTexture, initShaderProgram, getShaderParameters } from '../lib/utility'\r\n\r\nclass Model {\r\n  _initModel(options) {\r\n    const { gl, geometry, bufferCount } = options;\r\n\r\n    const textures = [];\r\n    if (options.texture) {\r\n      const texture = {};\r\n      if (options.texture.diffuse) {\r\n        texture.diffuse = loadTexture(gl, options.texture.diffuse);\r\n      }\r\n      if (options.texture.normal) {\r\n        texture.normal = loadTexture(gl, options.texture.normal);\r\n      }\r\n      if (options.texture.height) {\r\n        texture.height = loadTexture(gl, options.texture.height);\r\n      }\r\n      if (options.texture.occlusion) {\r\n        texture.occlusion = loadTexture(gl, options.texture.occlusion);\r\n      }\r\n      textures.push(texture);\r\n    } else if (options.textures) {\r\n      for (let i = 0; i < options.textures.length; i++) {\r\n        const texture = {};\r\n        if (options.textures[i].diffuse) {\r\n          texture.diffuse = loadTexture(gl, options.textures[i].diffuse);\r\n        }\r\n        if (options.textures[i].normal) {\r\n          texture.normal = loadTexture(gl, options.textures[i].normal);\r\n        }\r\n        if (options.textures[i].height) {\r\n          texture.height = loadTexture(gl, options.textures[i].height);\r\n        }\r\n        if (options.textures[i].occlusion) {\r\n          texture.occlusion = loadTexture(gl, options.textures[i].occlusion);\r\n        }\r\n        textures.push(texture);\r\n      }\r\n    }\r\n\r\n    if (options.shader) {\r\n      let vertexShader;\r\n      let fragmentShader;\r\n      Promise.all([\r\n        fetch(options.shader.vertex).then((response) => response.text()).then((text) => vertexShader = text),\r\n        fetch(options.shader.fragment).then((response) => response.text()).then((text) => fragmentShader = text)\r\n      ]).then(() => {\r\n        const shader = this._setupShader(gl, vertexShader, fragmentShader);\r\n        const buffers = this._initBuffers(gl, [shader], geometry, bufferCount || textures.length || 1);\r\n        this.model = {\r\n          shaders: [shader],\r\n          buffers,\r\n          textures\r\n        };\r\n      });\r\n    }\r\n    else {\r\n      const vertexShaders = new Array(options.shaders.length).fill(null);\r\n      const fragmentShaders = new Array(options.shaders.length).fill(null);\r\n      const pendingLoads = [];\r\n      for (let i = 0; i < options.shaders.length; i++) {\r\n        pendingLoads.push(fetch(options.shaders[i].vertex).then((response) => response.text()).then((text) => vertexShaders[i] = text));\r\n        pendingLoads.push(fetch(options.shaders[i].fragment).then((response) => response.text()).then((text) => fragmentShaders[i] = text));\r\n      }\r\n\r\n      Promise.all(pendingLoads)\r\n        .then(() => {\r\n          const shaders = [];\r\n          for (let i = 0; i < options.shaders.length; i++) {\r\n            shaders.push(this._setupShader(gl, vertexShaders[i], fragmentShaders[i]));\r\n          }\r\n          const buffers = this._initBuffers(gl, shaders, geometry, bufferCount || textures.length || 1);\r\n          this.model = {\r\n            shaders,\r\n            buffers,\r\n            textures\r\n          };\r\n        });\r\n    }\r\n  }\r\n\r\n  _updateModel(geometry) {\r\n    const bufferCount = this.model.buffers.length;\r\n    this._deleteBuffers();\r\n    this.model.buffers = this._initBuffers(this.gl, this.model.shaders, geometry, bufferCount);\r\n  }\r\n\r\n  _setupShader(gl, vertexShader, fragmentShader) {\r\n    const shaderProgram = initShaderProgram(gl, vertexShader, fragmentShader);\r\n    const shaderParameters = getShaderParameters(gl, shaderProgram);\r\n    const shader = {\r\n      program: shaderProgram,\r\n      attribLocations: {},\r\n      uniformLocations: {}\r\n    };\r\n    shaderParameters.attributes.forEach((attribute) => {\r\n      const location = gl.getAttribLocation(shaderProgram, attribute.name)\r\n      this._addShaderNameToJavascript(shader.attribLocations, attribute.name, location);\r\n    });\r\n    shaderParameters.uniforms.forEach((uniform) => {\r\n      const location = gl.getUniformLocation(shaderProgram, uniform.name)\r\n      this._addShaderNameToJavascript(shader.uniformLocations, uniform.name, location);\r\n    });\r\n    return shader;\r\n  }\r\n\r\n  _addShaderNameToJavascript(shaderLocations, inputName, location) {\r\n    if (inputName[0] !== 'a' && inputName[0] !== 'u') {\r\n      alert('shader name of ' + inputName + ' is not valid');\r\n      return;\r\n    }\r\n    let outputName = inputName[1].toLowerCase() + inputName.slice(2);\r\n    const names = outputName.split('.');\r\n    let out = shaderLocations;\r\n    for (let i = 0; i < names.length; i++) {\r\n      let name = names[i];\r\n      const subBeg = name.indexOf('[');\r\n      if (subBeg !== -1) {\r\n        const subEnd = name.indexOf(']');\r\n        if (subEnd < subBeg + 2) {\r\n          alert('shader name of ' + inputName + ' is not valid');\r\n          return;\r\n        }\r\n        const index = Number(name.slice(subBeg + 1, subEnd));\r\n        name = name.slice(0, subBeg);\r\n        if (i < names.length - 1) {\r\n          if (!out[name]) {\r\n            out[name] = [];\r\n          }\r\n          if (out[name].length <= index) {\r\n            out[name].length = index + 1;\r\n          }\r\n          if (!out[name][index]) {\r\n            out[name][index] = {};\r\n          }\r\n          out = out[name][index];\r\n        } else {\r\n          if (!out[name]) {\r\n            out[name] = [];\r\n          }\r\n          if (out[name].length <= index) {\r\n            out[name].length = index + 1;\r\n          }\r\n          out[name][index] = location;\r\n        }\r\n      } else {\r\n        if (i < names.length - 1) {\r\n          if (!out[name]) {\r\n            out[name] = {};\r\n          }\r\n          out = out[name];\r\n        } else {\r\n          out[name] = location;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _initBuffers(gl, shaders, geometry, bufferCount) {\r\n    const requirements = {};\r\n\r\n    for (let i = 0; i < shaders.length; i++) {\r\n      const shader = shaders[i];\r\n\r\n      if (shader.attribLocations.vertexNormal) {\r\n        requirements.vertexNormal = true;\r\n      }\r\n\r\n      if (shader.attribLocations.vertexTangent) {\r\n        requirements.vertexTangent = true;\r\n      }\r\n\r\n      if (shader.attribLocations.vertexBitangent) {\r\n        requirements.vertexBitangent = true;\r\n      }\r\n\r\n      if (shader.attribLocations.textureCoord) {\r\n        requirements.textureCoord = true;\r\n      }\r\n\r\n      if (shader.attribLocations.vertexColor) {\r\n        requirements.vertexColor = true;\r\n      }\r\n    }\r\n\r\n    const normal = vec3.create();\r\n    const tangent = vec3.create();\r\n    const bitangent = vec3.create();\r\n\r\n    const inputBuffers = [];\r\n\r\n    for (let i = 0; i < bufferCount; i++) {\r\n      inputBuffers.push({\r\n        positions: [],\r\n        normals: [],\r\n        tangents: [],\r\n        bitangents: [],\r\n        textureCoordinates: [],\r\n        colors: [],\r\n        indices: [],\r\n        offset: 0\r\n      });\r\n    }\r\n\r\n    const addSquare = (c0, c1, c2, c3, options) => {\r\n      let inputBuffer;\r\n      if (options && options.bufferIndex) {\r\n        inputBuffer = inputBuffers[options.bufferIndex];\r\n      } else {\r\n        inputBuffer = inputBuffers[0];\r\n      }\r\n\r\n      const { positions, normals, tangents, bitangents, textureCoordinates, colors, indices, offset } = inputBuffer;\r\n\r\n      positions.push(...c0, ...c1, ...c2, ...c3);\r\n      indices.push(offset + 0, offset + 1, offset + 2, offset + 2, offset + 3, offset + 0);\r\n      inputBuffer.offset += 4;\r\n\r\n      if (requirements.vertexNormal || requirements.vertexTangent || requirements.vertexBitangent) {\r\n        vec3.subtract(tangent, c1, c0);\r\n        vec3.subtract(bitangent, c3, c0);\r\n\r\n        if (requirements.vertexNormal) {\r\n          vec3.cross(normal, tangent, bitangent);\r\n          vec3.normalize(normal, normal);\r\n          normals.push(...normal, ...normal, ...normal, ...normal);\r\n        }\r\n\r\n        if (requirements.vertexTangent) {\r\n          vec3.normalize(tangent, tangent);\r\n          tangents.push(...tangent, ...tangent, ...tangent, ...tangent);\r\n        }\r\n\r\n        if (requirements.vertexBitangent) {\r\n          vec3.normalize(bitangent, bitangent);\r\n          bitangents.push(...bitangent, ...bitangent, ...bitangent, ...bitangent);\r\n        }\r\n      }\r\n\r\n      if (requirements.textureCoord) {\r\n        textureCoordinates.push(0, 0, 1, 0, 1, 1, 0, 1);\r\n      }\r\n\r\n      if (requirements.vertexColor) {\r\n        colors.push(...options.color, ...options.color, ...options.color, ...options.color);\r\n      }\r\n    }\r\n\r\n    const addTriangle = (c0, c1, c2, options) => {\r\n      let inputBuffer;\r\n      if (options.bufferIndex) {\r\n        inputBuffer = inputBuffers[options.bufferIndex];\r\n      } else {\r\n        inputBuffer = inputBuffers[0];\r\n      }\r\n\r\n      const { positions, normals, tangents, bitangents, colors, indices, offset } = inputBuffer;\r\n\r\n      positions.push(...c0, ...c1, ...c2);\r\n      indices.push(offset + 0, offset + 1, offset + 2);\r\n      inputBuffer.offset += 3;\r\n\r\n      if (requirements.vertexNormal || requirements.vertexTangent || requirements.vertexBitangent) {\r\n        vec3.subtract(tangent, c1, c0);\r\n        vec3.subtract(bitangent, c2, c0);\r\n\r\n        if (requirements.vertexNormal) {\r\n          vec3.cross(normal, tangent, bitangent);\r\n          vec3.normalize(normal, normal);\r\n          normals.push(...normal, ...normal, ...normal);\r\n        }\r\n\r\n        if (requirements.vertexTangent) {\r\n          vec3.normalize(tangent, tangent);\r\n          tangents.push(...tangent, ...tangent, ...tangent);\r\n        }\r\n\r\n        if (requirements.vertexBitangent) {\r\n          vec3.normalize(bitangent, bitangent);\r\n          bitangents.push(...bitangent, ...bitangent, ...bitangent);\r\n        }\r\n      }\r\n\r\n      if (requirements.vertexColor) {\r\n        colors.push(...options.color, ...options.color, ...options.color);\r\n      }\r\n    }\r\n\r\n    const addPentagon = (c0, c1, c2, c3, c4, options) => {\r\n      let inputBuffer;\r\n      if (options.bufferIndex) {\r\n        inputBuffer = inputBuffers[options.bufferIndex];\r\n      } else {\r\n        inputBuffer = inputBuffers[0];\r\n      }\r\n\r\n      const { positions, normals, tangents, bitangents, colors, indices, offset } = inputBuffer;\r\n\r\n      positions.push(...c0, ...c1, ...c2, ...c3, ...c4);\r\n      indices.push(offset + 0, offset + 3, offset + 4, offset + 0, offset + 1, offset + 3, offset + 1, offset + 2, offset + 3);\r\n      inputBuffer.offset += 5;\r\n\r\n      if (requirements.vertexNormal || requirements.vertexTangent || requirements.vertexBitangent) {\r\n        vec3.subtract(tangent, c1, c0);\r\n        vec3.subtract(bitangent, c4, c0);\r\n\r\n        if (requirements.vertexNormal) {\r\n          vec3.cross(normal, tangent, bitangent);\r\n          vec3.normalize(normal, normal);\r\n          normals.push(...normal, ...normal, ...normal, ...normal, ...normal);\r\n        }\r\n\r\n        if (requirements.vertexTangent) {\r\n          vec3.normalize(tangent, tangent);\r\n          tangents.push(...tangent, ...tangent, ...tangent, ...tangent, ...tangent);\r\n        }\r\n\r\n        if (requirements.vertexBitangent) {\r\n          vec3.normalize(bitangent, bitangent);\r\n          bitangents.push(...bitangent, ...bitangent, ...bitangent, ...bitangent, ...bitangent);\r\n        }\r\n      }\r\n\r\n      if (requirements.vertexColor) {\r\n        colors.push(...options.color, ...options.color, ...options.color, ...options.color, ...options.color);\r\n      }\r\n    }\r\n\r\n    const addFace = (vertices, face, options) => {\r\n      switch (face.length) {\r\n        case 3:\r\n          addTriangle(vertices[face[0]], vertices[face[1]], vertices[face[2]], options);\r\n          break;\r\n        case 4:\r\n          addSquare(vertices[face[0]], vertices[face[1]], vertices[face[2]], vertices[face[3]], options);\r\n          break;\r\n        case 5:\r\n          addPentagon(vertices[face[0]], vertices[face[1]], vertices[face[2]], vertices[face[3]], vertices[face[4]], options);\r\n          break;\r\n        default:\r\n          alert('faces with ' + face.length + ' vertices are not supported');\r\n      }\r\n    }\r\n\r\n    const addFaces = (vertices, faces, options) => {\r\n      for (let i = 0; i < faces.length; i++) {\r\n        let option = {}\r\n        if (options) {\r\n          if (options.colors) {\r\n            option.color = options.colors[i % options.colors.length];\r\n          }\r\n        }\r\n        addFace(vertices, faces[i], option);\r\n      }\r\n    }\r\n\r\n    geometry({ addSquare, addFaces });\r\n\r\n    const outputBuffers = [];\r\n\r\n    for (let i = 0; i < bufferCount; i++) {\r\n      const inputBuffer = inputBuffers[i];\r\n      const { positions, normals, tangents, bitangents, textureCoordinates, colors, indices } = inputBuffer;\r\n\r\n      const positionBuffer = gl.createBuffer();\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n      gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\r\n\r\n      const indexBuffer = gl.createBuffer();\r\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\r\n\r\n      const outputBuffer = { position: positionBuffer, indices: indexBuffer, vertexCount: indices.length }\r\n\r\n      if (requirements.vertexNormal) {\r\n        const normalBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, normalBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(normals), gl.STATIC_DRAW);\r\n        outputBuffer.normal = normalBuffer;\r\n      }\r\n\r\n      if (requirements.vertexTangent) {\r\n        const tangentBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, tangentBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(tangents), gl.STATIC_DRAW);\r\n        outputBuffer.tangent = tangentBuffer;\r\n      }\r\n\r\n      if (requirements.vertexBitangent) {\r\n        const bitangentBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, bitangentBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(bitangents), gl.STATIC_DRAW);\r\n        outputBuffer.bitangent = bitangentBuffer;\r\n      }\r\n\r\n      if (requirements.textureCoord) {\r\n        const textureCoordBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, textureCoordBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(textureCoordinates), gl.STATIC_DRAW);\r\n        outputBuffer.textureCoord = textureCoordBuffer;\r\n      }\r\n\r\n      if (requirements.vertexColor) {\r\n        const colorBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW);\r\n        outputBuffer.color = colorBuffer;\r\n      }\r\n\r\n      outputBuffers.push(outputBuffer);\r\n    }\r\n\r\n    return outputBuffers;\r\n  }\r\n\r\n  _deleteBuffers() {\r\n    const buffers = this.model.buffers;\r\n    for (let i = 0; i < buffers.length; i++) {\r\n      const buffer = buffers[i];\r\n      buffer.vertexCount = 0;\r\n      for (const prop in buffer) {\r\n        if (buffer.hasOwnProperty(prop) && typeof buffer[prop] === 'object') {\r\n          this.gl.deleteBuffer(buffer[prop]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _drawModel(options) {\r\n    if (!this.model) {\r\n      return;\r\n    }\r\n\r\n    const gl = this.gl;\r\n    const model = this.model;\r\n    const { projectionMatrix, viewMatrix, modelMatrix } = options;\r\n    const { shaders, buffers, textures } = model;\r\n    const shader = shaders[options.shaderIndex ? options.shaderIndex : 0];\r\n\r\n    for (let i = 0; i < buffers.length; i++) {\r\n      const buffer = buffers[i];\r\n      const texture = textures[i];\r\n      const material = options.material ? options.material : (options.materials ? options.materials[i] : undefined);\r\n\r\n      {\r\n        const numComponents = 3;\r\n        const type = gl.FLOAT;\r\n        const normalize = false;\r\n        const stride = 0;\r\n        const offset = 0;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer.position);\r\n        gl.vertexAttribPointer(shader.attribLocations.vertexPosition, numComponents, type, normalize, stride, offset);\r\n        gl.enableVertexAttribArray(shader.attribLocations.vertexPosition);\r\n      }\r\n\r\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer.indices);\r\n\r\n      if (shader.attribLocations.vertexNormal && buffer.normal) {\r\n        const numComponents = 3;\r\n        const type = gl.FLOAT;\r\n        const normalize = false;\r\n        const stride = 0;\r\n        const offset = 0;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer.normal);\r\n        gl.vertexAttribPointer(shader.attribLocations.vertexNormal, numComponents, type, normalize, stride, offset);\r\n        gl.enableVertexAttribArray(shader.attribLocations.vertexNormal);\r\n      }\r\n\r\n      if (shader.attribLocations.vertexTangent && buffer.tangent) {\r\n        const numComponents = 3;\r\n        const type = gl.FLOAT;\r\n        const normalize = false;\r\n        const stride = 0;\r\n        const offset = 0;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer.tangent);\r\n        gl.vertexAttribPointer(shader.attribLocations.vertexTangent, numComponents, type, normalize, stride, offset);\r\n        gl.enableVertexAttribArray(shader.attribLocations.vertexTangent);\r\n      }\r\n\r\n      if (shader.attribLocations.vertexBitangent && buffer.bitangent) {\r\n        const numComponents = 3;\r\n        const type = gl.FLOAT;\r\n        const normalize = false;\r\n        const stride = 0;\r\n        const offset = 0;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer.bitangent);\r\n        gl.vertexAttribPointer(shader.attribLocations.vertexBitangent, numComponents, type, normalize, stride, offset);\r\n        gl.enableVertexAttribArray(shader.attribLocations.vertexBitangent);\r\n      }\r\n\r\n      if (shader.attribLocations.textureCoord && buffer.textureCoord) {\r\n        const numComponents = 2;\r\n        const type = gl.FLOAT;\r\n        const normalize = false;\r\n        const stride = 0;\r\n        const offset = 0;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer.textureCoord);\r\n        gl.vertexAttribPointer(shader.attribLocations.textureCoord, numComponents, type, normalize, stride, offset);\r\n        gl.enableVertexAttribArray(shader.attribLocations.textureCoord);\r\n      }\r\n\r\n      if (shader.attribLocations.vertexColor && buffer.color) {\r\n        const numComponents = 3;\r\n        const type = gl.FLOAT;\r\n        const normalize = false;\r\n        const stride = 0;\r\n        const offset = 0;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer.color);\r\n        gl.vertexAttribPointer(shader.attribLocations.vertexColor, numComponents, type, normalize, stride, offset);\r\n        gl.enableVertexAttribArray(shader.attribLocations.vertexColor);\r\n      }\r\n\r\n      gl.useProgram(shader.program);\r\n      gl.uniformMatrix4fv(shader.uniformLocations.projectionMatrix, false, projectionMatrix);\r\n      gl.uniformMatrix4fv(shader.uniformLocations.modelMatrix, false, modelMatrix);\r\n      gl.uniformMatrix4fv(shader.uniformLocations.viewMatrix, false, viewMatrix);\r\n\r\n      if (shader.uniformLocations.normalMatrix) {\r\n        const normalMatrix = mat4.create();\r\n        mat4.invert(normalMatrix, modelMatrix);\r\n        mat4.transpose(normalMatrix, normalMatrix);\r\n        gl.uniformMatrix4fv(shader.uniformLocations.normalMatrix, false, normalMatrix);\r\n      }\r\n\r\n      if (shader.uniformLocations.showDiffuseMap && options.showDiffuseMap !== undefined) {\r\n        gl.uniform1i(shader.uniformLocations.showDiffuseMap, options.showDiffuseMap);\r\n      }\r\n\r\n      if (shader.uniformLocations.showNormalMap && options.showNormalMap !== undefined) {\r\n        gl.uniform1i(shader.uniformLocations.showNormalMap, options.showNormalMap);\r\n      }\r\n\r\n      if (shader.uniformLocations.showAmbientOcclusionMap && options.showAmbientOcclusionMap !== undefined) {\r\n        gl.uniform1i(shader.uniformLocations.showAmbientOcclusionMap, options.showAmbientOcclusionMap);\r\n      }\r\n\r\n      if (shader.uniformLocations.showParallaxMap && options.showParallaxMap !== undefined) {\r\n        gl.uniform1i(shader.uniformLocations.showParallaxMap, options.showParallaxMap);\r\n      }\r\n\r\n      if (shader.uniformLocations.lightingModel && options.lightingModel !== undefined) {\r\n        gl.uniform1i(shader.uniformLocations.lightingModel, options.lightingModel);\r\n      }\r\n\r\n      if (shader.uniformLocations.parallaxHeightScale && options.parallaxHeightScale !== undefined) {\r\n        gl.uniform1f(shader.uniformLocations.parallaxHeightScale, options.parallaxHeightScale);\r\n      }\r\n\r\n      if (shader.uniformLocations.parallaxSteps && options.parallaxSteps !== undefined) {\r\n        gl.uniform1i(shader.uniformLocations.parallaxSteps, options.parallaxSteps);\r\n      }\r\n\r\n      if (shader.uniformLocations.parallaxOcclusionMapping && options.parallaxOcclusionMapping !== undefined) {\r\n        gl.uniform1i(shader.uniformLocations.parallaxOcclusionMapping, options.parallaxOcclusionMapping);\r\n      }\r\n\r\n      if (shader.uniformLocations.ambientLight && options.ambientLight) {\r\n        gl.uniform3fv(shader.uniformLocations.ambientLight, options.ambientLight);\r\n      }\r\n\r\n      if (shader.uniformLocations.directionalLight && options.directionalLight) {\r\n        const direction = vec3.clone(options.directionalLight.direction);\r\n        vec3.normalize(direction, direction);\r\n        gl.uniform3fv(shader.uniformLocations.directionalLight.color, options.directionalLight.color);\r\n        gl.uniform3fv(shader.uniformLocations.directionalLight.direction, direction);\r\n      }\r\n\r\n      if (shader.uniformLocations.pointLight && options.pointLight) {\r\n        gl.uniform3fv(shader.uniformLocations.pointLight.color, options.pointLight.color);\r\n        gl.uniform3fv(shader.uniformLocations.pointLight.position, options.pointLight.position);\r\n        gl.uniform1f(shader.uniformLocations.pointLight.brightness, options.pointLight.brightness);\r\n      }\r\n\r\n      if (shader.uniformLocations.lights && options.lights) {\r\n        const lights = options.lights;\r\n        for (let i = 0; i < lights.length; i++) {\r\n          const light = lights[i];\r\n          gl.uniform3fv(shader.uniformLocations.lights[i].position, light.position);\r\n          gl.uniform3fv(shader.uniformLocations.lights[i].ambient, light.ambient);\r\n          gl.uniform3fv(shader.uniformLocations.lights[i].diffuse, light.diffuse);\r\n          gl.uniform3fv(shader.uniformLocations.lights[i].specular, light.specular);\r\n        }\r\n      }\r\n\r\n      if (shader.uniformLocations.material && material) {\r\n        gl.uniform3fv(shader.uniformLocations.material.ambient, material.ambient);\r\n        gl.uniform3fv(shader.uniformLocations.material.diffuse, material.diffuse);\r\n        gl.uniform3fv(shader.uniformLocations.material.specular, material.specular);\r\n        gl.uniform1f(shader.uniformLocations.material.shininess, material.shininess);\r\n      }\r\n\r\n      if (shader.uniformLocations.cameraPos && options.cameraPos) {\r\n        gl.uniform3fv(shader.uniformLocations.cameraPos, options.cameraPos);\r\n      }\r\n\r\n      if (shader.uniformLocations.samplerDiffuse && texture.diffuse) {\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(gl.TEXTURE_2D, texture.diffuse);\r\n        gl.uniform1i(shader.uniformLocations.samplerDiffuse, 0);\r\n      }\r\n\r\n      if (shader.uniformLocations.samplerNormal && texture.normal) {\r\n        gl.activeTexture(gl.TEXTURE1);\r\n        gl.bindTexture(gl.TEXTURE_2D, texture.normal);\r\n        gl.uniform1i(shader.uniformLocations.samplerNormal, 1);\r\n      }\r\n\r\n      if (shader.uniformLocations.samplerHeight && texture.height) {\r\n        gl.activeTexture(gl.TEXTURE2);\r\n        gl.bindTexture(gl.TEXTURE_2D, texture.height);\r\n        gl.uniform1i(shader.uniformLocations.samplerHeight, 2);\r\n      }\r\n\r\n      if (shader.uniformLocations.samplerOcclusion && texture.occlusion) {\r\n        gl.activeTexture(gl.TEXTURE3);\r\n        gl.bindTexture(gl.TEXTURE_2D, texture.occlusion);\r\n        gl.uniform1i(shader.uniformLocations.samplerOcclusion, 3);\r\n      }\r\n\r\n      {\r\n        const vertexCount = buffer.vertexCount;\r\n        const type = gl.UNSIGNED_SHORT;\r\n        const offset = 0;\r\n        gl.drawElements(gl.TRIANGLES, vertexCount, type, offset);\r\n      }\r\n\r\n      const numAttributes = gl.getProgramParameter(shader.program, gl.ACTIVE_ATTRIBUTES);\r\n      for (let i = 0; i < numAttributes; i++) {\r\n        gl.disableVertexAttribArray(i);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Model;\r\n","export function getShape(shape) {\r\n  if (shape === 'tetrahedron') {\r\n    const s3 = Math.sqrt(3);\r\n    const s6 = Math.sqrt(6);\r\n\r\n    const vertices = [\r\n      [s3 / 3, -s6 / 3 * 0.333 + s6 * 0.025, 0],         // right\r\n      [-s3 / 6, -s6 / 3 * 0.333 + s6 * 0.025, 1 / 2],    // left front\r\n      [-s3 / 6, -s6 / 3 * 0.333 + s6 * 0.025, -1 / 2],   // left back\r\n      [0, s6 / 3 * 0.666 + s6 * 0.025, 0]                // top\r\n    ];\r\n\r\n    const faces = [\r\n      [0, 1, 2],\r\n      [3, 1, 0],\r\n      [3, 0, 2],\r\n      [3, 2, 1]\r\n    ];\r\n\r\n    return { vertices, faces };\r\n  }\r\n\r\n  if (shape === 'cube') {\r\n    const r = .35;\r\n\r\n    const vertices = [\r\n      [-r, -r, -r],\r\n      [-r, -r, r],\r\n      [r, -r, r],\r\n      [r, -r, -r],\r\n      [-r, r, -r],\r\n      [-r, r, r],\r\n      [r, r, r],\r\n      [r, r, -r]\r\n    ];\r\n\r\n    const faces = [\r\n      [0, 3, 2, 1],   // bottom\r\n      [4, 5, 6, 7],   // top\r\n      [0, 1, 5, 4],   // left\r\n      [2, 3, 7, 6],   // right\r\n      [1, 2, 6, 5],   // front\r\n      [3, 0, 4, 7]    // back\r\n    ];\r\n\r\n    return { vertices, faces };\r\n  }\r\n\r\n  if (shape === 'octahedron') {\r\n    const a = 1 / (2 * Math.sqrt(2)) * 1.3;\r\n    const b = 1 / 2 * 1.3;\r\n\r\n    const vertices = [\r\n      [-a, 0, a],    // front left\r\n      [a, 0, a],     // front right\r\n      [a, 0, -a],    // back right\r\n      [-a, 0, -a],   // back left\r\n      [0, b, 0],     // top\r\n      [0, -b, 0]     // bottom\r\n    ];\r\n\r\n    const faces = [\r\n      [3, 0, 4],\r\n      [2, 3, 4],\r\n      [1, 2, 4],\r\n      [0, 1, 4],\r\n      [3, 2, 5],\r\n      [0, 3, 5],\r\n      [2, 1, 5],\r\n      [1, 0, 5]\r\n    ];\r\n\r\n    return { vertices, faces };\r\n  }\r\n\r\n  if (shape === 'pentagonaltrapezohedron') {\r\n    const height = 0.7;\r\n    const radius = 0.5;\r\n    let offset = 0.05;\r\n    const vertices = [];\r\n    const step = Math.PI / 5;\r\n    for (var theta = 0; theta < 2 * Math.PI; theta += step) {\r\n      const x = radius * Math.cos(theta);\r\n      const y = radius * Math.sin(theta);\r\n      vertices.push([x, offset, y]);\r\n      offset = -offset;\r\n    }\r\n    vertices.push([0, height, 0]);\r\n    vertices.push([0, -height, 0]);\r\n\r\n    const faces = [\r\n      [10, 2, 1, 0],\r\n      [10, 4, 3, 2],\r\n      [10, 6, 5, 4],\r\n      [10, 8, 7, 6],\r\n      [10, 0, 9, 8],\r\n      [11, 1, 2, 3],\r\n      [11, 3, 4, 5],\r\n      [11, 5, 6, 7],\r\n      [11, 7, 8, 9],\r\n      [11, 9, 0, 1]\r\n    ];\r\n\r\n    return { vertices, faces };\r\n  }\r\n\r\n  if (shape === 'dodecahedron') {\r\n    const phi = (1 + Math.sqrt(5)) / 2;\r\n    const a = 0.5;\r\n    const b = 0.5 * 1 / phi;\r\n    const c = 0.5 * (2 - phi);\r\n\r\n    const vertices = [\r\n      [c, 0, a],\r\n      [-c, 0, a],\r\n      [-b, b, b],\r\n      [0, a, c],\r\n      [b, b, b],\r\n      [b, -b, b],\r\n      [0, -a, c],\r\n      [-b, -b, b],\r\n      [c, 0, -a],\r\n      [-c, 0, -a],\r\n      [-b, -b, -b],\r\n      [0, -a, -c],\r\n      [b, -b, -b],\r\n      [b, b, -b],\r\n      [0, a, -c],\r\n      [-b, b, -b],\r\n      [a, c, 0],\r\n      [-a, c, 0],\r\n      [-a, -c, 0],\r\n      [a, -c, 0]\r\n    ];\r\n\r\n    const faces = [\r\n      [4, 3, 2, 1, 0],\r\n      [7, 6, 5, 0, 1],\r\n      [12, 11, 10, 9, 8],\r\n      [15, 14, 13, 8, 9],\r\n      [14, 3, 4, 16, 13],\r\n      [3, 14, 15, 17, 2],\r\n      [11, 6, 7, 18, 10],\r\n      [6, 11, 12, 19, 5],\r\n      [4, 0, 5, 19, 16],\r\n      [12, 8, 13, 16, 19],\r\n      [15, 9, 10, 18, 17],\r\n      [7, 1, 2, 17, 18]\r\n    ];\r\n\r\n    return { vertices, faces };\r\n  }\r\n\r\n  if (shape === 'icosahedron') {\r\n    const phi = (1 + Math.sqrt(5)) / 2;\r\n    const a = 1 / 2;\r\n    const b = 1 / (2 * phi);\r\n\r\n    const vertices = [\r\n      [0, b, -a],\r\n      [b, a, 0],\r\n      [-b, a, 0],\r\n      [0, b, a],\r\n      [0, -b, a],\r\n      [-a, 0, b],\r\n      [a, 0, b],\r\n      [0, -b, -a],\r\n      [a, 0, -b],\r\n      [-a, 0, -b],\r\n      [b, -a, 0],\r\n      [-b, -a, 0]\r\n    ];\r\n\r\n    const faces = [\r\n      [1, 0, 2],\r\n      [2, 3, 1],\r\n      [4, 3, 5],\r\n      [6, 3, 4],\r\n      [7, 0, 8],\r\n      [9, 0, 7],\r\n      [10, 4, 11],\r\n      [11, 7, 10],\r\n      [5, 2, 9],\r\n      [9, 11, 5],\r\n      [8, 1, 6],\r\n      [6, 10, 8],\r\n      [5, 3, 2],\r\n      [1, 3, 6],\r\n      [2, 0, 9],\r\n      [8, 0, 1],\r\n      [9, 7, 11],\r\n      [10, 7, 8],\r\n      [11, 4, 5],\r\n      [6, 4, 10]\r\n    ];\r\n\r\n    return { vertices, faces };\r\n  }\r\n}\r\n","import Model from './Model';\r\nimport { getShape } from '../lib/shapes';\r\n\r\nclass ColorModel extends Model {\r\n  constructor(gl, shapeName, colors) {\r\n    super(gl);\r\n    this.gl = gl;\r\n    this.draw = this.draw.bind(this);\r\n    this._initModel({\r\n      gl,\r\n      geometry: ({ addFaces }) => {\r\n        const shape = getShape(shapeName);\r\n        addFaces(shape.vertices, shape.faces, { colors });\r\n      },\r\n      shader: {\r\n        vertex: 'shaders/color_L/vertex.glsl',\r\n        fragment: 'shaders/color_L/fragment.glsl'\r\n      }\r\n    });\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix, options) {\r\n    const {\r\n      ambientLight,\r\n      directionalLight,\r\n      pointLight,\r\n      cameraPos,\r\n      lightingModel\r\n    } = options;\r\n    this._drawModel({\r\n      projectionMatrix,\r\n      viewMatrix,\r\n      modelMatrix,\r\n      ambientLight,\r\n      directionalLight,\r\n      pointLight,\r\n      cameraPos,\r\n      lightingModel\r\n    });\r\n  }\r\n}\r\n\r\nexport default ColorModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen } from '../lib/utility'\r\nimport ColorModel from '../models/ColorModel';\r\n\r\nclass ColorScene {\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n    this.setOption = this.setOption.bind(this);\r\n    this.initScene = this.initScene.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n    this.renderOptions = {\r\n      ambientLight: [0.2, 0.2, 0.2],\r\n      directionalLight: {\r\n        color: [1.0, 1.0, 1.0],\r\n        direction: [-1.0, 1.0, 0.0]\r\n      },\r\n      pointLight: {\r\n        color: [1.0, 1.0, 1.0],\r\n        position: [1.0, -1.0, 0.0],\r\n        brightness: 25.0\r\n      },\r\n      cameraPos: [0.0, 0.0, 0.0],\r\n      lightingModel: 0\r\n    };\r\n    this.options = [\r\n      {\r\n        description: 'Colored cube and dodecahedron with your choice of lighting',\r\n        type: 'description'\r\n      },\r\n      {\r\n        name: 'Lighting Model',\r\n        id: 'lightingModel',\r\n        type: 'select',\r\n        options: ['Unlit', 'Vertex Lighting', 'Fragment Lighting'],\r\n        value: this.renderOptions.lightingModel\r\n      }\r\n    ];\r\n  }\r\n\r\n  setOption(option, value) {\r\n    option.value = Number(value);\r\n    this.renderOptions[option.id] = option.value;\r\n  }\r\n\r\n  initScene() {\r\n    const gl = this.gl;\r\n    const colors1 = [\r\n      [0.0, 0.0, 1.0],    // Bottom face: blue\r\n      [0.0, 1.0, 0.0],    // Top face: green\r\n      [1.0, 0.0, 1.0],    // Left face: purple\r\n      [1.0, 1.0, 0.0],    // Right face: yellow\r\n      [1.0, 1.0, 1.0],    // Front face: white\r\n      [1.0, 0.0, 0.0]     // Back face: red\r\n    ];\r\n    const model6 = new ColorModel(gl, 'cube', colors1);\r\n    const colors2 = [\r\n      [1.0, 0.0, 0.0],\r\n      [0.0, 0.0, 1.0],\r\n      [0.0, 1.0, 0.0],\r\n      [1.0, 1.0, 0.0],\r\n      [0.0, 1.0, 1.0],\r\n      [1.0, 0.0, 1.0],\r\n      [1.0, 0.5, 0.0],\r\n      [0.0, 1.0, 0.5],\r\n      [1.0, 0.0, 0.5],\r\n      [0.5, 1.0, 0.0],\r\n      [0.0, 0.5, 1.0],\r\n      [0.5, 0.0, 1.0]\r\n    ];\r\n    const model12 = new ColorModel(gl, 'dodecahedron', colors2);\r\n    this.scene = {\r\n      actors: [\r\n        {\r\n          model: model6,\r\n          location: [-1.6, 0.0, -6.0],\r\n          scale: [2.8, 2.8, 2.8],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 1.0\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.7\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model12,\r\n          location: [1.6, 0.0, -6.0],\r\n          scale: [2.8, 2.8, 2.8],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 1.0\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.7\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      camera: [0.0, 0.0, 0.0]\r\n    };\r\n  }\r\n\r\n  drawScene(deltaTime) {\r\n    const gl = this.gl;\r\n    const scene = this.scene;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 100.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, scene.camera);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      this._renderActor(projectionMatrix, viewMatrix, actor);\r\n      this._animateActor(deltaTime, actor);\r\n    }\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    if (actor.scale) {\r\n      mat4.scale(modelMatrix, modelMatrix, actor.scale);\r\n    }\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      mat4.rotate(modelMatrix, modelMatrix, rotation.angle, rotation.axis);\r\n    }\r\n\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix, this.renderOptions);\r\n  }\r\n\r\n  _animateActor(deltaTime, actor) {\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      rotation.angle += deltaTime * rotation.speed;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ColorScene;\r\n","import Model from './Model';\r\n\r\nclass TexturedCubeModel extends Model {\r\n  constructor(gl) {\r\n    super(gl);\r\n    this.gl = gl;\r\n    this.draw = this.draw.bind(this);\r\n    this._initModel({\r\n      gl,\r\n      geometry: this._geometry,\r\n      texture: {\r\n        diffuse: 'images/cubetexture.png'\r\n      },\r\n      shader: {\r\n        vertex: 'shaders/texture_LD/vertex.glsl',\r\n        fragment: 'shaders/texture_LD/fragment.glsl'\r\n      }\r\n    });\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix, options) {\r\n    const {\r\n      ambientLight,\r\n      directionalLight,\r\n      pointLight,\r\n      cameraPos,\r\n      lightingModel\r\n    } = options;\r\n    this._drawModel({\r\n      projectionMatrix,\r\n      viewMatrix,\r\n      modelMatrix,\r\n      ambientLight,\r\n      directionalLight,\r\n      pointLight,\r\n      cameraPos,\r\n      lightingModel\r\n    });\r\n  }\r\n\r\n  _geometry({ addSquare }) {\r\n    const f0 = [-1, -1, 1];\r\n    const f1 = [1, -1, 1];\r\n    const f2 = [1, 1, 1];\r\n    const f3 = [-1, 1, 1];\r\n    const b0 = [-1, -1, -1];\r\n    const b1 = [1, -1, -1];\r\n    const b2 = [1, 1, -1];\r\n    const b3 = [-1, 1, -1];\r\n    addSquare(f0, f1, f2, f3);  // front\r\n    addSquare(b1, b0, b3, b2);  // back\r\n    addSquare(b0, f0, f3, b3);  // left\r\n    addSquare(f1, b1, b2, f2);  // right\r\n    addSquare(b0, b1, f1, f0);  // bottom\r\n    addSquare(b2, b3, f3, f2);  // top\r\n  }\r\n}\r\n\r\nexport default TexturedCubeModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen } from '../lib/utility'\r\nimport TexturedCubeModel from '../models/TexturedCubeModel';\r\n\r\nclass TextureScene {\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n    this.setOption = this.setOption.bind(this);\r\n    this.initScene = this.initScene.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n    this.renderOptions = {\r\n      ambientLight: [0.2, 0.2, 0.2],\r\n      directionalLight: {\r\n        color: [1.0, 1.0, 1.0],\r\n        direction: [-1.0, 1.0, 0.0]\r\n      },\r\n      pointLight: {\r\n        color: [1.0, 1.0, 1.0],\r\n        position: [1.0, -1.0, 0.0],\r\n        brightness: 25.0\r\n      },\r\n      cameraPos: [0.0, 0.0, 0.0],\r\n      lightingModel: 0\r\n    };\r\n    this.options = [\r\n      {\r\n        description: 'Textured cube with diffuse map only with your choice of lighting',\r\n        type: 'description'\r\n      },\r\n      {\r\n        name: 'Lighting Model',\r\n        id: 'lightingModel',\r\n        type: 'select',\r\n        options: ['Unlit', 'Vertex Lighting', 'Fragment Lighting'],\r\n        value: this.renderOptions.lightingModel\r\n      }\r\n    ];\r\n    this.credits = [\r\n      'Texture from MDN WebGL Tutorial',\r\n      'link:https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Tutorial'\r\n    ];\r\n  }\r\n\r\n  setOption(option, value) {\r\n    option.value = Number(value);\r\n    this.renderOptions[option.id] = option.value;\r\n  }\r\n\r\n  initScene() {\r\n    const gl = this.gl;\r\n    const model = new TexturedCubeModel(gl);\r\n    this.scene = {\r\n      actors: [\r\n        {\r\n          model,\r\n          location: [0.0, 0.0, -6.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 1.0\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.7\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      camera: [0.0, 0.0, 0.0]\r\n    };\r\n  }\r\n\r\n  drawScene(deltaTime) {\r\n    const gl = this.gl;\r\n    const scene = this.scene;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 100.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, scene.camera);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      this._renderActor(projectionMatrix, viewMatrix, actor);\r\n      this._animateActor(deltaTime, actor);\r\n    }\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      mat4.rotate(modelMatrix, modelMatrix, rotation.angle, rotation.axis);\r\n    }\r\n\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix, this.renderOptions);\r\n  }\r\n\r\n  _animateActor(deltaTime, actor) {\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      rotation.angle += deltaTime * rotation.speed;\r\n    }\r\n  }\r\n}\r\n\r\nexport default TextureScene;\r\n","const _materials = {\r\n  emerald: {\r\n    ambient: [0.0215, 0.1745, 0.0215], diffuse: [0.07568, 0.61424, 0.07568], specular: [0.633, 0.727811, 0.633], shininess: 0.6\r\n  },\r\n  jade: {\r\n    ambient: [0.135, 0.2225, 0.1575], diffuse: [0.54, 0.89, 0.63], specular: [0.316228, 0.316228, 0.316228], shininess: 0.1\r\n  },\r\n  obsidian: {\r\n    ambient: [0.05375, 0.05, 0.06625], diffuse: [0.18275, 0.17, 0.22525], specular: [0.332741, 0.328634, 0.346435], shininess: 0.3\r\n  },\r\n  pearl: {\r\n    ambient: [0.25, 0.20725, 0.20725], diffuse: [1, 0.829, 0.829], specular: [0.296648, 0.296648, 0.296648], shininess: 0.088\r\n  },\r\n  ruby: {\r\n    ambient: [0.1745, 0.01175, 0.01175], diffuse: [0.61424, 0.04136, 0.04136], specular: [0.727811, 0.626959, 0.626959], shininess: 0.6\r\n  },\r\n  turquoise: {\r\n    ambient: [0.1, 0.18725, 0.1745], diffuse: [0.396, 0.74151, 0.69102], specular: [0.297254, 0.30829, 0.306678], shininess: 0.1\r\n  },\r\n  brass: {\r\n    ambient: [0.329412, 0.223529, 0.027451], diffuse: [0.780392, 0.568627, 0.113725], specular: [0.992157, 0.941176, 0.807843], shininess: 0.21794872\r\n  },\r\n  bronze: {\r\n    ambient: [0.2125, 0.1275, 0.054], diffuse: [0.714, 0.4284, 0.18144], specular: [0.393548, 0.271906, 0.166721], shininess: 0.2\r\n  },\r\n  chrome: {\r\n    ambient: [0.25, 0.25, 0.25], diffuse: [0.4, 0.4, 0.4], specular: [0.774597, 0.774597, 0.774597], shininess: 0.6\r\n  },\r\n  copper: {\r\n    ambient: [0.19125, 0.0735, 0.0225], diffuse: [0.7038, 0.27048, 0.0828], specular: [0.256777, 0.137622, 0.086014], shininess: 0.1\r\n  },\r\n  gold: {\r\n    ambient: [0.24725, 0.1995, 0.0745], diffuse: [0.75164, 0.60648, 0.22648], specular: [0.628281, 0.555802, 0.366065], shininess: 0.4\r\n  },\r\n  silver: {\r\n    ambient: [0.19225, 0.19225, 0.19225], diffuse: [0.50754, 0.50754, 0.50754], specular: [0.508273, 0.508273, 0.508273], shininess: 0.4\r\n  },\r\n  blackPlastic: {\r\n    ambient: [0.0, 0.0, 0.0], diffuse: [0.01, 0.01, 0.01], specular: [0.50, 0.50, 0.50], shininess: 0.25\r\n  },\r\n  cyanPlastic: {\r\n    ambient: [0.0, 0.1, 0.06], diffuse: [0.0, 0.50980392, 0.50980392], specular: [0.50196078, 0.50196078, 0.50196078], shininess: 0.25\r\n  },\r\n  greenPlastic: {\r\n    ambient: [0.0, 0.0, 0.0], diffuse: [0.1, 0.35, 0.1], specular: [0.45, 0.55, 0.45], shininess: 0.25\r\n  },\r\n  redPlastic: {\r\n    ambient: [0.0, 0.0, 0.0], diffuse: [0.5, 0.0, 0.0], specular: [0.7, 0.6, 0.6], shininess: 0.25\r\n  },\r\n  whitePlastic: {\r\n    ambient: [0.0, 0.0, 0.0], diffuse: [0.55, 0.55, 0.55], specular: [0.70, 0.70, 0.70], shininess: 0.25\r\n  },\r\n  yellowPlastic: {\r\n    ambient: [0.0, 0.0, 0.0], diffuse: [0.5, 0.5, 0.0], specular: [0.60, 0.60, 0.50], shininess: 0.25\r\n  },\r\n  blackRubber: {\r\n    ambient: [0.02, 0.02, 0.02], diffuse: [0.01, 0.01, 0.01], specular: [0.4, 0.4, 0.4], shininess: 0.078125\r\n  },\r\n  cyanRubber: {\r\n    ambient: [0.0, 0.05, 0.05], diffuse: [0.4, 0.5, 0.5], specular: [0.04, 0.7, 0.7], shininess: 0.078125\r\n  },\r\n  greenRubber: {\r\n    ambient: [0.0, 0.05, 0.0], diffuse: [0.4, 0.5, 0.4], specular: [0.04, 0.7, 0.04], shininess: 0.078125\r\n  },\r\n  redRubber: {\r\n    ambient: [0.05, 0.0, 0.0], diffuse: [0.5, 0.4, 0.4], specular: [0.7, 0.04, 0.04], shininess: 0.078125\r\n  },\r\n  whiteRubber: {\r\n    ambient: [0.05, 0.05, 0.05], diffuse: [0.5, 0.5, 0.5], specular: [0.7, 0.7, 0.7], shininess: 0.078125\r\n  },\r\n  yellowRubber: {\r\n    ambient: [0.05, 0.05, 0.0], diffuse: [0.5, 0.5, 0.4], specular: [0.7, 0.7, 0.04], shininess: 0.078125\r\n  }\r\n};\r\n\r\nexport function getMaterialList() {\r\n  const materials = [];\r\n  for (const prop in _materials) {\r\n    if (_materials.hasOwnProperty(prop)) {\r\n      materials.push(prop);\r\n    }\r\n  }\r\n  return materials;\r\n}\r\n\r\nexport function getMaterial(name) {\r\n  return _materials[name];\r\n}\r\n","import { degreesToRadians } from './utility';\r\n\r\nconst _directions = [\r\n  { x: -1, y: 0 },\r\n  { x: 0, y: -1 },\r\n  { x: 1, y: 0 },\r\n  { x: 0, y: 1 }\r\n];\r\n\r\nexport function generateMaze(width, height, windiness = 0.8) {\r\n  const carve = (pos) => {\r\n    data[pos.y][pos.x] = 0;\r\n  }\r\n\r\n  const canCarve = (pos, dir) => {\r\n    if (!isInBounds(addDir(pos, dir, 3))) {\r\n      return false;\r\n    }\r\n    const nxt = addDir(pos, dir, 2);\r\n    return data[nxt.y][nxt.x] === 1;\r\n  }\r\n\r\n  const isInBounds = (pos) => {\r\n    if (pos.x < 0 || pos.y < 0 || pos.x >= width || pos.y >= height) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  const addDir = (pos, dir, len) => {\r\n    return {\r\n      x: pos.x + dir.x * len,\r\n      y: pos.y + dir.y * len\r\n    }\r\n  }\r\n\r\n  const data = [];\r\n  for (let y = 0; y < height; y++) {\r\n    data.push(new Array(width).fill(1));\r\n  }\r\n\r\n  const start = { x: 1, y: 1 };\r\n  const cells = [];\r\n  let lastDir;\r\n  carve(start);\r\n  cells.push(start);\r\n  while (cells.length > 0) {\r\n    const cell = cells[cells.length - 1];\r\n    const posCells = [];\r\n    for (let i = 0; i < _directions.length; i++) {\r\n      const dir = _directions[i];\r\n      if (canCarve(cell, dir)) {\r\n        posCells.push(dir);\r\n      }\r\n    }\r\n    if (posCells.length > 0) {\r\n      let dir;\r\n      if (posCells.includes(lastDir) && Math.random() > windiness) {\r\n        dir = lastDir;\r\n      } else {\r\n        dir = posCells[Math.floor(Math.random() * posCells.length)];\r\n      }\r\n      carve(addDir(cell, dir, 1));\r\n      carve(addDir(cell, dir, 2));\r\n      cells.push(addDir(cell, dir, 2));\r\n      lastDir = dir;\r\n    } else {\r\n      cells.pop();\r\n      lastDir = null;\r\n    }\r\n  }\r\n  return {\r\n    width,\r\n    height,\r\n    data\r\n  };\r\n}\r\n\r\nexport function generateDungeon(width, height, windiness = 0.8) {\r\n  const regions = [];\r\n  let region = 0;\r\n\r\n  const data = [];\r\n  for (let y = 0; y < height; y++) {\r\n    data.push(new Array(width).fill(1));\r\n  }\r\n\r\n  const incrementRegion = () => {\r\n    region++;\r\n  }\r\n\r\n  const carveRegion = (data, pos, value) => {\r\n    data[pos.y][pos.x] = value;\r\n    regions[pos.y][pos.x] = region;\r\n  }\r\n\r\n  const my = data.length;\r\n  const mx = data[0].length;\r\n  for (let y = 0; y < my; y++) {\r\n    regions.push(Array(mx).fill(0))\r\n  }\r\n\r\n  _addRooms(data, mx, my, incrementRegion, carveRegion, 256, 4);\r\n\r\n  for (let y = 1; y < my; y += 2) {\r\n    for (let x = 1; x < mx; x += 2) {\r\n      if (data[y][x] !== 1) {\r\n        continue;\r\n      }\r\n\r\n      region++;\r\n\r\n      _createMaze(data, carveRegion, { x, y }, windiness);\r\n    }\r\n  }\r\n\r\n  _connectRegions(data, mx, my, region, regions);\r\n\r\n  _removeDeadEnds(data, mx, my);\r\n\r\n  return {\r\n    width,\r\n    height,\r\n    data\r\n  };\r\n}\r\n\r\nexport function getMazeStartLocation(map) {\r\n  const { width, height, data } = map;\r\n  const isSolid = (x, y) => {\r\n    if (x < 0 || x >= width || y < 0 || y >= height) {\r\n      return true;\r\n    }\r\n    if (data[y][x] === 1) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  const ofs_x = -width / 2;\r\n  const ofs_y = -height / 2;\r\n  for (let y = 0; y < height; y++) {\r\n    for (let x = 0; x < width; x++) {\r\n      if (data[y][x] !== 1) {\r\n        let angle = 0.0;\r\n        const matrix = [];\r\n        for (let r = -1; r < 2; r++) {\r\n          for (let c = -1; c < 2; c++) {\r\n            if (isSolid(x + c, y + r)) {\r\n              matrix.push('1');\r\n            } else {\r\n              matrix.push('0');\r\n            }\r\n          }\r\n        }\r\n        let tx, ty;\r\n        if (matrix[0] === '0') {\r\n          tx = x + 1;\r\n          ty = y + 1;\r\n          angle = -45.0;\r\n        } else if (matrix[2] === '0') {\r\n          tx = x - 1;\r\n          ty = y + 1;\r\n          angle = 45.0;\r\n        } else if (matrix[6] === '0') {\r\n          tx = x + 1;\r\n          ty = y - 1;\r\n          angle = -225.0;\r\n        } else if (matrix[8] === '0') {\r\n          tx = x - 1;\r\n          ty = y - 1;\r\n          angle = 225.0;\r\n        } else if (matrix[3] === '0') {\r\n          tx = x - 1;\r\n          ty = y;\r\n          angle = 90.0;\r\n        } else if (matrix[5] === '0') {\r\n          tx = x + 1;\r\n          ty = y;\r\n          angle = -90.0;\r\n        } else if (matrix[7] === '0') {\r\n          tx = x;\r\n          ty = y + 1;\r\n          angle = 180.0;\r\n        } else {\r\n          tx = x;\r\n          ty = y - 1;\r\n          angle = 0.0;\r\n        }\r\n        return { location: [x + ofs_x + 0.5, 0.5, y + ofs_y + 0.5], angle: degreesToRadians(angle), square: { x, y }, nextSquare: { x: tx, y: ty } };\r\n      }\r\n    }\r\n  }\r\n  return { location: [0.0, 0.5, 0.0] };\r\n}\r\n\r\nexport function getMazeBoundingSquares(map) {\r\n  const { width, height, data } = map;\r\n  const mapBounds = [];\r\n  const ofs_x = -width / 2;\r\n  const ofs_y = -height / 2;\r\n  for (let y = 0; y < height; y++) {\r\n    for (let x = 0; x < width; x++) {\r\n      if (data[y][x] === 1) {\r\n        mapBounds.push({ x1: x + ofs_x, y1: y + ofs_y, x2: x + ofs_x + 1, y2: y + ofs_y + 1 });\r\n      }\r\n    }\r\n  }\r\n  return mapBounds;\r\n}\r\n\r\nexport function getMazeSquareCenter(map, x, y, z) {\r\n  const { width, height } = map;\r\n  const ofs_x = -width / 2;\r\n  const ofs_y = -height / 2;\r\n  return [x + ofs_x + 0.5, z, y + ofs_y + 0.5]\r\n}\r\n\r\nfunction _addRooms(data, mx, my, incrementRegion, carveRegion, numRoomTries, roomExtraSize) {\r\n  const rooms = [];\r\n  for (let i = 0; i < numRoomTries; i++) {\r\n    const size = (_range(1, 3 + roomExtraSize) << 1) + 1;\r\n    let rectangularity = _range(0, 1 + size >> 1) << 1;\r\n    let width = size;\r\n    let height = size;\r\n    if (_range(0, 1) === 0) {\r\n      width += rectangularity;\r\n    } else {\r\n      height += rectangularity;\r\n    }\r\n    let x = (_range(0, (mx - width - 1) >> 1) << 1) + 1;\r\n    let y = (_range(0, (my - height - 1) >> 1) << 1) + 1;\r\n    if (x + width > mx - 1 || y + height > my - 1 || width >= mx / 2 || height >= my / 2) {\r\n      continue;\r\n    }\r\n    const room = { x, y, width, height };\r\n    let overlaps = false;\r\n    for (let j = 0; j < rooms.length; j++) {\r\n      const other = rooms[j];\r\n      if (_isOverlapped(room, other)) {\r\n        overlaps = true;\r\n        break;\r\n      }\r\n    }\r\n    if (overlaps) {\r\n      continue;\r\n    }\r\n    rooms.push(room);\r\n    incrementRegion();\r\n    for (let xOffset = 0; xOffset < width; xOffset++) {\r\n      for (let yOffset = 0; yOffset < height; yOffset++) {\r\n        carveRegion(data, { x: x + xOffset, y: y + yOffset }, 2);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction _createMaze(data, carveRegion, start, windiness) {\r\n  const my = data.length;\r\n  const mx = data[0].length;\r\n  const cells = [];\r\n  let lastDir;\r\n  carveRegion(data, start, 0);\r\n  data[start.y][start.x] = 0;\r\n  cells.push(start);\r\n  while (cells.length > 0) {\r\n    const cell = cells[cells.length - 1];\r\n    const posCells = [];\r\n    for (let i = 0; i < _directions.length; i++) {\r\n      const dir = _directions[i];\r\n      if (_canCarve(data, mx, my, cell, dir)) {\r\n        posCells.push(dir);\r\n      }\r\n    }\r\n    if (posCells.length > 0) {\r\n      let dir;\r\n      if (posCells.includes(lastDir) && Math.random() > windiness) {\r\n        dir = lastDir;\r\n      } else {\r\n        dir = posCells[Math.floor(Math.random() * posCells.length)];\r\n      }\r\n      const c1 = _addDir(cell, dir, 1);\r\n      const c2 = _addDir(cell, dir, 2);\r\n      carveRegion(data, c1, 0);\r\n      carveRegion(data, c2, 0);\r\n      cells.push(_addDir(cell, dir, 2));\r\n      lastDir = dir;\r\n    } else {\r\n      cells.pop();\r\n      lastDir = null;\r\n    }\r\n  }\r\n}\r\n\r\nfunction _connectRegions(data, mx, my, region, regions) {\r\n  let connectors = [];\r\n  for (let y = 1; y < my - 1; y++) {\r\n    for (let x = 1; x < mx - 1; x++) {\r\n      if (data[y][x] !== 1) {\r\n        continue;\r\n      }\r\n      const connectedRegions = [];\r\n      for (let i = 0; i < _directions.length; i++) {\r\n        const dir = _directions[i];\r\n        const region = regions[y + dir.y][x + dir.x];\r\n        if (region !== 0 && !connectedRegions.includes(region)) {\r\n          connectedRegions.push(region);\r\n        }\r\n      }\r\n      if (connectedRegions.length < 2) {\r\n        continue;\r\n      }\r\n      connectors.push({ x, y, regions: connectedRegions })\r\n    }\r\n  }\r\n  const merged = [0];\r\n  let openRegions = [];\r\n  for (var i = 1; i <= region; i++) {\r\n    merged.push(i);\r\n    openRegions.push(i);\r\n  }\r\n  while (openRegions.length > 1) {\r\n    const index = _range(0, connectors.length - 1)\r\n    const connector = connectors[index];\r\n    _carve(data, { x: connector.x, y: connector.y });\r\n    const regions = connector.regions.map((region) => merged[region]);\r\n    const dest = regions[0];\r\n    const sources = regions.slice(1);\r\n    for (let i = 0; i <= region; i++) {\r\n      if (sources.includes(i)) {\r\n        merged[i] = dest;\r\n      }\r\n    }\r\n    openRegions = openRegions.filter((region) => {\r\n      return !sources.includes(region);\r\n    });\r\n    connectors = connectors.filter((con) => {\r\n      if (Math.abs(con.x - connector.x) <= 1 && Math.abs(con.y - connector.y) <= 1) {\r\n        return false;\r\n      }\r\n      con.regions = con.regions.map((region) => merged[region]);\r\n      for (let i = 1; i < con.regions.length; i++) {\r\n        if (con.regions[i] !== con.regions[0]) {\r\n          return true;\r\n        }\r\n      }\r\n      if (_range(0, 99) === 0) {\r\n        _carve(data, { x: con.x, y: con.y });\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n}\r\n\r\nfunction _removeDeadEnds(data, mx, my) {\r\n  let done = false;\r\n  while (!done) {\r\n    done = true;\r\n    for (let y = 1; y < my - 1; y++) {\r\n      for (let x = 1; x < mx - 1; x++) {\r\n        if (data[y][x] === 1) {\r\n          continue;\r\n        }\r\n        let exits = 0;\r\n        for (let i = 0; i < _directions.length; i++) {\r\n          const dir = _directions[i];\r\n          if (data[y + dir.y][x + dir.x] !== 1) {\r\n            exits++;\r\n          }\r\n        }\r\n        if (exits !== 1) {\r\n          continue;\r\n        }\r\n        done = false;\r\n        _fill(data, { x, y });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction _carve(data, pos) {\r\n  data[pos.y][pos.x] = 0;\r\n}\r\n\r\nfunction _fill(data, pos) {\r\n  data[pos.y][pos.x] = 1;\r\n}\r\n\r\nfunction _canCarve(data, mx, my, pos, dir) {\r\n  if (!_isInBounds(mx, my, _addDir(pos, dir, 3))) {\r\n    return false;\r\n  }\r\n  const nxt = _addDir(pos, dir, 2);\r\n  return data[nxt.y][nxt.x] === 1;\r\n}\r\n\r\nfunction _isInBounds(mx, my, pos) {\r\n  if (pos.x < 0 || pos.y < 0 || pos.x >= mx || pos.y >= my) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction _addDir(pos, dir, len) {\r\n  return {\r\n    x: pos.x + dir.x * len,\r\n    y: pos.y + dir.y * len\r\n  }\r\n}\r\n\r\nfunction _range(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction _isOverlapped(pri, sec) {\r\n  if (pri.x > sec.x + sec.width || sec.x > pri.x + pri.width) {\r\n    return false;\r\n  }\r\n  if (pri.y > sec.y + sec.height || sec.y > pri.y + pri.height) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n","import Model from './Model';\r\n\r\nclass MazeModel extends Model {\r\n  constructor(gl, maze) {\r\n    super(gl);\r\n    this.gl = gl;\r\n    this.draw = this.draw.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this._geometry = this._geometry.bind(this);\r\n    this.maze = maze;\r\n    this._initModel({\r\n      gl,\r\n      geometry: this._geometry,\r\n      bufferCount: 3,\r\n      shaders: [\r\n        {\r\n          vertex: 'shaders/color_L/vertex.glsl',\r\n          fragment: 'shaders/color_L/fragment.glsl'\r\n        },\r\n        {\r\n          vertex: 'shaders/material_L/vertex.glsl',\r\n          fragment: 'shaders/material_L/fragment.glsl'\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix, options) {\r\n    const { shaderIndex, lights, material, materials, ambientLight, directionalLight, pointLight, lightingModel } = options;\r\n    this._drawModel({\r\n      projectionMatrix,\r\n      viewMatrix,\r\n      modelMatrix,\r\n      shaderIndex,\r\n      lights,\r\n      material,\r\n      materials,\r\n      ambientLight,\r\n      directionalLight,\r\n      pointLight,\r\n      lightingModel\r\n    });\r\n  }\r\n\r\n  update(maze) {\r\n    this.maze = maze;\r\n    this._updateModel(this._geometry);\r\n  }\r\n\r\n  _geometry({ addSquare }) {\r\n    const maze = this.maze;\r\n\r\n    const floorColor = [.2, .2, .2];\r\n    const ceilingColor = [.7, .7, .7];\r\n    const wallColor_Back = [.5, 0, .5];\r\n    const wallColor_Front = [0, .5, 0];\r\n    const wallColor_Left = [.5, 0, 0];\r\n    const wallColor_Right = [0, .0, .5];\r\n\r\n    const ofs_x = -maze.width / 2;\r\n    const ofs_y = -maze.height / 2;\r\n    for (let y = 0; y < maze.height; y++) {\r\n      for (let x = 0; x < maze.width; x++) {\r\n        const left = x + ofs_x;\r\n        const right = left + 1;\r\n        const back = y + ofs_y;\r\n        const front = back + 1;\r\n        const top = 1;\r\n        const bottom = 0;\r\n\r\n        const f0 = [left, top, front];\r\n        const f1 = [right, top, front];\r\n        const f2 = [right, bottom, front];\r\n        const f3 = [left, bottom, front];\r\n        const b0 = [left, top, back];\r\n        const b1 = [right, top, back];\r\n        const b2 = [right, bottom, back];\r\n        const b3 = [left, bottom, back];\r\n\r\n        if (maze.data[y][x] !== 1) {\r\n          addSquare(b2, b3, f3, f2, { color: floorColor, bufferIndex: 1 });\r\n        } else {\r\n          addSquare(b1, b0, f0, f1, { color: ceilingColor, bufferIndex: 2 });\r\n\r\n          if (y === 0 || maze.data[y - 1][x] !== 1) {\r\n            addSquare(b0, b1, b2, b3, { color: wallColor_Back });\r\n          }\r\n\r\n          if (x === 0 || maze.data[y][x - 1] !== 1) {\r\n            addSquare(f0, b0, b3, f3, { color: wallColor_Left });\r\n          }\r\n\r\n          if (y === maze.height - 1 || maze.data[y + 1][x] !== 1) {\r\n            addSquare(f1, f0, f3, f2, { color: wallColor_Front });\r\n          }\r\n\r\n          if (x === maze.width - 1 || maze.data[y][x + 1] !== 1) {\r\n            addSquare(b1, f1, f2, b2, { color: wallColor_Right });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default MazeModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen, degreesToRadians } from '../lib/utility';\r\nimport { getMaterialList, getMaterial } from '../lib/materials';\r\nimport { generateMaze, generateDungeon } from '../lib/maze';\r\nimport MazeModel from '../models/MazeModel';\r\n\r\nclass MazeScene {\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n    this.setOption = this.setOption.bind(this);\r\n    this.initScene = this.initScene.bind(this);\r\n    this.createMaze = this.createMaze.bind(this);\r\n    this.createDungeon = this.createDungeon.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n    this.totalDelta = 0.0;\r\n\r\n    this.renderOptions = {\r\n      lights: [\r\n        {\r\n          position: [10.0, -10.0, 0.0],\r\n          ambient: [0.2, 0.2, 0.2],\r\n          diffuse: [0.5, 0.5, 0.5],\r\n          specular: [0.9, 0.9, 0.9]\r\n        },\r\n        {\r\n          position: [-10.0, 10.0, 0.0],\r\n          ambient: [0.2, 0.2, 0.2],\r\n          diffuse: [0.5, 0.5, 0.5],\r\n          specular: [0.9, 0.9, 0.9]\r\n        }\r\n      ],\r\n      ambientLight: [0.2, 0.2, 0.2],\r\n      directionalLight: {\r\n        color: [1.0, 1.0, 1.0],\r\n        direction: [-1.0, -1.0, 0.0]\r\n      },\r\n      pointLight: {\r\n        color: [1.0, 1.0, 1.0]\r\n      },\r\n      useMaterials: false,\r\n      materials: new Array(3).fill(undefined),\r\n      lightingModel: 0\r\n    };\r\n\r\n    this.options = [\r\n      {\r\n        description: 'Random maze/dungeon geometry with colors or materials using Phong shading with your choice of lighting',\r\n        type: 'description'\r\n      },\r\n      {\r\n        name: 'Use Materials',\r\n        id: 'useMaterials',\r\n        type: 'bool',\r\n        value: false\r\n      },\r\n      {\r\n        name: 'Wall Material',\r\n        type: 'select',\r\n        options: getMaterialList()\r\n      },\r\n      {\r\n        name: 'Floor Material',\r\n        type: 'select',\r\n        options: getMaterialList()\r\n      },\r\n      {\r\n        name: 'Ceiling Material',\r\n        type: 'select',\r\n        options: getMaterialList()\r\n      },\r\n      {\r\n        name: 'Lighting Model',\r\n        id: 'lightingModel',\r\n        type: 'select',\r\n        options: ['Unlit', 'Vertex Lighting', 'Fragment Lighting'],\r\n        value: this.renderOptions.lightingModel\r\n      },\r\n      {\r\n        name: 'Create Maze',\r\n        type: 'function',\r\n        function: this.createMaze\r\n      },\r\n      {\r\n        name: 'Create Dungeon',\r\n        type: 'function',\r\n        function: this.createDungeon\r\n      }\r\n    ];\r\n\r\n    this.setOption(this.options[2], 0);\r\n    this.setOption(this.options[3], 9);\r\n    this.setOption(this.options[4], 10);\r\n\r\n    this.credits = [\r\n      'Maze generation is based on this article',\r\n      'link:https://journal.stuffwithstuff.com/2014/12/21/rooms-and-mazes/'\r\n    ]\r\n  }\r\n\r\n  setOption(option, value) {\r\n    option.value = Number(value);\r\n    if (option.id) {\r\n      this.renderOptions[option.id] = option.value;\r\n    }\r\n    if (option.name === 'Wall Material') {\r\n      const materialName = option.options[option.value];\r\n      this.renderOptions.materials[0] = getMaterial(materialName);\r\n    }\r\n    if (option.name === 'Floor Material') {\r\n      const materialName = option.options[option.value];\r\n      this.renderOptions.materials[1] = getMaterial(materialName);\r\n    }\r\n    if (option.name === 'Ceiling Material') {\r\n      const materialName = option.options[option.value];\r\n      this.renderOptions.materials[2] = getMaterial(materialName);\r\n    }\r\n  }\r\n\r\n  initScene() {\r\n    const gl = this.gl;\r\n    const { size, maze } = this._generateMaze();\r\n\r\n    const model = new MazeModel(gl, maze);\r\n    this.scene = {\r\n      actors: [\r\n        {\r\n          model,\r\n          location: [0.0, 0.0, -2.0 * size],\r\n          rotation: { angle: 0.0, axis: [0, 1, 0], speed: 0.5 }\r\n        }\r\n      ],\r\n      camera: [0.0, 0.0, 0.0]\r\n    };\r\n    this.renderOptions.pointLight.position = [0.0, size, -2.0 * size];\r\n    this.renderOptions.pointLight.brightness = size * size;\r\n  }\r\n\r\n  createMaze() {\r\n    const { size, maze } = this._generateMaze();\r\n    this.scene.actors[0].location = [0.0, 0.0, -2.0 * size];\r\n    this.scene.actors[0].model.update(maze);\r\n    this.renderOptions.pointLight.position = [0.0, 10.0, -2.0 * size];\r\n  }\r\n\r\n  _generateMaze() {\r\n    const size = Math.floor(Math.random() * 35) * 2 + 11;\r\n    const maze = generateMaze(size, size);\r\n    return { size, maze };\r\n  }\r\n\r\n  createDungeon() {\r\n    const { size, maze } = this._generateDungeon();\r\n    this.scene.actors[0].location = [0.0, 0.0, -2.0 * size];\r\n    this.scene.actors[0].model.update(maze);\r\n    this.renderOptions.pointLight.position = [0.0, 10.0, -2.0 * size];\r\n  }\r\n\r\n  _generateDungeon() {\r\n    const size = Math.floor(Math.random() * 35) * 2 + 11;\r\n    const maze = generateDungeon(size, size);\r\n    return { size, maze };\r\n  }\r\n\r\n  drawScene(deltaTime) {\r\n    const gl = this.gl;\r\n    const scene = this.scene;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 500.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, scene.camera);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      this._renderActor(projectionMatrix, viewMatrix, actor);\r\n      this._animateActor(deltaTime, actor);\r\n    }\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    mat4.rotate(modelMatrix, modelMatrix, degreesToRadians(45), [1, 0, 0]);\r\n    mat4.rotate(modelMatrix, modelMatrix, actor.rotation.angle, actor.rotation.axis);\r\n\r\n    if (this.renderOptions.useMaterials) {\r\n      this.renderOptions.shaderIndex = 1;\r\n    } else {\r\n      this.renderOptions.shaderIndex = 0;\r\n    }\r\n\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix, this.renderOptions);\r\n  }\r\n\r\n  _animateActor(deltaTime, actor) {\r\n    actor.rotation.angle += deltaTime * actor.rotation.speed;\r\n  }\r\n}\r\n\r\nexport default MazeScene;\r\n","import Model from './Model';\r\n\r\nclass BrickWallModel extends Model {\r\n  constructor(gl) {\r\n    super(gl);\r\n    this.gl = gl;\r\n    this.draw = this.draw.bind(this);\r\n    this._initModel({\r\n      gl,\r\n      geometry: this._geometry,\r\n      texture: {\r\n        diffuse: 'images/Brick_Wall_017_basecolor.jpg',\r\n        normal: 'images/Brick_Wall_017_normal.jpg',\r\n        height: 'images/Brick_Wall_017_height.png',\r\n        occlusion: 'images/Brick_Wall_017_ambientOcclusion.jpg'\r\n      },\r\n      shader: {\r\n        vertex: 'shaders/texture_LDNOP/vertex.glsl',\r\n        fragment: 'shaders/texture_LDNOP/fragment.glsl'\r\n      }\r\n    });\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix, options) {\r\n    const {\r\n      showDiffuseMap,\r\n      showNormalMap,\r\n      showAmbientOcclusionMap,\r\n      showParallaxMap,\r\n      parallaxHeightScale,\r\n      parallaxSteps,\r\n      parallaxOcclusionMapping,\r\n    } = options;\r\n    this._drawModel({\r\n      projectionMatrix,\r\n      viewMatrix,\r\n      modelMatrix,\r\n      showDiffuseMap,\r\n      showNormalMap,\r\n      showAmbientOcclusionMap,\r\n      showParallaxMap,\r\n      parallaxHeightScale,\r\n      parallaxSteps,\r\n      parallaxOcclusionMapping,\r\n      ambientLight: [0.3, 0.3, 0.3],\r\n      directionalLight: {\r\n        color: [0.4, 0.4, 0.4],\r\n        direction: [0.0, -1.0, 1.0]\r\n      },\r\n      pointLight: {\r\n        color: [1.0, 1.0, 1.0],\r\n        position: [0.0, 0.0, 0.0],\r\n        brightness: 15.0\r\n      },\r\n      cameraPos: [0.0, 0.0, 0.0]\r\n    });\r\n  }\r\n\r\n  _geometry({ addSquare }) {\r\n    const f0 = [-1, -1, 1];\r\n    const f1 = [1, -1, 1];\r\n    const f2 = [1, 1, 1];\r\n    const f3 = [-1, 1, 1];\r\n    const b0 = [-1, -1, -1];\r\n    const b1 = [1, -1, -1];\r\n    const b2 = [1, 1, -1];\r\n    const b3 = [-1, 1, -1];\r\n    addSquare(f0, f1, f2, f3);  // front\r\n    addSquare(b1, b0, b3, b2);  // back\r\n    addSquare(b0, f0, f3, b3);  // left\r\n    addSquare(f1, b1, b2, f2);  // right\r\n    addSquare(b0, b1, f1, f0);  // top\r\n    addSquare(b2, b3, f3, f2);  // bottom\r\n  }\r\n}\r\n\r\nexport default BrickWallModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen } from '../lib/utility'\r\nimport BrickWallModel from '../models/BrickWallModel';\r\n\r\nclass BrickWallScene {\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n    this.setOption = this.setOption.bind(this);\r\n    this.initScene = this.initScene.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n    this.renderOptions = {\r\n      showDiffuseMap: true,\r\n      showNormalMap: true,\r\n      showAmbientOcclusionMap: true,\r\n      showParallaxMap: true,\r\n      parallaxHeightScale: 0.04,\r\n      parallaxSteps: 32,\r\n      parallaxOcclusionMapping: true\r\n    };\r\n    this.options = [\r\n      {\r\n        description: 'Brick cube with diffuse, normal, ambient occlusion, and parallax maps',\r\n        type: 'description'\r\n      },\r\n      {\r\n        name: 'Show Diffuse Map',\r\n        id: 'showDiffuseMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Show Normal Map',\r\n        id: 'showNormalMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Show Ambient Occlusion Map',\r\n        id: 'showAmbientOcclusionMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Show Parallax Map',\r\n        id: 'showParallaxMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Parallax Height Scale',\r\n        id: 'parallaxHeightScale',\r\n        type: 'float',\r\n        min: 0.0,\r\n        max: 0.1\r\n      },\r\n      {\r\n        name: 'Parallax Steps',\r\n        id: 'parallaxSteps',\r\n        type: 'int',\r\n        min: 0,\r\n        max: 32\r\n      },\r\n      {\r\n        name: 'Use Parallax Occlusion Mapping',\r\n        id: 'parallaxOcclusionMapping',\r\n        type: 'bool'\r\n      }\r\n    ];\r\n    for (let i = 0; i < this.options.length; i++) {\r\n      this.options[i].value = this.renderOptions[this.options[i].id];\r\n    }\r\n    this.credits = [\r\n      'Textures created by João Paulo',\r\n      'link:https://3dtextures.me/about/'\r\n    ];\r\n  }\r\n\r\n  setOption(option, value) {\r\n    option.value = Number(value);\r\n    this.renderOptions[option.id] = option.value;\r\n  }\r\n\r\n  initScene() {\r\n    const gl = this.gl;\r\n    const model = new BrickWallModel(gl);\r\n    this.scene = {\r\n      actors: [\r\n        {\r\n          model,\r\n          location: [0.0, 0.0, -5.5],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.4\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.2\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      camera: [0.0, 0.0, 0.0]\r\n    };\r\n  }\r\n\r\n  drawScene(deltaTime) {\r\n    const gl = this.gl;\r\n    const scene = this.scene;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 100.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, scene.camera);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      this._renderActor(projectionMatrix, viewMatrix, actor);\r\n      this._animateActor(deltaTime, actor);\r\n    }\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      mat4.rotate(modelMatrix, modelMatrix, rotation.angle, rotation.axis);\r\n    }\r\n\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix, this.renderOptions);\r\n  }\r\n\r\n  _animateActor(deltaTime, actor) {\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      rotation.angle += deltaTime * rotation.speed;\r\n    }\r\n  }\r\n}\r\n\r\nexport default BrickWallScene;\r\n","import Model from './Model';\r\nimport { getShape } from '../lib/shapes';\r\n\r\nclass MaterialModel extends Model {\r\n  constructor(gl, shapeName) {\r\n    super(gl);\r\n    this.gl = gl;\r\n    this.draw = this.draw.bind(this);\r\n    this._initModel({\r\n      gl,\r\n      geometry: ({ addFaces }) => {\r\n        const shape = getShape(shapeName);\r\n        addFaces(shape.vertices, shape.faces);\r\n      },\r\n      shader: {\r\n        vertex: 'shaders/material_L/vertex.glsl',\r\n        fragment: 'shaders/material_L/fragment.glsl'\r\n      }\r\n    });\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix, options) {\r\n    const { cameraPos, lights, material, lightingModel } = options;\r\n    this._drawModel({\r\n      projectionMatrix,\r\n      viewMatrix,\r\n      modelMatrix,\r\n      cameraPos,\r\n      lights,\r\n      material,\r\n      lightingModel\r\n    });\r\n  }\r\n}\r\n\r\nexport default MaterialModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen } from '../lib/utility';\r\nimport { getMaterialList, getMaterial } from '../lib/materials';\r\nimport MaterialModel from '../models/MaterialModel';\r\n\r\nclass MaterialScene {\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n    this.setOption = this.setOption.bind(this);\r\n    this.initScene = this.initScene.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n    this.renderOptions = {\r\n      lights: [\r\n        {\r\n          position: [10.0, -10.0, 0.0],\r\n          ambient: [0.2, 0.2, 0.2],\r\n          diffuse: [0.5, 0.5, 0.5],\r\n          specular: [0.9, 0.9, 0.9]\r\n        },\r\n        {\r\n          position: [-10.0, 10.0, 0.0],\r\n          ambient: [0.2, 0.2, 0.2],\r\n          diffuse: [0.5, 0.5, 0.5],\r\n          specular: [0.9, 0.9, 0.9]\r\n        }\r\n      ],\r\n      materials: new Array(3).fill(0),\r\n      lightingModel: 2\r\n    };\r\n    const materialList = getMaterialList();\r\n    this.options = [\r\n      {\r\n        description: 'Various solid geometries with various materials using Phong shading',\r\n        type: 'description'\r\n      },\r\n      {\r\n        name: 'Material 1',\r\n        type: 'select',\r\n        options: materialList\r\n      },\r\n      {\r\n        name: 'Material 2',\r\n        type: 'select',\r\n        options: materialList\r\n      },\r\n      {\r\n        name: 'Material 3',\r\n        type: 'select',\r\n        options: materialList\r\n      }\r\n    ];\r\n\r\n    this.setOption(this.options[1], 8);\r\n    this.setOption(this.options[2], 10);\r\n    this.setOption(this.options[3], 2);\r\n  }\r\n\r\n  setOption(option, value) {\r\n    option.value = Number(value);\r\n    if (option.id) {\r\n      this.renderOptions[option.id] = option.value;\r\n    }\r\n    if (option.name === 'Material 1') {\r\n      const materialName = option.options[option.value];\r\n      this.renderOptions.materials[0] = getMaterial(materialName);\r\n    }\r\n    else if (option.name === 'Material 2') {\r\n      const materialName = option.options[option.value];\r\n      this.renderOptions.materials[1] = getMaterial(materialName);\r\n    }\r\n    else if (option.name === 'Material 3') {\r\n      const materialName = option.options[option.value];\r\n      this.renderOptions.materials[2] = getMaterial(materialName);\r\n    }\r\n  }\r\n\r\n  initScene() {\r\n    const gl = this.gl;\r\n    const model4 = new MaterialModel(gl, 'tetrahedron');\r\n    const model6 = new MaterialModel(gl, 'cube');\r\n    const model8 = new MaterialModel(gl, 'octahedron');\r\n    const model10 = new MaterialModel(gl, 'pentagonaltrapezohedron');\r\n    const model12 = new MaterialModel(gl, 'dodecahedron');\r\n    const model20 = new MaterialModel(gl, 'icosahedron');\r\n\r\n    this.scene = {\r\n      actors: [\r\n        {\r\n          model: model4,\r\n          materialIndex: 1,\r\n          location: [-3.75, 0.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model6,\r\n          materialIndex: 1,\r\n          location: [-2.25, 0.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model8,\r\n          materialIndex: 1,\r\n          location: [-0.75, 0.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model10,\r\n          materialIndex: 1,\r\n          location: [0.75, 0.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model12,\r\n          materialIndex: 1,\r\n          location: [2.25, 0.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model20,\r\n          materialIndex: 1,\r\n          location: [3.75, 0.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model4,\r\n          materialIndex: 0,\r\n          location: [-3.75, 2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model6,\r\n          materialIndex: 0,\r\n          location: [-2.25, 2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model8,\r\n          materialIndex: 0,\r\n          location: [-0.75, 2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model10,\r\n          materialIndex: 0,\r\n          location: [0.75, 2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model12,\r\n          materialIndex: 0,\r\n          location: [2.25, 2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model20,\r\n          materialIndex: 0,\r\n          location: [3.75, 2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model4,\r\n          materialIndex: 2,\r\n          location: [-3.75, -2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model6,\r\n          materialIndex: 2,\r\n          location: [-2.25, -2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model8,\r\n          materialIndex: 2,\r\n          location: [-0.75, -2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model10,\r\n          materialIndex: 2,\r\n          location: [0.75, -2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model12,\r\n          materialIndex: 2,\r\n          location: [2.25, -2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          model: model20,\r\n          materialIndex: 2,\r\n          location: [3.75, -2.0, -8.0],\r\n          rotations: [\r\n            {\r\n              angle: 0.0,\r\n              axis: [0, 1, 0],\r\n              speed: 0.8\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0],\r\n              speed: 0.4\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      camera: [0.0, 0.0, 0.0]\r\n    };\r\n  }\r\n\r\n  drawScene(deltaTime) {\r\n    const gl = this.gl;\r\n    const scene = this.scene;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 100.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, scene.camera);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    this.renderOptions.cameraPos = scene.camera;\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      this._renderActor(projectionMatrix, viewMatrix, actor);\r\n      this._animateActor(deltaTime, actor);\r\n    }\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      mat4.rotate(modelMatrix, modelMatrix, rotation.angle, rotation.axis);\r\n    }\r\n\r\n    this.renderOptions.material = this.renderOptions.materials[actor.materialIndex]\r\n\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix, this.renderOptions);\r\n  }\r\n\r\n  _animateActor(deltaTime, actor) {\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      rotation.angle += deltaTime * rotation.speed;\r\n    }\r\n  }\r\n}\r\n\r\nexport default MaterialScene;\r\n","export function collideRectangles(r1, r2) {\r\n  if (r1.x2 <= r2.x1 || r1.x1 >= r2.x2 || r1.y2 <= r2.y1 || r1.y1 >= r2.y2) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function collideCircles(cx, cy, radius, tx, ty, targetRadius) {\r\n  const distance = (cx - tx) * (cx - tx) + (cy - ty) * (cy - ty);\r\n  if (distance < (radius + targetRadius) * (radius + targetRadius)) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function collideCircleRectangle(cx, cy, radius, x1, y1, x2, y2) {\r\n  const epsilon = radius / 3.0;\r\n  let type = 0;\r\n  let testX = cx;\r\n  let testY = cy;\r\n  if (cx < x1 - epsilon) {\r\n    type |= 1;\r\n    testX = x1;\r\n  } else if (cx > x2 + epsilon) {\r\n    type |= 1;\r\n    testX = x2;\r\n  }\r\n  if (cy < y1 - epsilon) {\r\n    type |= 2;\r\n    testY = y1;\r\n  } else if (cy > y2 + epsilon) {\r\n    type |= 2;\r\n    testY = y2;\r\n  }\r\n  const distX = cx - testX;\r\n  const distY = cy - testY;\r\n  const distance = (distX * distX) + (distY * distY);\r\n  if (distance <= radius * radius) {\r\n    return type;\r\n  }\r\n  return 0;\r\n}\r\n","import Model from './Model';\r\n\r\nclass RoomModel extends Model {\r\n  constructor(gl, map) {\r\n    super(gl);\r\n    this.gl = gl;\r\n    this.map = map;\r\n    this.draw = this.draw.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this._geometry = this._geometry.bind(this);\r\n    this._initModel({\r\n      gl,\r\n      geometry: this._geometry,\r\n      textures: [\r\n        {\r\n          diffuse: 'images/Brick_Wall_017_basecolor.jpg',\r\n          normal: 'images/Brick_Wall_017_normal.jpg',\r\n          height: 'images/Brick_Wall_017_height.png',\r\n          occlusion: 'images/Brick_Wall_017_ambientOcclusion.jpg'\r\n        },\r\n        {\r\n          diffuse: 'images/Tiles_035_basecolor.jpg',\r\n          normal: 'images/Tiles_035_normal.jpg',\r\n          height: 'images/Tiles_035_height.png',\r\n          occlusion: 'images/Tiles_035_ambientOcclusion.jpg'\r\n        },\r\n        {\r\n          diffuse: 'images/Wood_planks_011_basecolor.jpg',\r\n          normal: 'images/Wood_planks_011_normal.jpg',\r\n          height: 'images/Wood_planks_011_height.png',\r\n          occlusion: 'images/Wood_planks_011_ambientOcclusion.jpg'\r\n        }\r\n      ],\r\n      shader: {\r\n        vertex: 'shaders/texture_LDNOP/vertex.glsl',\r\n        fragment: 'shaders/texture_LDNOP/fragment.glsl'\r\n      }\r\n    });\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix, options) {\r\n    const {\r\n      showDiffuseMap,\r\n      showNormalMap,\r\n      showAmbientOcclusionMap,\r\n      showParallaxMap,\r\n      parallaxHeightScale,\r\n      parallaxSteps,\r\n      parallaxOcclusionMapping,\r\n      ambientLight,\r\n      directionalLight,\r\n      pointLight,\r\n      cameraPos\r\n    } = options;\r\n    this._drawModel({\r\n      projectionMatrix,\r\n      viewMatrix,\r\n      modelMatrix,\r\n      showDiffuseMap,\r\n      showNormalMap,\r\n      showAmbientOcclusionMap,\r\n      showParallaxMap,\r\n      parallaxHeightScale,\r\n      parallaxSteps,\r\n      parallaxOcclusionMapping,\r\n      ambientLight,\r\n      directionalLight,\r\n      pointLight,\r\n      cameraPos\r\n    });\r\n  }\r\n\r\n  update(map) {\r\n    this.map = map;\r\n    this._updateModel(this._geometry);\r\n  }\r\n\r\n  _geometry({ addSquare }) {\r\n    const { width, height, data } = this.map;\r\n\r\n    const check = (x, y) => {\r\n      if (x < 0 || y < 0 || x > width - 1 || y > height - 1) {\r\n        return true;\r\n      }\r\n      if (data[y][x] === 1) {\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const ofs_x = -width / 2;\r\n    const ofs_y = -height / 2;\r\n    for (let y = 0; y < height; y++) {\r\n      for (let x = 0; x < width; x++) {\r\n        const left = x + ofs_x;\r\n        const right = left + 1;\r\n        const back = y + ofs_y;\r\n        const front = back + 1;\r\n        const top = 1;\r\n        const bottom = 0;\r\n\r\n        const f0 = [left, top, front];\r\n        const f1 = [right, top, front];\r\n        const f2 = [right, bottom, front];\r\n        const f3 = [left, bottom, front];\r\n        const b0 = [left, top, back];\r\n        const b1 = [right, top, back];\r\n        const b2 = [right, bottom, back];\r\n        const b3 = [left, bottom, back];\r\n\r\n        const f0h = [left, top + 1, front];\r\n        const f1h = [right, top + 1, front];\r\n        const f2h = [right, bottom + 1, front];\r\n        const f3h = [left, bottom + 1, front];\r\n        const b0h = [left, top + 1, back];\r\n        const b1h = [right, top + 1, back];\r\n        const b2h = [right, bottom + 1, back];\r\n        const b3h = [left, bottom + 1, back];\r\n\r\n        if (data[y][x] === 0) {\r\n          addSquare(b2, b3, f3, f2, { bufferIndex: 1 });\r\n          addSquare(b0, b1, f1, f0, { bufferIndex: 2 });\r\n\r\n          if (y === 0 || data[y - 1][x] === 1) {\r\n            addSquare(b1, b0, b3, b2);\r\n          }\r\n\r\n          if (x === 0 || data[y][x - 1] === 1) {\r\n            addSquare(b0, f0, f3, b3);\r\n          }\r\n\r\n          if (y === height - 1 || data[y + 1][x] === 1) {\r\n            addSquare(f0, f1, f2, f3);\r\n          }\r\n\r\n          if (x === width - 1 || data[y][x + 1] === 1) {\r\n            addSquare(f1, b1, b2, f2);\r\n          }\r\n        }\r\n        else if (data[y][x] === 2) {\r\n          const neighbors = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\r\n          for (let yo = -1; yo < 2; yo++) {\r\n            for (let xo = -1; xo < 2; xo++) {\r\n              neighbors[(yo + 1) * 3 + (xo + 1)] = check(x + xo, y + yo);\r\n            }\r\n          }\r\n\r\n          addSquare(b2, b3, f3, f2, { bufferIndex: 1 });\r\n          addSquare(b0h, b1h, f1h, f0h, { bufferIndex: 2 });\r\n\r\n          if (neighbors[1]) {\r\n            addSquare(b1, b0, b3, b2);\r\n            addSquare(b1h, b0h, b3h, b2h);\r\n          } else if (neighbors[0] && neighbors[2]) {\r\n            addSquare(b1h, b0h, b3h, b2h);\r\n          }\r\n\r\n          if (neighbors[3]) {\r\n            addSquare(b0, f0, f3, b3);\r\n            addSquare(b0h, f0h, f3h, b3h);\r\n          } else if (neighbors[0] && neighbors[6]) {\r\n            addSquare(b0h, f0h, f3h, b3h);\r\n          }\r\n\r\n          if (neighbors[7]) {\r\n            addSquare(f0, f1, f2, f3);\r\n            addSquare(f0h, f1h, f2h, f3h);\r\n          } else if (neighbors[6] && neighbors[8]) {\r\n            addSquare(f0h, f1h, f2h, f3h);\r\n          }\r\n\r\n          if (neighbors[5]) {\r\n            addSquare(f1, b1, b2, f2);\r\n            addSquare(f1h, b1h, b2h, f2h);\r\n          } else if (neighbors[2] && neighbors[8]) {\r\n            addSquare(f1h, b1h, b2h, f2h);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default RoomModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen, pickRandom } from '../lib/utility';\r\nimport { getMaterial } from '../lib/materials';\r\nimport { generateMaze, generateDungeon, getMazeBoundingSquares, getMazeStartLocation, getMazeSquareCenter } from '../lib/maze';\r\nimport { collideCircleRectangle, collideCircles } from '../lib/collision';\r\nimport RoomModel from '../models/RoomModel';\r\nimport MaterialModel from '../models/MaterialModel';\r\n\r\nconst shapes = ['tetrahedron', 'cube', 'octahedron', 'dodecahedron', 'icosahedron'];\r\nconst materials = ['gold', 'chrome', 'copper'];\r\n\r\nclass RoomScene {\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n    this.setOption = this.setOption.bind(this);\r\n    this.mouseMovement = this.mouseMovement.bind(this);\r\n    this.keyboardState = this.keyboardState.bind(this);\r\n    this.registerDataChange = this.registerDataChange.bind(this);\r\n    this.forceDataChange = this.forceDataChange.bind(this);\r\n    this.initScene = this.initScene.bind(this);\r\n    this.createMaze = this.createMaze.bind(this);\r\n    this.createDungeon = this.createDungeon.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n    const ambientLight = [0.1, 0.1, 0.1];\r\n    const directionalLight = {\r\n      color: [0.0, 0.0, 0.0],\r\n      direction: [0.0, 0.0, 0.0]\r\n    };\r\n    const pointLight = {\r\n      color: [0.6, 0.6, 0.6],\r\n      brightness: 15.0\r\n    };\r\n    this.renderOptions = {\r\n      showDiffuseMap: true,\r\n      showNormalMap: true,\r\n      showAmbientOcclusionMap: true,\r\n      showParallaxMap: false,\r\n      parallaxHeightScale: 0.02,\r\n      parallaxSteps: 32,\r\n      parallaxOcclusionMapping: true,\r\n      ambientLight,\r\n      directionalLight,\r\n      pointLight,\r\n      lights: [\r\n        {\r\n          ambient: [Math.min(ambientLight[0] * 2.0, 1.0), Math.min(ambientLight[1] * 2.0, 1.0), Math.min(ambientLight[2] * 2.0, 1.0)],\r\n          diffuse: pointLight.color,\r\n          specular: [Math.min(pointLight.color[0] * 2.0, 1.0), Math.min(pointLight.color[1] * 2.0, 1.0), Math.min(pointLight.color[2] * 2.0, 1.0)]\r\n        },\r\n        {\r\n          ambient: [0.0, 0.0, 0.0],\r\n          diffuse: [0.0, 0.0, 0.0],\r\n          specular: [0.0, 0.0, 0.0]\r\n        }\r\n      ],\r\n      lightingModel: 2\r\n    };\r\n    this.options = [\r\n      {\r\n        description: 'Explorable random maze geometry with diffuse, normal, ambient occlusion, and parallax maps',\r\n        type: 'description'\r\n      },\r\n      {\r\n        name: 'Show Diffuse Map',\r\n        id: 'showDiffuseMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Show Normal Map',\r\n        id: 'showNormalMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Show Ambient Occlusion Map',\r\n        id: 'showAmbientOcclusionMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Show Parallax Map',\r\n        id: 'showParallaxMap',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Parallax Height Scale',\r\n        id: 'parallaxHeightScale',\r\n        type: 'float',\r\n        min: 0.0,\r\n        max: 0.1\r\n      },\r\n      {\r\n        name: 'Parallax Steps',\r\n        id: 'parallaxSteps',\r\n        type: 'int',\r\n        min: 0,\r\n        max: 32\r\n      },\r\n      {\r\n        name: 'Use Parallax Occlusion Mapping',\r\n        id: 'parallaxOcclusionMapping',\r\n        type: 'bool'\r\n      },\r\n      {\r\n        name: 'Create Maze',\r\n        type: 'function',\r\n        function: this.createMaze\r\n      },\r\n      {\r\n        name: 'Create Dungeon',\r\n        type: 'function',\r\n        function: this.createDungeon\r\n      }\r\n    ];\r\n    for (let i = 0; i < this.options.length; i++) {\r\n      this.options[i].value = this.renderOptions[this.options[i].id];\r\n    }\r\n    this.credits = [\r\n      'Textures created by João Paulo',\r\n      'link:https://3dtextures.me/about/',\r\n      '',\r\n      'Maze generation is based on this article',\r\n      'link:https://journal.stuffwithstuff.com/2014/12/21/rooms-and-mazes/'\r\n    ];\r\n    this.movement = { front: 0.0, side: 0.0 };\r\n  }\r\n\r\n  setOption(option, value) {\r\n    option.value = Number(value);\r\n    this.renderOptions[option.id] = option.value;\r\n  }\r\n\r\n  mouseMovement(x, y) {\r\n    const camera = this.scene.camera;\r\n    camera.rotations[0].angle -= x * 0.001;\r\n    camera.rotations[1].angle -= y * 0.001;\r\n  }\r\n\r\n  keyboardState(keys) {\r\n    let front = 0.0;\r\n    if (keys['w']) {\r\n      front -= 1.0;\r\n    }\r\n    if (keys['s']) {\r\n      front += 1.0;\r\n    }\r\n    let side = 0.0;\r\n    if (keys['a']) {\r\n      side -= 1.0;\r\n    }\r\n    if (keys['d']) {\r\n      side += 1.0;\r\n    }\r\n    this.movement.front = front;\r\n    this.movement.side = side;\r\n  }\r\n\r\n  registerDataChange(onDataChange) {\r\n    this.onDataChange = onDataChange;\r\n  }\r\n\r\n  forceDataChange() {\r\n    this._updatePowerUpInfo(this.scene.actors);\r\n  }\r\n\r\n  initScene() {\r\n    this._updateMap(this.gl, false);\r\n  }\r\n\r\n  createMaze() {\r\n    this._updateMap(this.gl, false);\r\n  }\r\n\r\n  createDungeon() {\r\n    this._updateMap(this.gl, true);\r\n  }\r\n\r\n  _updateMap(gl, dungeon) {\r\n    this.ready = false;\r\n    if (dungeon) {\r\n      this.map = generateDungeon(15, 15);\r\n    } else {\r\n      this.map = generateMaze(11, 11);\r\n    }\r\n    const { location, angle, square, nextSquare } = getMazeStartLocation(this.map);\r\n    if (this.scene) {\r\n      if (this.scene.actors.length > 1) {\r\n        this.scene.actors.length = 1;\r\n      }\r\n      this.scene.actors[0].boundingRectagles = getMazeBoundingSquares(this.map);\r\n      this.scene.actors[0].model.update(this.map);\r\n      this.scene.camera.location = location;\r\n      this.scene.camera.rotations[0].angle = angle;\r\n    } else {\r\n      const model = new RoomModel(gl, this.map);\r\n      this.scene = {\r\n        actors: [\r\n          {\r\n            active: true,\r\n            boundingRectagles: getMazeBoundingSquares(this.map),\r\n            model,\r\n            location: [0.0, 0.0, 0.0],\r\n            rotations: []\r\n          }\r\n        ],\r\n        camera: {\r\n          location,\r\n          rotations: [\r\n            {\r\n              angle,\r\n              axis: [0, 1, 0]\r\n            },\r\n            {\r\n              angle: 0.0,\r\n              axis: [1, 0, 0]\r\n            }\r\n          ]\r\n        }\r\n      };\r\n    }\r\n    this._placePowerUps(this.scene, this.map, square.x, square.y, nextSquare.x, nextSquare.y);\r\n    this.ready = true;\r\n  }\r\n\r\n  _placePowerUps(scene, map, sx, sy, tx, ty) {\r\n    const { width, height, data } = map;\r\n    for (let y = 0; y < height; y++) {\r\n      for (let x = 0; x < width; x++) {\r\n        if (data[y][x] !== 1) {\r\n          if (x === sx && y === sy) {\r\n            continue;\r\n          }\r\n          if ((x === tx && y === ty) || Math.random() < 0.2) {\r\n            const location = getMazeSquareCenter(map, x, y, 0.4);\r\n            scene.actors.push({\r\n              active: true,\r\n              boundingRadius: 0.1,\r\n              model: new MaterialModel(this.gl, pickRandom(shapes)),\r\n              material: getMaterial(pickRandom(materials)),\r\n              location,\r\n              scale: [0.15, 0.15, 0.15],\r\n              rotations: [\r\n                {\r\n                  angle: 0.0,\r\n                  axis: [1, 0, 0],\r\n                  speed: 1.0 + Math.random()\r\n                },\r\n                {\r\n                  angle: 0.0,\r\n                  axis: [0, 1, 0],\r\n                  speed: 2.0 + Math.random() + Math.random()\r\n                }\r\n              ]\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this._updatePowerUpInfo(scene.actors);\r\n  }\r\n\r\n  _updatePowerUpInfo(actors) {\r\n    let collected = 0;\r\n    let total = 0;\r\n    for (let i = 0; i < actors.length; i++) {\r\n      const actor = actors[i];\r\n      if (actor.boundingRadius) {\r\n        total++;\r\n        if (!actor.active) {\r\n          collected++;\r\n        }\r\n      }\r\n    }\r\n    this.onDataChange({ collected, total });\r\n  }\r\n\r\n  drawScene(deltaTime) {\r\n    if (!this.ready) {\r\n      return;\r\n    }\r\n\r\n    const gl = this.gl;\r\n    const scene = this.scene;\r\n    const camera = scene.camera;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 100.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, camera.location);\r\n    for (let i = 0; i < camera.rotations.length; i++) {\r\n      const rotation = camera.rotations[i];\r\n      mat4.rotate(viewMatrix, viewMatrix, rotation.angle, rotation.axis);\r\n    }\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    this.renderOptions.cameraPos = camera.location;\r\n    this.renderOptions.pointLight.position = camera.location;\r\n    this.renderOptions.lights[0].position = camera.location;\r\n    this.renderOptions.lights[1].position = camera.location;\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      if (actor.active) {\r\n        this._renderActor(projectionMatrix, viewMatrix, actor);\r\n        this._animateActor(deltaTime, actor);\r\n      }\r\n    }\r\n\r\n    mat4.identity(viewMatrix);\r\n    mat4.rotate(viewMatrix, viewMatrix, camera.rotations[0].angle, camera.rotations[0].axis);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    const x = camera.location[0];\r\n    const y = camera.location[2];\r\n\r\n    camera.location[0] += deltaTime * this.movement.front * viewMatrix[2];\r\n    camera.location[1] += deltaTime * this.movement.front * viewMatrix[6];\r\n    camera.location[2] += deltaTime * this.movement.front * viewMatrix[10];\r\n\r\n    camera.location[0] += deltaTime * this.movement.side * viewMatrix[0];\r\n    camera.location[1] += deltaTime * this.movement.side * viewMatrix[4];\r\n    camera.location[2] += deltaTime * this.movement.side * viewMatrix[8];\r\n\r\n    this._detectCollisions(camera, x, y, scene);\r\n  }\r\n\r\n  _detectCollisions(camera, x, y, scene) {\r\n    // collision detection against map\r\n    const cx = camera.location[0];\r\n    const cy = camera.location[2];\r\n    const radius = 0.2;\r\n    const mapBounds = scene.actors[0].boundingRectagles;\r\n    const len = mapBounds.length;\r\n    let collision = 0;\r\n    for (let i = 0; i < len; i++) {\r\n      const rect = mapBounds[i];\r\n      collision |= collideCircleRectangle(cx, cy, radius, rect.x1, rect.y1, rect.x2, rect.y2);\r\n    }\r\n    if (collision !== 0) {\r\n      if (collision === 1) {\r\n        camera.location[0] = x;\r\n      } else if (collision === 2) {\r\n        camera.location[2] = y;\r\n      } else {\r\n        camera.location[0] = x;\r\n        camera.location[2] = y;\r\n      }\r\n    }\r\n\r\n    // collision detection against power-ups\r\n    collision = 0;\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      if (actor.active && actor.boundingRadius) {\r\n        if (collideCircles(cx, cy, radius, actor.location[0], actor.location[2], actor.boundingRadius)) {\r\n          collision++;\r\n          actor.active = false;\r\n        }\r\n      }\r\n    }\r\n    if (collision > 0) {\r\n      this._updatePowerUpInfo(scene.actors);\r\n    }\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    if (actor.scale) {\r\n      mat4.scale(modelMatrix, modelMatrix, actor.scale);\r\n    }\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      mat4.rotate(modelMatrix, modelMatrix, rotation.angle, rotation.axis);\r\n    }\r\n\r\n    if (actor.material) {\r\n      this.renderOptions.material = actor.material;\r\n    }\r\n\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix, this.renderOptions);\r\n  }\r\n\r\n  _animateActor(deltaTime, actor) {\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      rotation.angle += deltaTime * rotation.speed;\r\n    }\r\n  }\r\n}\r\n\r\nexport default RoomScene;\r\n","import ColorScene from '../scenes/ColorScene';\r\nimport TextureScene from '../scenes/TextureScene';\r\nimport MazeScene from '../scenes/MazeScene';\r\nimport BrickWallScene from '../scenes/BrickWallScene';\r\nimport MaterialScene from '../scenes/MaterialScene';\r\nimport RoomScene from '../scenes/RoomScene';\r\n\r\nclass SceneManager {\r\n  constructor(canvas, onDataChange) {\r\n    this.canvas = canvas;\r\n    this.onDataChange = onDataChange;\r\n\r\n    this.resizeViewport = this.resizeViewport.bind(this);\r\n    this.getScene = this.getScene.bind(this);\r\n    this.previousScene = this.previousScene.bind(this);\r\n    this.nextScene = this.nextScene.bind(this);\r\n    this.renderScene = this.renderScene.bind(this);\r\n\r\n    this.gl = canvas.getContext('webgl');\r\n    if (this.gl === null) {\r\n      alert(\"Unable to initialize WebGL. Your browser or machine may not support it.\");\r\n    } else {\r\n      this.resizeViewport();\r\n      this.gl.enable(this.gl.CULL_FACE);\r\n      this.gl.cullFace(this.gl.BACK);\r\n      this.scenes = [\r\n        new ColorScene(this.gl),\r\n        new TextureScene(this.gl),\r\n        new MaterialScene(this.gl),\r\n        new MazeScene(this.gl),\r\n        new BrickWallScene(this.gl),\r\n        new RoomScene(this.gl)\r\n      ];\r\n      this.sceneIndex = 0;\r\n\r\n      for (let i = 0; i < this.scenes.length; i++) {\r\n        const scene = this.scenes[i];\r\n        if (scene.registerDataChange) {\r\n          scene.registerDataChange(this.onDataChange);\r\n        }\r\n        scene.initScene();\r\n      }\r\n    }\r\n  }\r\n\r\n  resizeViewport() {\r\n    const canvas = this.canvas;\r\n    const rect = canvas.getBoundingClientRect()\r\n    canvas.width = rect.width;\r\n    canvas.height = rect.height;\r\n    this.gl.viewport(0, 0, canvas.width, canvas.height);\r\n  }\r\n\r\n  getScene() {\r\n    return this.scenes[this.sceneIndex];\r\n  }\r\n\r\n  previousScene() {\r\n    this.sceneIndex = (this.sceneIndex - 1) % this.scenes.length;\r\n    if (this.sceneIndex < 0) {\r\n      this.sceneIndex = this.scenes.length - 1;\r\n    }\r\n    const scene = this.scenes[this.sceneIndex];\r\n    if (scene.forceDataChange) {\r\n      scene.forceDataChange();\r\n    }\r\n    return this.scenes[this.sceneIndex];\r\n  }\r\n\r\n  nextScene() {\r\n    this.sceneIndex = (this.sceneIndex + 1) % this.scenes.length;\r\n    const scene = this.scenes[this.sceneIndex];\r\n    if (scene.forceDataChange) {\r\n      scene.forceDataChange();\r\n    }\r\n    return this.scenes[this.sceneIndex];\r\n  }\r\n\r\n  renderScene(timeStamp) {\r\n    timeStamp *= 0.001;\r\n    if (!this.timeStamp) {\r\n      this.timeStamp = timeStamp;\r\n    }\r\n    const deltaTime = timeStamp - this.timeStamp;\r\n    this.timeStamp = timeStamp;\r\n    const scene = this.scenes[this.sceneIndex];\r\n    scene.drawScene(deltaTime);\r\n  }\r\n}\r\n\r\nexport default SceneManager;\r\n","import React from 'react';\r\nimport Message from './Message';\r\nimport Controls from './Controls';\r\nimport Credits from './Credits';\r\nimport SceneManager from '../lib/SceneManager';\r\n\r\nconst exploreNotes = ['Click the canvas to explore the scene'];\r\nconst movementNotes = ['Use the mouse to look', 'Use the WASD keys to move around'];\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onResize = this.onResize.bind(this);\r\n    this.onKeyDown = this.onKeyDown.bind(this);\r\n    this.onKeyUp = this.onKeyUp.bind(this);\r\n    this.onMouseMove = this.onMouseMove.bind(this);\r\n    this.onDataChange = this.onDataChange.bind(this);\r\n    this.onLockChange = this.onLockChange.bind(this);\r\n    this.onClickCanvas = this.onClickCanvas.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onClickPrevious = this.onClickPrevious.bind(this);\r\n    this.onClickNext = this.onClickNext.bind(this);\r\n    this.onClickMessage = this.onClickMessage.bind(this);\r\n    this.onAnimationFrame = this.onAnimationFrame.bind(this);\r\n    this.state = {\r\n      showControls: false\r\n    }\r\n    this.keys = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.sceneManager = new SceneManager(this.canvas, this.onDataChange);\r\n    const scene = this.sceneManager.getScene();\r\n    const notes = scene.mouseMovement ? exploreNotes : undefined;\r\n    this.setState({ scene, notes, sceneData: undefined });\r\n    this.canvas.requestPointerLock = this.canvas.requestPointerLock || this.canvas.mozRequestPointerLock;\r\n    document.exitPointerLock = document.exitPointerLock || document.mozExitPointerLock;\r\n    this.frame = window.requestAnimationFrame(this.onAnimationFrame);\r\n    window.addEventListener('resize', this.onResize);\r\n    window.addEventListener('keydown', this.onKeyDown);\r\n    window.addEventListener('keyup', this.onKeyUp);\r\n    document.addEventListener('pointerlockchange', this.onLockChange);\r\n    document.addEventListener('mozpointerlockchange', this.onLockChange);\r\n    this.showMessage(['Press Escape to toggle menu', 'Press Page Up for previous screen', 'Press Page Down for next screen']);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.cancelAnimationFrame(this.frame);\r\n    window.removeEventListener('resize', this.onResize);\r\n    window.removeEventListener('keydown', this.onKeyDown);\r\n    window.removeEventListener('keyup', this.onKeyUp);\r\n    document.removeEventListener('pointerlockchange', this.onLockChange);\r\n    document.removeEventListener('mozpointerlockchange', this.onLockChange);\r\n  }\r\n\r\n  cancelLock() {\r\n    this.captureMouse = false;\r\n    this.captureKeys = false;\r\n    document.exitPointerLock();\r\n  }\r\n\r\n  onResize() {\r\n    this.sceneManager.resizeViewport();\r\n  }\r\n\r\n  onKeyDown(event) {\r\n    event.preventDefault();\r\n    if (!this.keys[event.key]) {\r\n      this.onKeyPress(event.key);\r\n      this.keys[event.key] = true;\r\n      if (this.captureKeys) {\r\n        this.state.scene.keyboardState(this.keys);\r\n      }\r\n    }\r\n  }\r\n\r\n  onKeyUp(event) {\r\n    event.preventDefault();\r\n    this.keys[event.key] = false;\r\n    if (this.captureKeys) {\r\n      this.state.scene.keyboardState(this.keys);\r\n    }\r\n  }\r\n\r\n  onKeyPress(key) {\r\n    if (key === 'Escape') {\r\n      if (this.messageTimer) {\r\n        this.cancelMessage();\r\n      } else {\r\n        this.setState({ showControls: !this.state.showControls });\r\n      }\r\n    } else if (key === 'PageUp') {\r\n      this.cancelLock();\r\n      this.setState({ sceneData: undefined });\r\n      const scene = this.sceneManager.previousScene();\r\n      const notes = scene.mouseMovement ? exploreNotes : undefined;\r\n      this.setState({ scene, notes });\r\n    } else if (key === 'PageDown') {\r\n      this.cancelLock();\r\n      this.setState({ sceneData: undefined });\r\n      const scene = this.sceneManager.nextScene();\r\n      const notes = scene.mouseMovement ? exploreNotes : undefined;\r\n      this.setState({ scene, notes });\r\n    }\r\n  }\r\n\r\n  onMouseMove(event) {\r\n    if (this.captureMouse) {\r\n      this.state.scene.mouseMovement(event.movementX, event.movementY);\r\n    }\r\n  }\r\n\r\n  onDataChange(sceneData) {\r\n    this.setState({ sceneData });\r\n  }\r\n\r\n  onLockChange(event) {\r\n    event.preventDefault();\r\n    if (document.pointerLockElement === this.canvas || document.mozPointerLockElement === this.canvas) {\r\n      document.addEventListener(\"mousemove\", this.onMouseMove);\r\n      this.captureMouse = true;\r\n      if (this.state.scene.keyboardState) {\r\n        this.captureKeys = true;\r\n      }\r\n      this.setState({ notes: movementNotes });\r\n    } else {\r\n      document.removeEventListener(\"mousemove\", this.onMouseMove);\r\n      this.captureMouse = false;\r\n      this.captureKeys = false;\r\n      this.setState({ notes: undefined });\r\n    }\r\n  }\r\n\r\n  onClickCanvas(event) {\r\n    event.preventDefault();\r\n    if (this.state.scene.mouseMovement) {\r\n      this.canvas.requestPointerLock();\r\n      this.setState({ showControls: false, notes: undefined });\r\n    }\r\n  }\r\n\r\n  onChange(option, value) {\r\n    if (value !== option.value) {\r\n      this.state.scene.setOption(option, value);\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  onClickPrevious(event) {\r\n    event.preventDefault();\r\n    this.cancelLock();\r\n    this.setState({ sceneData: undefined });\r\n    const scene = this.sceneManager.previousScene();\r\n    const notes = scene.mouseMovement ? exploreNotes : undefined;\r\n    this.setState({ scene, notes });\r\n  }\r\n\r\n  onClickNext(event) {\r\n    event.preventDefault();\r\n    this.cancelLock();\r\n    this.setState({ sceneData: undefined });\r\n    const scene = this.sceneManager.nextScene();\r\n    const notes = scene.mouseMovement ? exploreNotes : undefined;\r\n    this.setState({ scene, notes });\r\n  }\r\n\r\n  onClickMessage(event) {\r\n    event.preventDefault();\r\n    if (this.messageTimer) {\r\n      this.cancelMessage();\r\n    }\r\n  }\r\n\r\n  showMessage(message) {\r\n    this.setState({ message });\r\n    this.messageTimer = setTimeout(this.clearMessage.bind(this), 10000);\r\n  }\r\n\r\n  clearMessage() {\r\n    this.setState({ message: undefined });\r\n    this.messageTimer = undefined;\r\n  }\r\n\r\n  cancelMessage() {\r\n    clearTimeout(this.messageTimer);\r\n    this.clearMessage();\r\n  }\r\n\r\n  onAnimationFrame(timeStamp) {\r\n    this.sceneManager.renderScene(timeStamp);\r\n    this.frame = window.requestAnimationFrame(this.onAnimationFrame);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"screen\">\r\n        <canvas id=\"canvas\" ref={elem => this.canvas = elem} onClick={this.onClickCanvas}></canvas>\r\n        <div id=\"note\">\r\n          {this.state.notes ? (this.state.notes.map((note, key) => (<div key={key}>{note}</div>))) : null}\r\n          {this.state.sceneData && this.state.sceneData.total ? (<div>{this.state.sceneData.collected}/{this.state.sceneData.total} power-ups collected</div>) : null}\r\n        </div>\r\n        <Message message={this.state.message} onClick={this.onClickMessage} />\r\n        <Controls show={this.state.showControls} onClickPrevious={this.onClickPrevious} onClickNext={this.onClickNext} onChange={this.onChange} options={this.state.scene ? this.state.scene.options : undefined} />\r\n        <Credits show={this.state.showControls} credits={this.state.scene ? this.state.scene.credits : undefined} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}